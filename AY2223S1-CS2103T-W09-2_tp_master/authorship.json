[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W09-2/tp/branch/master/graph/badge.svg?token\u003d3BMHR6HHNQ)](https://codecov.io/gh/AY2223S1-CS2103T-W09-2/tp) [![CI Status](https://github.com/AY2223S1-CS2103T-W09-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W09-2/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"* This is **a project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"* **`Financial Advisor Planner` (`FAP` for short)** is a desktop application targetted at Financial Advisors. Financial Advisors often have many potential and current clients to keep track of. Our product will provide an easy way to store, manage, search and view clients information to help Financial Advisors in managing their clients and appoitments.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"  * As a financial advisor, you can keep track of your clients","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"  * As a financial advisor, you can view your appointments and schedule for the day","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":"  * As a financial advisor, you can store important information such as client\u0027s risk appetites and yearly salary","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":"* The project simulates an ongoing **brownfield software project** for a desktop application used to managing client information by Financial Advisors.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":"  * It is developed by a team of 5 from NUS Computing, you can find out more about us **[here](https://ay2223s1-cs2103t-w09-2.github.io/tp/AboutUs.html)**.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":"* It is named `Financial Advisor Planner`  because it allows financial advisors to plan their schedule and appointments with clients","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"* For the detailed documentation of this project, see the **[Financial Advisor Planner Website](https://ay2223s1-cs2103t-w09-2.github.io/tp/)**.","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"jialatteo":4,"rgonslayer":10,"-":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"### Lee Sen Wei","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"\u003cimg src\u003d\"images/senwei01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"[[github](https://github.com/senwei01)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"[[portfolio](team/senwei01.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"rgonslayer"},"content":"### Chew Yew Keng","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"rgonslayer"},"content":"\u003cimg src\u003d\"images/rgonslayer.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"rgonslayer"},"content":"[[github](http://github.com/rgonslayer)]","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"rgonslayer"},"content":"[[portfolio](team/rgonslayer.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"wongyewjon"},"content":"### Wong Yew Jon","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"wongyewjon"},"content":"\u003cimg src\u003d\"images/wongyewjon.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wongyewjon"},"content":"[[github](http://github.com/wongyewjon)]","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"wongyewjon"},"content":"[[portfolio](team/wongyewjon.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"### Muhammad Mus\u0027ab Bin Mustaffa","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"\u003cimg src\u003d\"images/muhdmusab.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"[[github](http://github.com/muhdmusab)]","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"[[portfolio](team/muhdmusab.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"### Gerald Teo Jin Wei","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"\u003cimg src\u003d\"images/jialatteo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"[[github](http://github.com/jialatteo)]","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"[[portfolio](team/jialatteo.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jialatteo":4,"rgonslayer":4,"MuhdMusab":4,"wongyewjon":4,"-":39,"senwei01":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"MuhdMusab"},"content":"* has a need to manage a significant number of clients","lastModifiedDate":"2022-09-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"MuhdMusab"},"content":"* requires a secure app to store sensitive client details","lastModifiedDate":"2022-09-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"MuhdMusab"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app while ensuring that client details are safe and secure.","lastModifiedDate":"2022-09-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                                           | So that I can…​                                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"wongyewjon"},"content":"|----------|--------------------------------------------|------------------------------------------------------------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-28"},{"lineNumber":276,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor                          | add new client                                                         | keep track of the client\u0027s profile                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":277,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor                          | delete a client                                                        | remove entries that are no longer needed                                                  |","lastModifiedDate":"2022-09-28"},{"lineNumber":278,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor                          | edit a client\u0027s profile                                                | update relevant and up-to-date information of the client                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":279,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor                          | search clients by name                                                 | retrieve information of clients without having to go through the entire list              |","lastModifiedDate":"2022-09-28"},{"lineNumber":280,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor                          | sort clients by alphabetical order                                     | have an organised list of contacts                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":281,"author":{"gitId":"wongyewjon"},"content":"| `* * *`  | financial advisor                          | store important information of clients                                 | make pivotal decisions on how to better suit the clients\u0027 needs based on their information |","lastModifiedDate":"2022-09-28"},{"lineNumber":282,"author":{"gitId":"wongyewjon"},"content":"| `* * `   | financial advisor                        | view the list of clients that are scheduled for meeting on a given day | be reminded and keep track of the scheduled meetings                                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":283,"author":{"gitId":"wongyewjon"},"content":"| `* *`    | financial advisor | have an image of my client                                             | remember and recognise the clients during the meetings                                    |","lastModifiedDate":"2022-09-28"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"jialatteo"},"content":"(For all use cases below, the **System** is the `Financial Advisor Planner` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"MuhdMusab"},"content":"**Use case: Add a client**","lastModifiedDate":"2022-09-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"MuhdMusab"},"content":"1.  User inputs add command with the client\u0027s information","lastModifiedDate":"2022-09-21"},{"lineNumber":296,"author":{"gitId":"jialatteo"},"content":"2.  Financial Advisor Planner adds the client and their information to the list","lastModifiedDate":"2022-09-24"},{"lineNumber":297,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":298,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":299,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":300,"author":{"gitId":"MuhdMusab"},"content":"**Extensions**","lastModifiedDate":"2022-09-21"},{"lineNumber":301,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":302,"author":{"gitId":"MuhdMusab"},"content":"* 1a. Input fields are invalid","lastModifiedDate":"2022-09-21"},{"lineNumber":303,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":304,"author":{"gitId":"jialatteo"},"content":"  * 1a1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-09-24"},{"lineNumber":305,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":306,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":307,"author":{"gitId":"MuhdMusab"},"content":"* 1b. Any of the mandatory fields are not input by the user","lastModifiedDate":"2022-09-22"},{"lineNumber":308,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":309,"author":{"gitId":"jialatteo"},"content":"    * 1b1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-09-24"},{"lineNumber":310,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":311,"author":{"gitId":"MuhdMusab"},"content":"      Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":312,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":313,"author":{"gitId":"MuhdMusab"},"content":"**Use case: Delete a client**","lastModifiedDate":"2022-09-21"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"MuhdMusab"},"content":"1.  User requests to list clients","lastModifiedDate":"2022-09-22"},{"lineNumber":318,"author":{"gitId":"jialatteo"},"content":"2.  Financial Advisor Planner shows a list of clients","lastModifiedDate":"2022-09-24"},{"lineNumber":319,"author":{"gitId":"MuhdMusab"},"content":"3.  User requests to delete a specific client in the list","lastModifiedDate":"2022-09-22"},{"lineNumber":320,"author":{"gitId":"jialatteo"},"content":"4.  Financial Advisor Planner deletes the client","lastModifiedDate":"2022-09-24"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"jialatteo"},"content":"    * 3a1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-09-24"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"MuhdMusab"},"content":"**Use case: Edit client details**","lastModifiedDate":"2022-09-22"},{"lineNumber":337,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":338,"author":{"gitId":"MuhdMusab"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":339,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":340,"author":{"gitId":"MuhdMusab"},"content":"1. User requests to list clients","lastModifiedDate":"2022-09-22"},{"lineNumber":341,"author":{"gitId":"jialatteo"},"content":"2. Financial Advisor Planner shows a list of clients","lastModifiedDate":"2022-09-24"},{"lineNumber":342,"author":{"gitId":"MuhdMusab"},"content":"3. User requests to edit the details of a client at the specified index","lastModifiedDate":"2022-09-22"},{"lineNumber":343,"author":{"gitId":"jialatteo"},"content":"4. Financial Advisor Planner edits the details of the specified client in the list","lastModifiedDate":"2022-09-24"},{"lineNumber":344,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":345,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":346,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":347,"author":{"gitId":"MuhdMusab"},"content":"**Extensions**","lastModifiedDate":"2022-09-22"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":349,"author":{"gitId":"MuhdMusab"},"content":"* 3a. User did not input any arguments.","lastModifiedDate":"2022-09-22"},{"lineNumber":350,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":351,"author":{"gitId":"jialatteo"},"content":"    * 3a1. Financial Advisor Planner shows an error message. ","lastModifiedDate":"2022-09-24"},{"lineNumber":352,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"MuhdMusab"},"content":"* 3b. The given index is invalid.","lastModifiedDate":"2022-09-22"},{"lineNumber":356,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":357,"author":{"gitId":"jialatteo"},"content":"    * 3b1. Financial Advisor Planner shows an error message.","lastModifiedDate":"2022-09-24"},{"lineNumber":358,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":359,"author":{"gitId":"MuhdMusab"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-22"},{"lineNumber":360,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":361,"author":{"gitId":"jialatteo"},"content":"**Use case: Clear Financial Advisor Planner**","lastModifiedDate":"2022-09-24"},{"lineNumber":362,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":363,"author":{"gitId":"MuhdMusab"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":364,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":365,"author":{"gitId":"MuhdMusab"},"content":"1.  User requests to clear the list of clients","lastModifiedDate":"2022-09-22"},{"lineNumber":366,"author":{"gitId":"jialatteo"},"content":"2.  Financial Advisor Planner shows a success message","lastModifiedDate":"2022-09-24"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":368,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":369,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":370,"author":{"gitId":"MuhdMusab"},"content":"**Use case: Find client**","lastModifiedDate":"2022-09-22"},{"lineNumber":371,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":372,"author":{"gitId":"MuhdMusab"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":373,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":374,"author":{"gitId":"MuhdMusab"},"content":"1.  User requests to find clients containing input keyword(s)","lastModifiedDate":"2022-09-22"},{"lineNumber":375,"author":{"gitId":"jialatteo"},"content":"2.  Financial Advisor Planner shows a list of clients with the matching keyword(s)","lastModifiedDate":"2022-09-24"},{"lineNumber":376,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":377,"author":{"gitId":"MuhdMusab"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":378,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"jialatteo"},"content":"4. Should execute command within 1 second","lastModifiedDate":"2022-09-24"},{"lineNumber":386,"author":{"gitId":"jialatteo"},"content":"5. Should work without an internet connection","lastModifiedDate":"2022-09-24"},{"lineNumber":387,"author":{"gitId":"jialatteo"},"content":"6. Should be reliable and bug free","lastModifiedDate":"2022-09-24"},{"lineNumber":388,"author":{"gitId":"jialatteo"},"content":"7. Stored data should be backwards compatible with older versions","lastModifiedDate":"2022-09-24"},{"lineNumber":389,"author":{"gitId":"jialatteo"},"content":"8. Stored data should be secure and only accessible by user","lastModifiedDate":"2022-09-24"},{"lineNumber":390,"author":{"gitId":"jialatteo"},"content":"9. User interface should be usable for beginners","lastModifiedDate":"2022-09-24"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":392,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"jialatteo"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2022-09-24"},{"lineNumber":399,"author":{"gitId":"jialatteo"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2022-09-24"},{"lineNumber":400,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":401,"author":{"gitId":"jialatteo"},"content":"*{More to be added}*","lastModifiedDate":"2022-09-24"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":406,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jialatteo":25,"MuhdMusab":52,"wongyewjon":9,"-":369}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"Financial Advisor Planner (FAP) is a **desktop app for Financial Advisors (FA) to manage their clients, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FAP can get your client management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"1. Download the latest `financialadvisorplanner.jar` from [here](https://github.com/AY2223S1-CS2103T-W09-2/tp/releases).","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your FinancialAdvisorPlanner.","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 i/60000 r/Low s/1000` : Adds a contact named `John Doe` to the list of clients.","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"rgonslayer"},"content":"   * **\u0027sort\u0027**\u0027alphabet\u0027 : Sorts the contacts in alphabetical order.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"   * **`find`** `John`: looks for contact that matches keyword ‘John’","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"rgonslayer"},"content":"* If a parameter is expected only once in the command but if you specify it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"* Parameter hints will be shown after a command action.","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"Adds a person to the list of clients.","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS i/YEARLY_INCOME r/RISK_APPETITE s/MONTHLY_SAVINGS [t/TAG]…​`","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"A person can have any number of tags (including 0) \u003c/div\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** RISK_APPETITE can only have the values ‘High’, ‘Medium’ or ‘Low’","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 i/200000 r/Medium s/5000`","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"* `Add n/Betsy Crowe t/friend i/0 r/High e/betsycrow@example.com a/Newgate Prison p/1234567 s/0`","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"Shows a list of all persons in the client list.","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"Edits an existing person in the list of clients.","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [i/YEARLY_INCOME] [r/RISK_APPETITE] [s/MONTHLY_SAVINGS] [t/TAG]…​`","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3,…​","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"* The search is case-insensitive. e.g hans will match Hans","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"* The order of the keywords does not matter. e.g. Hans Bo will match Bo Hans","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"* Only full words will be matched e.g. Han will not match Hans","lastModifiedDate":"2022-09-29"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"* Persons matching at least one keyword will be returned (i.e. OR search). e.g. Hans Bo will return Hans Gruber, Bo Yang","lastModifiedDate":"2022-09-29"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"* The search also applies to other information available such as mobile number or policy numbers.","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"  E.g John Doe has the mobile number 87438807","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"    * find 87438807 will return John Doe","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"* The search can be limited to certain categories by using find [CATEGORY] KEYWORD instead.","lastModifiedDate":"2022-09-29"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"  * E.g find [Mobile] 87438807 will return John Doe","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"Deletes the specified person from the list of clients.","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the list of clients.","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"### Sorting by alphabetical order : `sort alphabet`","lastModifiedDate":"2022-09-29"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"Sorts the contacts shown in the list of clients by alphabetical order.","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"rgonslayer"},"content":"Format: `sort alphabet`","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"rgonslayer"},"content":"* Returns all the contacts in alphabetical order","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"rgonslayer"},"content":"  ![result for \u0027sort alphabet\u0027](images/sortAlphabetResult.png)","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"Clears all entries from the list of clients.","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"FinancialAdvisorPlanner data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"FinancialAdvisorPlanner data are saved as a JSON file `[JAR file location]/data/FinancialAdvisorPlanner.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"If your changes to the data file makes its format invalid, FinancialAdvisorPlanner will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"MuhdMusab"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FinancialAdvisorPlanner home folder.","lastModifiedDate":"2022-09-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"MuhdMusab"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS i/YEARLY_INCOME r/RISK_APPETITE s/MONTHLY_SAVINGS [t/TAG]…​ ` \u003cbr\u003e e.g., `e.g., add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 i/60000 r/Low s/1000 t/friend t/colleague`","lastModifiedDate":"2022-09-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"MuhdMusab"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [i/YEARLY_INCOME] [r/RISK_APPETITE] [s/MONTHLY_SAVINGS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-09-29"},{"lineNumber":217,"author":{"gitId":"rgonslayer"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-09-30"},{"lineNumber":218,"author":{"gitId":"MuhdMusab"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e `find [CATEGORY] KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2022-09-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"rgonslayer"},"content":"**Sort Alphabet** | `sort alphabet` ","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"MuhdMusab":42,"rgonslayer":10,"-":169}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"rgonslayer"},"content":"    content: \"FAP\";","lastModifiedDate":"2022-09-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"rgonslayer":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wongyewjon"},"content":"title: Financial Advisor Planner","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W09-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W09-2/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W09-2/tp/branch/master/graph/badge.svg?token\u003dUFZ3FQBSRS)](https://codecov.io/gh/AY2223S1-CS2103T-W09-2/tp)","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"**Financial Advisor Planner is a desktop application for financial advisors to manage clients\u0027 contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"* If you are interested in using Financial Advisor Planner, head over to the [_Quick Start_ section of the **User Guide**](https://ay2223s1-cs2103t-w09-2.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":"* If you are interested about developing Financial Advisor Planner, the [**Developer Guide**](https://ay2223s1-cs2103t-w09-2.github.io/tp/DeveloperGuide.html) is a good place to start .","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wongyewjon":6,"-":14}},{"path":"docs/team/jialatteo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"title: Gerald Teo Jin Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"## Project: Financial Advisor Planner","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"Financial Advisor Planner is a desktop client management application used for financial advisors to manage their clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"- ### New Feature:","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"- ### Code contributed:","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"- ### Enhancements implemented:","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"- ### Contributions to the UG:","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"- ### Contributions to the DG:","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"- ### Contributions to team-based tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"- ### Review/mentoring contributions:","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"- ### Contributions beyond the project team:","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"- ### Documentation","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"- ### Community","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"- ### Tools","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"jialatteo":17,"MuhdMusab":5}},{"path":"docs/team/muhdmusab.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"title: Muhammad Mus\u0027ab Bin Mustaffa\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"## Project: Financial Advisor Planner","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"Financial Advisor Planner is a desktop client management application used for financial advisors to manage their clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"- ### New Feature:","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"- ### Code contributed:","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"- ### Enhancements implemented:","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"- ### Contributions to the UG:","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"- ### Contributions to the DG:","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"- ### Contributions to team-based tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"- ### Review/mentoring contributions:","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"- ### Contributions beyond the project team:","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"- ### Documentation","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"- ### Community","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"- ### Tools","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"MuhdMusab":22}},{"path":"docs/team/rgonslayer.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rgonslayer"},"content":"# Chew Yew Keng\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"rgonslayer"},"content":" ## Project: Financial Advisor Planner","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"rgonslayer"},"content":" Financial Aid Planner is a desktop client management application used for financial advisors to manage their clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"rgonslayer"},"content":" Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"rgonslayer"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"rgonslayer"},"content":" - ### New Feature:","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"rgonslayer"},"content":" - ### Code contributed: [reposense](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003drgonslayer\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"rgonslayer"},"content":" - ### Enhancements implemented:","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"rgonslayer"},"content":" - ### Contributions to the UG:","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"rgonslayer"},"content":" - ### Contributions to the DG:","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"rgonslayer"},"content":" - ### Contributions to team-based tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"rgonslayer"},"content":" - ### Review/mentoring contributions:","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"rgonslayer"},"content":" - ### Contributions beyond the project team:","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"rgonslayer"},"content":" - ### Documentation","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"rgonslayer"},"content":" - ### Community","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"rgonslayer"},"content":" - ### Tools","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"rgonslayer":19}},{"path":"docs/team/senwei01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"senwei01"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"senwei01"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"senwei01"},"content":"title: Lee Sen Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"senwei01"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"senwei01"},"content":"## Project: Financial Advisor Planner","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"senwei01"},"content":"Financial Advisor Planner is a desktop client management application used for financial advisors to manage their clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"senwei01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"senwei01"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"senwei01"},"content":"- ### New Feature:","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"senwei01"},"content":"- ### Code contributed:","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"senwei01"},"content":"- ### Enhancements implemented:","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"senwei01"},"content":"- ### Contributions to the UG:","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"senwei01"},"content":"- ### Contributions to the DG:","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"senwei01"},"content":"- ### Contributions to team-based tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"senwei01"},"content":"- ### Review/mentoring contributions:","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"senwei01"},"content":"- ### Contributions beyond the project team:","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"senwei01"},"content":"- ### Documentation","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"senwei01"},"content":"- ### Community","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"senwei01"},"content":"- ### Tools","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"senwei01":22}},{"path":"docs/team/wongyewjon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"title: Wong Yew Jon\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"wongyewjon"},"content":"## Project: Financial Advisor Planner","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"Financial Advisor Planner is a desktop client management application used for financial advisors to manage their clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"wongyewjon"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"wongyewjon"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"wongyewjon"},"content":"- ### New Feature:","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"wongyewjon"},"content":"- ### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"wongyewjon"},"content":"- ### Enhancements implemented:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"wongyewjon"},"content":"- ### Contributions to the UG:","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"wongyewjon"},"content":"- ### Contributions to the DG:","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"wongyewjon"},"content":"- ### Contributions to team-based tasks","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"wongyewjon"},"content":"- ### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"wongyewjon"},"content":"- ### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"wongyewjon"},"content":"- ### Documentation","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"wongyewjon"},"content":"- ### Community","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"wongyewjon"},"content":"- ### Tools","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"MuhdMusab":5,"wongyewjon":17}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.EditPersonDescriptor.createEditedPersonWithNewAppointment;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":" * Adds appointment(s) for a particular client.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    public static final String COMMAND_WORD \u003d \"addappt\";","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Schedules an appointment with a specific client \"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"            + \"by the index number used in the displayed person list\"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"            + \"[\" + PREFIX_DATE + \"DATE AND TIME]...\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"            + PREFIX_DATE + \"21-Jan-2023 12:30 PM \";","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"You have already scheduled \"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"            + \"an appointment at this timing for this client\";","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    public static final String FIELD_NOT_INCLUDED \u003d \"At least one field must be provided.\";","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    private final Index index;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    public AddAppointmentCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        assert(editPersonDescriptor.getName().isEmpty());","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        assert(editPersonDescriptor.getAddress().isEmpty());","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        assert(editPersonDescriptor.getPhone().isEmpty());","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        assert(editPersonDescriptor.getEmail().isEmpty());","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"        assert(editPersonDescriptor.getTags().isEmpty());","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        this.editPersonDescriptor \u003d editPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        Person editedPerson \u003d createEditedPersonWithNewAppointment(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"                || (other instanceof AddAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 index.equals(((AddAppointmentCommand) other).index))","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 editPersonDescriptor.equals(((AddAppointmentCommand) other).editPersonDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"MuhdMusab":82}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.EditPersonDescriptor.createEditedPerson;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"MuhdMusab":2,"-":98}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.anyPrefixesPresent;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":" * Parses input arguments and creates a new AddAppointmentCommand object","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     * AddAppointmentCommand and returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_DATE);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        if (anyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG)","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"                || argMultimap.getPreamble().isEmpty() || !arePrefixesPresent(argMultimap, PREFIX_DATE)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"            parseAppointmentsForEdit(argMultimap.getAllValues(PREFIX_DATE))","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"                    .ifPresent(editPersonDescriptor::setAppointments);","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"            throw new ParseException(AddAppointmentCommand.FIELD_NOT_INCLUDED);","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"        Index index;","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        return new AddAppointmentCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code Collection\u003cString\u003e datesAndTimes} into a","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"     * {@code Set\u003cAppointment\u003e} if {@code datesAndTimes} is non-empty.","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"    private Optional\u003cSet\u003cAppointment\u003e\u003e parseAppointmentsForEdit(Collection\u003cString\u003e datesAndTimes)","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"        assert datesAndTimes !\u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"        if (datesAndTimes.isEmpty()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"        return Optional.of(ParserUtil.parseAppointments(datesAndTimes));","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"MuhdMusab":82}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG, PREFIX_DATE);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"                || !argMultimap.getPreamble().isEmpty() || arePrefixesPresent(argMultimap, PREFIX_DATE)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"MuhdMusab":5,"-":48}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MuhdMusab":4,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"     * Returns true if any of the prefixes are present {@code Optional} values in the given","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"    public static boolean anyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"MuhdMusab":17,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"MuhdMusab":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DateTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * Parses string representation of a date and time and creates","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" * a new LocalDateTime object","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"public class DateTimeParser {","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"d-MMM-yyyy hh:mm a\";","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d java.time.format","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"            .DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     * Parses the given {@code String} representing a date and time","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     * and returns a LocalDateTime object.","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"     * @param str String representing the LocalDateTime to be returned.","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"     * @return LocalDateTime parsed from the input String.","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    public static LocalDateTime parseLocalDateTimeFromString(String str) {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"        return LocalDateTime.parse(str, DateTimeParser.dateTimeFormatter);","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"     * Checks whether the input String has the correct DateTime format","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     * @param str the String representing the LocalDateTime to be parsed.","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     * @return boolean value describing whether the input String has","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     *         the correct DateTime format.","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    public static boolean isValidDateTime(String str) {","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"            parseLocalDateTimeFromString(str);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"MuhdMusab":42}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_DATE);","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"        //editPersonDescriptor.setAppointments(EMPTY_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"MuhdMusab":4,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":" * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":" * corresponding field value of the person.","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"public class EditPersonDescriptor {","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    private Name name;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    private Email email;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    private Address address;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    private Set\u003cAppointment\u003e appointments;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    public EditPersonDescriptor() {}","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     * Copy constructor.","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        setName(toCopy.name);","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        setPhone(toCopy.phone);","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        setEmail(toCopy.email);","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        setAddress(toCopy.address);","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        setTags(toCopy.tags);","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        setAppointments(toCopy.appointments);","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, appointments);","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    public void setName(Name name) {","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"        return Optional.ofNullable(phone);","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"        return Optional.ofNullable(email);","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"    public void setAddress(Address address) {","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"     * Sets {@code appointments} to this object\u0027s {@code appointments}.","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"     * A defensive copy of {@code appointments} is used internally.","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"    public void setAppointments(Set\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"        this.appointments \u003d (appointments !\u003d null) ? new HashSet\u003c\u003e(appointments) : null;","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"    public Optional\u003cSet\u003cAppointment\u003e\u003e getAppointments() {","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"        return Optional.ofNullable(appointments);","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"        return Optional.ofNullable(address);","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"     * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-01"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-01"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"        this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-01"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-01"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-01"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"     * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-01"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-01"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"        return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-01"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-10-01"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-10-01"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"    public static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-01"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-10-01"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-10-01"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-10-01"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-10-01"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2022-10-01"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-10-01"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-10-01"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"     * edited with a new appointment from {@code editPersonDescriptor}.","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"    public static Person createEditedPersonWithNewAppointment(Person personToEdit,","lastModifiedDate":"2022-10-02"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"                                                              EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"        Set\u003cAppointment\u003e updatedAppointments \u003d personToEdit.getAppointments();","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"        editPersonDescriptor.appointments.forEach(updatedAppointments::add);","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"        Address address \u003d personToEdit.getAddress();","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.getTags();","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"        Person newPerson \u003d new Person(name, phone, email, address, tags);","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"        newPerson.setAppointments(updatedAppointments);","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"        return newPerson;","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-01"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-01"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-01"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"            return true;","lastModifiedDate":"2022-10-01"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-01"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"        if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"            return false;","lastModifiedDate":"2022-10-01"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"        // state check","lastModifiedDate":"2022-10-01"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2022-10-01"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"        return getName().equals(e.getName())","lastModifiedDate":"2022-10-01"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-10-01"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-10-01"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-10-01"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 getAppointments().equals(e.getAppointments());","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"MuhdMusab":172}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"     * Parses a {@code String dateAndTime} into an {@code Appointment}.","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"    public static Appointment parseAppointment(String dateAndTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(dateAndTime);","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"        String trimmedDateAndTime \u003d dateAndTime.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"        return new Appointment(parseDateTime(trimmedDateAndTime));","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"     * Parses {@code Collection\u003cString\u003e datesAndTimes} into a {@code Set\u003cAppointment\u003e}.","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"    public static Set\u003cAppointment\u003e parseAppointments(Collection\u003cString\u003e datesAndTimes) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(datesAndTimes);","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"        final Set\u003cAppointment\u003e appointmentSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"        for (String dateAndTime : datesAndTimes) {","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"            appointmentSet.add(parseAppointment(dateAndTime));","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"        return appointmentSet;","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"     * Parses a {@code String dateAndTime} into an {@code DateTime}.","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"    public static DateTime parseDateTime(String dateAndTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(dateAndTime);","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"        String trimmedDateAndTime \u003d dateAndTime.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime localDateTime \u003d DateTimeParser.parseLocalDateTimeFromString(trimmedDateAndTime);","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"        return new DateTime(localDateTime);","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"MuhdMusab":37,"-":124}},{"path":"src/main/java/seedu/address/model/person/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":" * Represents one of the Person\u0027s appointments.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"public class Appointment {","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Appointments can only take in a date and time in the format,\"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"            + \"d-MMM-yyyy hh:mm a, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    public static final Set\u003cAppointment\u003e EMPTY_APPOINTMENTS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    public final DateTime dateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs an {@code Appointment}.","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"     * @param dateTime A valid appointment.","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    public Appointment(DateTime dateTime) {","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        return \"Appointment at \" + dateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"     * Checks whether the input DateTime has the correct format","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"     * @param dateTime the DateTime representing the DateTime to be","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"     *        contained within this Appointment.","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"     * @return boolean value describing whether the input DateTime has","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"     *         the correct format.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    public boolean isValidAppointment(DateTime dateTime) {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        return DateTimeParser.isValidDateTime(dateTime.toString());","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"                || (other instanceof Appointment// instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 dateTime.equals(((Appointment) other).dateTime)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        return Objects.hash(dateTime);","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"MuhdMusab":60}},{"path":"src/main/java/seedu/address/model/person/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * Represents a date and time with a formatted String value","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"public class DateTime {","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    private final LocalDateTime localDateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     * @param localDateTime A valid LocalDateTime.","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    public DateTime(LocalDateTime localDateTime) {","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"        requireNonNull(localDateTime);","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        this.localDateTime \u003d localDateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        return localDateTime.format(java.time.format","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"                .DateTimeFormatter.ofPattern(\"d-MMM-yyyy hh:mm a\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"                || (other instanceof DateTime// instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 localDateTime.equals(((DateTime) other).localDateTime)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        return localDateTime.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"MuhdMusab":41}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    private Set\u003cAppointment\u003e appointments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        this.appointments \u003d appointments;","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    public Set\u003cAppointment\u003e getAppointments() {","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        return appointments;","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    public void setAppointments(Set\u003cAppointment\u003e newAppointments) {","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"        appointments \u003d newAppointments;","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"                \u0026\u0026 otherPerson.getAppointments().equals(getAppointments());","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"        return Objects.hash(name, phone, email, address, tags, appointments);","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"        Set\u003cAppointment\u003e appointments \u003d getAppointments();","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"        if (!Objects.isNull(appointments) \u0026\u0026 !appointments.isEmpty()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"            builder.append(\"; Appointments: \");","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"            appointments.forEach(","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"                    appointment -\u003e builder.append(appointment + \" \")","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"            );","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MuhdMusab":33,"-":121}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"    public static Set\u003cAppointment\u003e getAppointmentSet(String... strings) {","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"                .map(DateTimeParser::parseLocalDateTimeFromString)","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"                .map(DateTime::new)","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"                .map(Appointment::new)","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"MuhdMusab":13,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    private final String appointmentName;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given {@code appointmentName}.","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    public JsonAdaptedAppointment(String appointmentName) {","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"        this.appointmentName \u003d appointmentName;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        appointmentName \u003d source.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    @JsonValue","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    public String getAppointmentName() {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        return appointmentName;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    public Appointment toModelType() {","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        String dateAndTime \u003d appointmentName.substring(15);","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime localDateTime \u003d DateTimeParser.parseLocalDateTimeFromString(dateAndTime.trim());","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        DateTime dateTime \u003d new DateTime(localDateTime);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        return new Appointment(dateTime);","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"MuhdMusab":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"            @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        if (appointments !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"            this.appointments.addAll(appointments);","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        appointments.addAll(source.getAppointments().stream()","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"                .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"        final List\u003cAppointment\u003e personAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"            personAppointments.add(jsonAdaptedAppointment.toModelType());","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"        final Set\u003cAppointment\u003e modelAppointments \u003d new HashSet\u003c\u003e(personAppointments);","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"        Person newPerson \u003d new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"        newPerson.setAppointments(modelAppointments);","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"        return newPerson;","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"MuhdMusab":18,"-":107}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    public CommandBox(CommandExecutor commandExecutor, ResultDisplay resultDisplay) {","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"        // displays command parameters in ResultDisplay when a COMMAND_WORD is typed.","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"        commandTextField.textProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"            setStyleToDefault();","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"            switch (newValue) {","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"            case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"            case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"            case \"\":","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"                resultDisplay.setFeedbackToUser(\"\");","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"            default:","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"        });","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"jialatteo":28,"-":83}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w09-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"MuhdMusab":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, resultDisplay);","lastModifiedDate":"2022-09-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jialatteo":1,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    private FlowPane appointments;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"        if (person.getAppointments().size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"            person.getAppointments().stream()","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"                    .sorted(Comparator.comparing(appointment -\u003e appointment.toString()))","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"                    .forEach(appointment -\u003e appointments.getChildren().add(new Label(appointment.toString())));","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"            person.getAppointments().stream()","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"                    .sorted(Comparator.comparing(appointment -\u003e appointment.toString() + \",\"))","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"                    .forEach(appointment -\u003e appointments.getChildren().add(new Label(appointment.toString() + \",\")));","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"MuhdMusab":12,"-":77}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"      \u003cFlowPane fx:id\u003d\"appointments\" /\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MuhdMusab":1,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPOINTMENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_210_JAN_2023;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_21_JAN_2023;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_22_JAN_2023;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.model.person.Appointment.EMPTY_APPOINTMENTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"public class AddAppointmentCommandTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"    @AfterAll","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    public static void setAlice() {","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        ALICE.setAppointments(EMPTY_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null, null));","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_addOneAppointment_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"        Person firstPerson \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"        Set\u003cAppointment\u003e sets \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"        sets.add(new Appointment(new DateTime(DateTimeParser.parseLocalDateTimeFromString(","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"                VALID_APPOINTMENT_21_JAN_2023))));","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"        firstPerson.setAppointments(sets);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor descriptor \u003d DESC_APPOINTMENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"        String expectedMessage \u003d String.format(AddAppointmentCommand.MESSAGE_SUCCESS, firstPerson);","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), firstPerson);","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandSuccess(addAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_addMultipleAppointment_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        Person firstPerson \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"        Set\u003cAppointment\u003e sets \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"        sets.add(new Appointment(new DateTime(DateTimeParser.parseLocalDateTimeFromString(","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"                VALID_APPOINTMENT_21_JAN_2023))));","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"        sets.add(new Appointment(new DateTime(DateTimeParser.parseLocalDateTimeFromString(","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"                VALID_APPOINTMENT_22_JAN_2023))));","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"        firstPerson.setAppointments(sets);","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"                .withAppointments(VALID_APPOINTMENT_21_JAN_2023, VALID_APPOINTMENT_22_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"        String expectedMessage \u003d String.format(AddAppointmentCommand.MESSAGE_SUCCESS, firstPerson);","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), firstPerson);","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandSuccess(addAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_addAppointmentWithNameFieldEdit_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"                .withAppointments(VALID_APPOINTMENT_21_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(AssertionError.class, () -\u003e new AddAppointmentCommand(INDEX_FIRST_PERSON, descriptor));","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_addAppointmentWithAddressFieldEdit_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"                .withAddress(VALID_ADDRESS_BOB).withAppointments(VALID_APPOINTMENT_21_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(AssertionError.class, () -\u003e new AddAppointmentCommand(INDEX_FIRST_PERSON, descriptor));","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_addAppointmentWithPhoneFieldEdit_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"                .withPhone(VALID_PHONE_BOB).withAppointments(VALID_APPOINTMENT_21_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(AssertionError.class, () -\u003e new AddAppointmentCommand(INDEX_FIRST_PERSON, descriptor));","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_addAppointmentWithEmailFieldEdit_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"                .withEmail(VALID_EMAIL_BOB).withAppointments(VALID_APPOINTMENT_21_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(AssertionError.class, () -\u003e new AddAppointmentCommand(INDEX_FIRST_PERSON, descriptor));","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_addAppointmentWithTagsFieldEdit_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"                .withAppointments(VALID_APPOINTMENT_21_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(AssertionError.class, () -\u003e new AddAppointmentCommand(INDEX_FIRST_PERSON, descriptor));","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"                .withAppointments(VALID_APPOINTMENT_22_JAN_2023, VALID_APPOINTMENT_22_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"        assertCommandFailure(addAppointmentCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"    public void equals() {","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"        final AddAppointmentCommand standardCommand \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, DESC_APPOINTMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_APPOINTMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"        AddAppointmentCommand commandWithSameValues \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(standardCommand.equals(new AddAppointmentCommand(INDEX_SECOND_PERSON, copyDescriptor)));","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor diffDescriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"                .withAppointments(VALID_APPOINTMENT_21_JAN_2023, VALID_APPOINTMENT_22_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(standardCommand.equals(new AddAppointmentCommand(INDEX_FIRST_PERSON, diffDescriptor)));","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_invalidValueFollowedByValidValue_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"            EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"                    .withAppointments(INVALID_APPOINTMENT_210_JAN_2023, VALID_APPOINTMENT_21_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027210-Jan-2023 01:00 AM\u0027 could not be parsed: \"","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"                    + \"Invalid value for DayOfMonth (valid values 1 - 28/31): 210\", e.getMessage());","lastModifiedDate":"2022-10-04"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validValueFollowedByInvalidValue_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"            EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"                    .withAppointments(VALID_APPOINTMENT_21_JAN_2023, INVALID_APPOINTMENT_210_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-10-04"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":191,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027210-Jan-2023 01:00 AM\u0027 could not be parsed: \"","lastModifiedDate":"2022-10-04"},{"lineNumber":192,"author":{"gitId":"MuhdMusab"},"content":"                    + \"Invalid value for DayOfMonth (valid values 1 - 28/31): 210\", e.getMessage());","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"MuhdMusab":195}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    public static final String VALID_APPOINTMENT_21_JAN_2023 \u003d \"21-Jan-2023 01:00 AM\";","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    public static final String VALID_APPOINTMENT_22_JAN_2023 \u003d \"22-Jan-2023 01:00 AM\";","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    public static final String INVALID_APPOINTMENT_210_JAN_2023 \u003d \"210-Jan-2023 01:00 AM\";","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    public static final String FIRST_APPOINTMENT_DESC \u003d \" \" + PREFIX_DATE + VALID_APPOINTMENT_21_JAN_2023;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    public static final String SECOND_APPOINTMENT_DESC \u003d \" \" + PREFIX_DATE + VALID_APPOINTMENT_22_JAN_2023;","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"    public static final String INVALID_APPOINTMENT_DESC \u003d \" \" + PREFIX_DATE + INVALID_APPOINTMENT_210_JAN_2023;","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    public static final EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    public static final EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"    public static final EditPersonDescriptor DESC_APPOINTMENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        DESC_APPOINTMENT \u003d new EditPersonDescriptorBuilder().withAppointments(VALID_APPOINTMENT_21_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"MuhdMusab":13,"-":125}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"MuhdMusab":1,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"MuhdMusab":1,"-":57}},{"path":"src/test/java/seedu/address/logic/parser/AddAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRST_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SECOND_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_21_JAN_2023;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_22_JAN_2023;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"public class AddAppointmentCommandParserTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    private AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_allFieldsPresentOneAppointment_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        String userInput \u003d targetIndex.getOneBased() + FIRST_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"                .withAppointments(VALID_APPOINTMENT_21_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        AddAppointmentCommand expectedCommand \u003d new AddAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_allFieldsPresentMultipleAppointments_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        String userInput \u003d targetIndex.getOneBased() + FIRST_APPOINTMENT_DESC + SECOND_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"                .withAppointments(VALID_APPOINTMENT_21_JAN_2023, VALID_APPOINTMENT_22_JAN_2023).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        AddAppointmentCommand expectedCommand \u003d new AddAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validAppointmentWithTags_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"        String userInput \u003d targetIndex.getOneBased() + FIRST_APPOINTMENT_DESC + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Invalid command format! \\naddappt: Schedules an appointment with \"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"                    + \"a specific client by the index number used in the displayed person listParameters: \"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"                    + \"Parameters: INDEX (must be a positive integer) [d/DATE AND TIME]...\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"                    + \"Example: addappt 1 d/21-Jan-2023 12:30 PM \" , parseException.getMessage());","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validAppointmentWithPhone_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + FIRST_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Invalid command format! \\naddappt: Schedules an appointment with \"","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"                    + \"a specific client by the index number used in the displayed person listParameters: \"","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"                    + \"Parameters: INDEX (must be a positive integer) [d/DATE AND TIME]...\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"                    + \"Example: addappt 1 d/21-Jan-2023 12:30 PM \" , parseException.getMessage());","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validAppointmentWithName_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + FIRST_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Invalid command format! \\naddappt: Schedules an appointment with \"","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"                    + \"a specific client by the index number used in the displayed person listParameters: \"","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"                    + \"Parameters: INDEX (must be a positive integer) [d/DATE AND TIME]...\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"                    + \"Example: addappt 1 d/21-Jan-2023 12:30 PM \" , parseException.getMessage());","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_validAppointmentWithEmail_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"        String userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY + FIRST_APPOINTMENT_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Invalid command format! \\naddappt: Schedules an appointment with \"","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"                    + \"a specific client by the index number used in the displayed person listParameters: \"","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"                    + \"Parameters: INDEX (must be a positive integer) [d/DATE AND TIME]...\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"                    + \"Example: addappt 1 d/21-Jan-2023 12:30 PM \" , parseException.getMessage());","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"MuhdMusab":114}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"        Person person \u003d new PersonBuilder().buildWithoutAppointments();","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"        EditCommand temp \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"MuhdMusab":2,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/DateTimeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    public static final String FIRST_VALID_DATE_TIME \u003d \"1-Apr-2023 12:30 PM\";","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    public static final String SECOND_VALID_DATE_TIME \u003d \"2-Apr-2023 12:30 PM\";","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_YEAR \u003d \"1-Apr-23 12:30 PM\";","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_MONTH \u003d \"1-January-2023 12:30 PM\";","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_DAY \u003d \"1000-Apr-2023 12:30 PM\";","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_DAY_ERROR_MESSAGE \u003d \"Text \u00271000-Apr-2023 12:30 PM\u0027 could not be parsed: \"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"            + \"Invalid value for DayOfMonth (valid values 1 - 28/31): 1000\";","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_MONTH_ERROR_MESSAGE \u003d \"Text \u00271-January-2023 12:30 PM\u0027 could not be parsed at \"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"            + \"index 5\";","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_YEAR_ERROR_MESSAGE \u003d \"Text \u00271-Apr-23 12:30 PM\u0027 could not be parsed at index 6\";","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    private DateTimeParser parser \u003d new DateTimeParser();","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_dateTimeCorrectFormat_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime expectedLocalDateTime \u003d LocalDateTime.of(2023, 4, 1, 12, 30);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime parsedLocalDateTime \u003d parser.parseLocalDateTimeFromString(FIRST_VALID_DATE_TIME);","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(expectedLocalDateTime, parsedLocalDateTime);","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_dateTimeInvalidDayOfMonthFormat_exceptionThrown() {","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime parsedLocalDateTime \u003d parser.parseLocalDateTimeFromString(INVALID_DAY);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(INVALID_DAY_ERROR_MESSAGE, e.getMessage());","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_dateTimeInvalidMonthFormat_exceptionThrown() {","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime parsedLocalDateTime \u003d parser.parseLocalDateTimeFromString(INVALID_MONTH);","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(INVALID_MONTH_ERROR_MESSAGE, e.getMessage());","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    public void parse_dateTimeInvalidYearFormat_exceptionThrown() {","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime parsedLocalDateTime \u003d parser.parseLocalDateTimeFromString(INVALID_YEAR);","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(INVALID_YEAR_ERROR_MESSAGE, e.getMessage());","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"    public void isValidDateTime_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        assertTrue(DateTimeParser.isValidDateTime(FIRST_VALID_DATE_TIME));","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    public void isValidDateTime_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        assertFalse(DateTimeParser.isValidDateTime(INVALID_DAY));","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"MuhdMusab":72}},{"path":"src/test/java/seedu/address/model/person/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"public class AppointmentTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"     * A stub class to check the String representation","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"     * of the DateTime and to check equality.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    private static class DateTimeStub extends DateTime {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeStub() {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"            super(DateTimeParser.parseLocalDateTimeFromString(\"1-Apr-2023 12:30 PM\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"            return \"1-Apr-2023 12:30 PM\";","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        Appointment newAppointment \u003d new Appointment(new DateTimeStub());","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertEquals(\"Appointment at 1-Apr-2023 12:30 PM\", newAppointment.toString());","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"    public void equals_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        Appointment firstAppointment \u003d new Appointment(new DateTimeStub());","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        Appointment secondAppointment \u003d new Appointment(new DateTimeStub());","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertEquals(firstAppointment, firstAppointment);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertNotEquals(firstAppointment, null);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertEquals(firstAppointment, secondAppointment);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"MuhdMusab":47}},{"path":"src/test/java/seedu/address/model/person/DateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.DateTimeParserTest.FIRST_VALID_DATE_TIME;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.logic.parser.DateTimeParserTest.SECOND_VALID_DATE_TIME;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"public class DateTimeTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    private static final LocalDateTime FIRST_VALID_LOCAL_DATE_TIME \u003d DateTimeParser","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"            .parseLocalDateTimeFromString(FIRST_VALID_DATE_TIME);","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private static final LocalDateTime SECOND_VALID_LOCAL_DATE_TIME \u003d DateTimeParser","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"            .parseLocalDateTimeFromString(SECOND_VALID_DATE_TIME);","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateTime(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    public void equals_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"        DateTime firstDateTime \u003d new DateTime(FIRST_VALID_LOCAL_DATE_TIME);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        DateTime secondDateTime \u003d new DateTime(SECOND_VALID_LOCAL_DATE_TIME);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertEquals(firstDateTime, firstDateTime);","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertNotEquals(firstDateTime, null);","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        Assertions.assertNotEquals(firstDateTime, secondDateTime);","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"MuhdMusab":34}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import static seedu.address.model.person.Appointment.EMPTY_APPOINTMENTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    @AfterAll","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    public static void setAlice() {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"        ALICE.setAppointments(EMPTY_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        Person alice \u003d ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"MuhdMusab":8,"-":91}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    private static final String INVALID_APPOINTMENTS \u003d \"Appointment at 21/05/2023 2359\";","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    private static final List\u003cJsonAdaptedAppointment\u003e VALID_APPOINTMENTS \u003d BENSON.getAppointments().stream()","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"            .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"                        VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"                VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"                    VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"                VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"                        VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"                VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"                        VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"                VALID_TAGS, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"                        invalidTags, VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"    public void toModelType_invalidAppointments_throwsDateTimeParseException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"        List\u003cJsonAdaptedAppointment\u003e invalidAppointments \u003d new ArrayList\u003c\u003e(VALID_APPOINTMENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"        invalidAppointments.add(new JsonAdaptedAppointment(INVALID_APPOINTMENTS));","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"                        VALID_TAGS, invalidAppointments);","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"        assertThrows(DateTimeParseException.class, person::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"MuhdMusab":33,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        boolean eq \u003d addressBookFromFile.equals(typicalPersonsAddressBook);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"MuhdMusab":1,"-":47}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        descriptor.setAppointments(person.getAppointments());","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"     * Parses the {@code appointments} into a {@code Set\u003cAppointment\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"     * that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"    public EditPersonDescriptorBuilder withAppointments(String... appointments) {","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"        Set\u003cAppointment\u003e appointmentSet \u003d Stream.of(appointments).map(DateTimeParser::parseLocalDateTimeFromString)","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"                .map(DateTime::new).map(Appointment::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"        descriptor.setAppointments(appointmentSet);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"MuhdMusab":16,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    private Set\u003cAppointment\u003e appointments;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        appointments \u003d new HashSet\u003c\u003e(personToCopy.getAppointments());","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"     * Sets the {@code Appointment} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"    public PersonBuilder withAppointments(String ... appointments) {","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"        this.appointments \u003d SampleDataUtil.getAppointmentSet(appointments);","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"    public Person buildWithoutAppointments() {","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"        return new Person(name, phone, email, address, tags, null);","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"MuhdMusab":14,"-":96}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import seedu.address.logic.parser.EditPersonDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"MuhdMusab":5,"-":61}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"            .withAppointments(\"21-Jan-2023 09:00 AM\", \"21-Jan-2023 11:30 AM\")","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"            .build();","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"MuhdMusab":3,"-":75}}]
