[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103-W14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103-W14-1/tp/actions)","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"* Condonery is a Condonery is a desktop app made for property agents primarily used for managing client contacts and condo listings. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Condonery can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"  * managing multiple property listings","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"  * storing client contact details","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"Getting started:","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"  * This project uses gradle as a build tool, to get started:","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"```bash","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"\u003e ./gradlew clean run","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"  * The project is a desktop application used for managing contact details.","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    * It is **written in OOP fashion**. It provides a **reasonably well-written** code base(around 6 KLoC), without being overwhelmingly big.","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"  * It is named `Condonery` and was evolved from `AddressBook` project.","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"  * For the detailed documentation of this project, see the **[Condonery Product Website](https://ay2223s1-cs2103-w14-1.github.io/tp/)**.","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"misterpuffin":16,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"mainClassName \u003d \u0027seedu.condonery.Main\u0027","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"    checkstyleTest.enabled \u003d true","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"yuehernkang"},"content":"    archiveFileName \u003d \u0027condonery.jar\u0027","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"zacchaeuschok"},"content":"run {","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"zacchaeuschok"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yuehernkang":2,"zacchaeuschok":2,"misterpuffin":7,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"### Zacchaeus Chok","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"\u003cimg src\u003d\"images/zacchaeuschok.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"[[github](https://github.com/zacchaeuschok)]","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"[[portfolio](team/zacchaeuschok.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"* Responsibilities: UI","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"### Sng Haoren","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"\u003cimg src\u003d\"images/misterpuffin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"[[github](http://github.com/misterpuffin)]","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"[[portfolio](team/misterpuffin.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"* Role: Code Monkey","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"* Responsibilities: Generate code","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Frrramses"},"content":"### Zhao Yige","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Frrramses"},"content":"\u003cimg src\u003d\"images/frrramses.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Frrramses"},"content":"[[github](http://github.com/frrramses)] [[portfolio](team/frrramses.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Frrramses"},"content":"* Role: Code Crocodile","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"Frrramses"},"content":"* Responsibilities: Random Ideas \u0026 Random Codes","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"### Kang Yue Hern","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"\u003cimg src\u003d\"images/yuehernkang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"[[github](http://github.com/yuehernkang)]","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"[[portfolio](team/yuehernkang.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"### Lee Kang Wei","lastModifiedDate":"2022-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"\u003cimg src\u003d\"images/lkwlkww.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"[[github](http://github.com/lkwlkww)]","lastModifiedDate":"2022-09-22"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"[[portfolio](team/lkwlkww.md)]","lastModifiedDate":"2022-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"* Responsibilities:","lastModifiedDate":"2022-09-22"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"    * Client directory features","lastModifiedDate":"2022-09-22"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"    * Ensure good code quality","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"yuehernkang":4,"lkwlkww":7,"zacchaeuschok":6,"misterpuffin":6,"Frrramses":5,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"lkwlkww"},"content":"### Select property/client feature","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":159,"author":{"gitId":"lkwlkww"},"content":"The select feature is meant to expand on either a `Property` or a `Client` to display its details in the GUI. Importantly, a `Property` can hold a list of interested clients and a `Client` can hold a list of properties that the client is interested in. Depending on if a `Property` or `Client` is selected, the GUI changes to show just the selected `Property`/`Client` in its respective tab, and its interested clients/intersted properties in the other tab. The select command is as follows:","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"lkwlkww"},"content":"```","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"lkwlkww"},"content":"select -[pc] [INDEX]","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"lkwlkww"},"content":"```","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"lkwlkww"},"content":"The compulsory input `INDEX` would correspond to the current displayed list in the GUi.","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"lkwlkww"},"content":"Examples of usage:","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"lkwlkww"},"content":"* `select -p 2`","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"lkwlkww"},"content":"* `select -c 10`","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"zacchaeuschok"},"content":"### Range feature [Zacchaeus]","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"zacchaeuschok"},"content":"The range feature allows the user to filter properties by a price range in Condonery. ","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"zacchaeuschok"},"content":"The feature is activated by the command pattern `range -p l/[lower] u/[upper]`.","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"zacchaeuschok"},"content":"**Parsing of command within the `Logic` component**","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"zacchaeuschok"},"content":"Much like the other core features, we introduced an intermediate between `CondoneryParser` and the range command parser,","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"zacchaeuschok"},"content":"that is the `RangePropertyCommandParser`.","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"zacchaeuschok"},"content":"These are the steps that will be taken when parsing a range command:","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"zacchaeuschok"},"content":"1. The `CondoneryParser` checks if the user command is a range command. Then it creates a `RangePropertyCommandParser`.","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"zacchaeuschok"},"content":"2. The `RangePropertyCommandParser` which implements the `Parser` interface, parses the command via `Parser#parse`.","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"zacchaeuschok"},"content":"3. If the user command is valid, the parser creates the corresponding `Command` object for execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"zacchaeuschok"},"content":"Given below is a sequence diagram for interactions inside the Logic component for the `execute(range -p l/100 u/200` ","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"zacchaeuschok"},"content":"API call.","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"zacchaeuschok"},"content":"[Diagram to be added]","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"zacchaeuschok"},"content":"**Execution of command within the `Logic` component**","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"zacchaeuschok"},"content":"When a `RangePropertyCommand` is created by the `RangePropertyCommandParser`, it is executed with `model` passed in ","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"zacchaeuschok"},"content":"as the parameter.","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"zacchaeuschok"},"content":"Firstly, the `updateFilteredPropertyList` is called to get the list of properties within the specified price range.","lastModifiedDate":"2022-10-21"},{"lineNumber":197,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"zacchaeuschok"},"content":"Next, a `CommandResult` object containing the message to be displayed to the user is returned to `LogicManager`.","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"zacchaeuschok"},"content":"[Diagram to be added]","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"zacchaeuschok"},"content":"**Error handling within the `Logic` component**","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"zacchaeuschok"},"content":"The below activity diagram shows the overall process of execution of `execute(range -p l/100 u/200`.","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"zacchaeuschok"},"content":"In order to ensure data cleanliness and that the inputs by the users are valid, errors are thrown at various stages if:","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"zacchaeuschok"},"content":"- Incorrect command format is used (i.e. missing price as argument)","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"zacchaeuschok"},"content":"- Missing prefixes","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"zacchaeuschok"},"content":"[Diagram to be added]","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":213,"author":{"gitId":"zacchaeuschok"},"content":"**Design consideration**","lastModifiedDate":"2022-10-21"},{"lineNumber":214,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":215,"author":{"gitId":"zacchaeuschok"},"content":"Aspect: How to filter properties by prices","lastModifiedDate":"2022-10-21"},{"lineNumber":216,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":217,"author":{"gitId":"zacchaeuschok"},"content":"- **Alternative 1** (current choice): Add a lower and upper prefix to command phrase to indicate lower and upper bound.","lastModifiedDate":"2022-10-21"},{"lineNumber":218,"author":{"gitId":"zacchaeuschok"},"content":"    - Pros:","lastModifiedDate":"2022-10-21"},{"lineNumber":219,"author":{"gitId":"zacchaeuschok"},"content":"      - Less time-consuming to implement.","lastModifiedDate":"2022-10-21"},{"lineNumber":220,"author":{"gitId":"zacchaeuschok"},"content":"      - Easier to parse price range. ","lastModifiedDate":"2022-10-21"},{"lineNumber":221,"author":{"gitId":"zacchaeuschok"},"content":"    - Cons:","lastModifiedDate":"2022-10-21"},{"lineNumber":222,"author":{"gitId":"zacchaeuschok"},"content":"      - Imposes strict requirement on use of lower and upper prefixes.","lastModifiedDate":"2022-10-21"},{"lineNumber":223,"author":{"gitId":"zacchaeuschok"},"content":"- **Alternative 2**: Allow user to key in two separate integers in command.","lastModifiedDate":"2022-10-21"},{"lineNumber":224,"author":{"gitId":"zacchaeuschok"},"content":"  - Pros:","lastModifiedDate":"2022-10-21"},{"lineNumber":225,"author":{"gitId":"zacchaeuschok"},"content":"    - Easy and fairly intuitive user input system","lastModifiedDate":"2022-10-21"},{"lineNumber":226,"author":{"gitId":"zacchaeuschok"},"content":"  - Cons:","lastModifiedDate":"2022-10-21"},{"lineNumber":227,"author":{"gitId":"zacchaeuschok"},"content":"    - More time-consuming to implement.","lastModifiedDate":"2022-10-21"},{"lineNumber":228,"author":{"gitId":"zacchaeuschok"},"content":"    - Need extra checking to correctly parse two separate integers and identify lower and upper bounds.","lastModifiedDate":"2022-10-21"},{"lineNumber":229,"author":{"gitId":"zacchaeuschok"},"content":"    - More prone to manual user entry error.","lastModifiedDate":"2022-10-21"},{"lineNumber":230,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":231,"author":{"gitId":"zacchaeuschok"},"content":"Alternative 1 was chosen to enable more efficient parsing of commands.","lastModifiedDate":"2022-10-21"},{"lineNumber":232,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":233,"author":{"gitId":"zacchaeuschok"},"content":"`PropertyPriceWithinRangePredicate` ","lastModifiedDate":"2022-10-21"},{"lineNumber":234,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":235,"author":{"gitId":"zacchaeuschok"},"content":"Firstly, ","lastModifiedDate":"2022-10-21"},{"lineNumber":236,"author":{"gitId":"yuehernkang"},"content":"### Commands","lastModifiedDate":"2022-10-20"},{"lineNumber":237,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":238,"author":{"gitId":"yuehernkang"},"content":"#### \\[Proposed\\] Search Command","lastModifiedDate":"2022-10-20"},{"lineNumber":239,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":240,"author":{"gitId":"yuehernkang"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"yuehernkang"},"content":"The proposed search command allows the user to search for a particular `Property`. It is facilitated by `SearchCommand`.","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"yuehernkang"},"content":"It extends the `Command` class.","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":245,"author":{"gitId":"yuehernkang"},"content":"Users can specify if they want to perform the search for a `Property` or `Client` with the following ","lastModifiedDate":"2022-10-20"},{"lineNumber":246,"author":{"gitId":"yuehernkang"},"content":"options","lastModifiedDate":"2022-10-20"},{"lineNumber":247,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"yuehernkang"},"content":"1. `-p` Search for a particular property with matching keywords","lastModifiedDate":"2022-10-20"},{"lineNumber":249,"author":{"gitId":"yuehernkang"},"content":"2. `-c` Search for a particular client with matching keywords","lastModifiedDate":"2022-10-20"},{"lineNumber":250,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":251,"author":{"gitId":"yuehernkang"},"content":"#### Parsing of commands within the `Logic` component","lastModifiedDate":"2022-10-20"},{"lineNumber":252,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":253,"author":{"gitId":"yuehernkang"},"content":"The parsing of commands begins once the `LogicManager` receives and tries to execute the user input.","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":255,"author":{"gitId":"yuehernkang"},"content":"To parse the different commands in our application, we have individual command parsers for the different commands ","lastModifiedDate":"2022-10-20"},{"lineNumber":256,"author":{"gitId":"yuehernkang"},"content":"(e.g. `EditCommandParser`).","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"yuehernkang"},"content":"The steps taken when parsing a search command are as follows:","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":260,"author":{"gitId":"yuehernkang"},"content":"1. The `SearchCommandParser` will check what type (`Property` or `Client`) the search is for ","lastModifiedDate":"2022-10-20"},{"lineNumber":261,"author":{"gitId":"yuehernkang"},"content":"and create the corresponding parser ","lastModifiedDate":"2022-10-20"},{"lineNumber":262,"author":{"gitId":"yuehernkang"},"content":"   1. `search -p` will create the command: `SearchPropertyCommand`","lastModifiedDate":"2022-10-20"},{"lineNumber":263,"author":{"gitId":"yuehernkang"},"content":"   2. `search -c` will create the command: `SearchClientCommand`","lastModifiedDate":"2022-10-20"},{"lineNumber":264,"author":{"gitId":"yuehernkang"},"content":"3. The respective parsers all implement the `Parser` interface, and the `Parser#parse` method will then be called.","lastModifiedDate":"2022-10-20"},{"lineNumber":265,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":266,"author":{"gitId":"yuehernkang"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-20"},{"lineNumber":267,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":268,"author":{"gitId":"yuehernkang"},"content":"- Create a `SearchCommand` class ","lastModifiedDate":"2022-10-20"},{"lineNumber":269,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"misterpuffin"},"content":"### User Uploaded Images","lastModifiedDate":"2022-10-21"},{"lineNumber":271,"author":{"gitId":"misterpuffin"},"content":"The application allows users to upload their own images for Property and Client models. By default, the images are stored","lastModifiedDate":"2022-10-21"},{"lineNumber":272,"author":{"gitId":"misterpuffin"},"content":"in `data/images`, but users can specify their custom directory in `preferences.json`.","lastModifiedDate":"2022-10-21"},{"lineNumber":273,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":274,"author":{"gitId":"misterpuffin"},"content":"The Image object is not initialized until the PropertyCard/ClientCard of the UI is rendered. This is to save memory ","lastModifiedDate":"2022-10-21"},{"lineNumber":275,"author":{"gitId":"misterpuffin"},"content":"consumption and rely on the Lazy Loading of Observable List. We need to inject the UserPrefs into the Property/Client ","lastModifiedDate":"2022-10-21"},{"lineNumber":276,"author":{"gitId":"misterpuffin"},"content":"models in order to determine the location to source for the uploaded images.","lastModifiedDate":"2022-10-21"},{"lineNumber":277,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"yuehernkang"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. ","lastModifiedDate":"2022-10-20"},{"lineNumber":283,"author":{"gitId":"yuehernkang"},"content":"It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. ","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"yuehernkang"},"content":"Additionally, it implements the following operations:","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"misterpuffin"},"content":"* **Alternative 1:** Saves the initial PropertyDirectory and ClientDirectory on initialization. Store all commands in ","lastModifiedDate":"2022-10-21"},{"lineNumber":350,"author":{"gitId":"misterpuffin"},"content":"CommandQueue and re-executes _n - 1_ commands on undo.","lastModifiedDate":"2022-10-21"},{"lineNumber":351,"author":{"gitId":"misterpuffin"},"content":"    * Pros: Easy to implement. Less memory usage","lastModifiedDate":"2022-10-21"},{"lineNumber":352,"author":{"gitId":"misterpuffin"},"content":"    * Cons: Might make undo command less responsive, depending on complexity of commands.","lastModifiedDate":"2022-10-21"},{"lineNumber":353,"author":{"gitId":"misterpuffin"},"content":"* **Alternative 2:** Saves the entire address book.","lastModifiedDate":"2022-10-21"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"misterpuffin"},"content":"* **Alternative 3:** Individual command knows how to undo/redo by","lastModifiedDate":"2022-10-21"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"zacchaeuschok"},"content":"***Target user profile**:","lastModifiedDate":"2022-09-28"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"zacchaeuschok"},"content":"* middle-aged property agent selling new condos to prospective clients","lastModifiedDate":"2022-09-28"},{"lineNumber":388,"author":{"gitId":"zacchaeuschok"},"content":"* has a need to manage a significant number of property listings and clients","lastModifiedDate":"2022-09-28"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":392,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"zacchaeuschok"},"content":"**Value proposition**: manage property listings and clients faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-28"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"| Priority | As a …​                                            | I want to …​               | So that I can…​                                                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"zacchaeuschok"},"content":"| -------- |----------------------------------------------------|----------------------------|------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-28"},{"lineNumber":403,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                           | see usage instructions     | refer to instructions when I forget how to use the App                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"zacchaeuschok"},"content":"| `* * *`  | property agent                                     | add a new property listing |                                                                              |","lastModifiedDate":"2022-09-28"},{"lineNumber":405,"author":{"gitId":"zacchaeuschok"},"content":"| `* * *`  | property agent                                     | delete a property listing  | remove entries that I no longer need                                         |","lastModifiedDate":"2022-09-28"},{"lineNumber":406,"author":{"gitId":"zacchaeuschok"},"content":"| `* * *`  | property agent                                     | find a listing by name     | locate details of listings without having to go through the entire list      |","lastModifiedDate":"2022-09-28"},{"lineNumber":407,"author":{"gitId":"zacchaeuschok"},"content":"| `* *`    | property agent                                     | edit listing details       | update details of listings                                                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":408,"author":{"gitId":"zacchaeuschok"},"content":"| `*`      | property agent with many listings in the directory | sort listings by price cap | locate a listing within budget without haveing to go through the entire list |","lastModifiedDate":"2022-09-28"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"zacchaeuschok"},"content":"(For all use cases below, the **System** is the `Condonery` and the **Actor** is the `use","lastModifiedDate":"2022-09-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"zacchaeuschok"},"content":"**Use case: Delete a listing**","lastModifiedDate":"2022-09-28"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"zacchaeuschok"},"content":"1.  User requests to list property","lastModifiedDate":"2022-09-28"},{"lineNumber":421,"author":{"gitId":"zacchaeuschok"},"content":"2.  Condonery shows a list of properties","lastModifiedDate":"2022-09-28"},{"lineNumber":422,"author":{"gitId":"zacchaeuschok"},"content":"3.  User requests to delete a specific property in the list","lastModifiedDate":"2022-09-28"},{"lineNumber":423,"author":{"gitId":"zacchaeuschok"},"content":"4.  Condonery deletes the person","lastModifiedDate":"2022-09-28"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"zacchaeuschok"},"content":"    * 3a1. Condonery shows an error message.","lastModifiedDate":"2022-09-28"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"yuehernkang"},"content":"4. Should work on 32-bit and 64-bit environments.","lastModifiedDate":"2022-10-03"},{"lineNumber":447,"author":{"gitId":"yuehernkang"},"content":"5. Should work without an internet connection","lastModifiedDate":"2022-10-03"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"lkwlkww"},"content":"* **Contact**: A client of the app user","lastModifiedDate":"2022-09-29"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"zacchaeuschok"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"lkwlkww":12,"yuehernkang":39,"zacchaeuschok":86,"misterpuffin":14,"-":357}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"   1. Run the `seedu.condonery.Main` and try a few commands.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"misterpuffin":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"   e.g. `seedu.condonery.commons.StringUtilTest`","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"   e.g. `seedu.condonery.storage.StorageManagerTest`","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"   e.g. `seedu.condonery.logic.LogicManagerTest`","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"misterpuffin":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"Condonery is a desktop app made for property agents primarily used for managing client contacts and condo listings.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"If you can type fast, Condonery can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents ","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"- [`Quick start`](#quick-start)","lastModifiedDate":"2022-10-29"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"- [`Features in Condonery`](#features-in-condonery)","lastModifiedDate":"2022-10-29"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"  - [Undoing commands : `undo`](#undoing-commands--undo)","lastModifiedDate":"2022-10-29"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"  - [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"  - [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2022-10-29"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"- [`Property Directory Features`](#property-directory-features)","lastModifiedDate":"2022-10-29"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"    - [Adding a property: add -p](#adding-a-property-add--p)","lastModifiedDate":"2022-10-29"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"    - [Listing all properties : list -p](#listing-all-properties--list--p)","lastModifiedDate":"2022-10-29"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"    - [Editing a property : edit -p](#editing-a-property--edit--p)","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"    - [Locating properties by name: `find -p`](#locating-properties-by-name-find--p)","lastModifiedDate":"2022-10-29"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"    - [Deleting a property : `delete -p`](#deleting-a-property--delete--p)","lastModifiedDate":"2022-10-29"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    - [Filtering properties: `filter -p`](#filtering-properties-filter--p)","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"    - [Filtering properties within price range: range -p](#filtering-properties-within-price-range-range--p)","lastModifiedDate":"2022-10-29"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"    - [Filter properties by status: status -p](#filter-properties-by-status-status--p)","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"    - [Filtering properties by type: type -p](#filtering-properties-by-type-type--p)","lastModifiedDate":"2022-10-29"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"    - [Selecting a property: select -p INDEX](#selecing-a-property-select--p-index)","lastModifiedDate":"2022-10-29"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"    - [Clearing all entries : clear](#clearing-all-entries--clear)","lastModifiedDate":"2022-10-29"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2022-10-29"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"    - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-10-29"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"- [`Client Directory Features`](#client-directory-features)","lastModifiedDate":"2022-10-29"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"    - [Adding a client profile: add -c](#adding-a-client-profile-add--c)","lastModifiedDate":"2022-10-29"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"    - [Editing a client profile: edit -c](#editing-a-client-profile-edit--c)","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"    - [Listing all client profiles: list -c](#listing-all-client-profiles-list--c)","lastModifiedDate":"2022-10-29"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"    - [Filtering client profiles: filter -c](#filtering-client-profiles-filter--c)","lastModifiedDate":"2022-10-29"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"    - [Deleting a client profile: delete -c](#deleting-a-client-profile-delete--c-index)","lastModifiedDate":"2022-10-29"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"    - [Selecting a client profile: select -pc](#selecting-a-client-profile-select--pc-index)","lastModifiedDate":"2022-10-29"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"- [`Command summary`](#command-summary)","lastModifiedDate":"2022-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"zacchaeuschok"},"content":"1. Download the latest `condonery.jar` from [here](https://github.com/AY2223S1-CS2103-W14-1/tp/releases).","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"zacchaeuschok"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Condonery.","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"zacchaeuschok"},"content":"1. Double-click the file to start the app. The interface will look like this.","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"zacchaeuschok"},"content":"    * **`list -p`** : Lists all properties.","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"zacchaeuschok"},"content":"    * **`add -p`**`n/Pinnacle@Duxton a/Cantonment Rd, #1G, 085301 p/100,000 t/luxury` : Adds a listing named `Pinnacle@Duxton` to the property directory.","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"zacchaeuschok"},"content":"    * **`list -p delete`**`3` : Deletes the 3rd property shown in the current list.","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"1. Refer to the [Features](#features-syntax) below for details of each command.","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"zacchaeuschok"},"content":"## Features syntax","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"zacchaeuschok"},"content":"* Demarcaters `-p` and `-c` after each command word represent interactions with the property and client directory respectively.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"zacchaeuschok"},"content":"  e.g. `add -p` is used to add properties in the property directory while `add -c` is used to add clients in the client directory.","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"  e.g. in `add -p n/NAME`, `NAME` is a parameter which can be used as `add -p n/PINNACLE@DUXTON`.","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"zacchaeuschok"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/PINNACLE@DUXTON t/luxury` or as `n/PINNACLE@DUXTON`.","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"zacchaeuschok"},"content":"  e.g. if the command specifies `n/NAME p/PRICE`, `p/PRICE n/NAME` is also acceptable.","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":89,"author":{"gitId":"zacchaeuschok"},"content":"  e.g. if you specify `p/1,000,000 p/2,000,000`, only `p/2,000,000` will be taken.","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"zacchaeuschok"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"## Features in Condonery ","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"### Undoing commands : `undo`","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"Reverses the effect of the previous command. Only commands that affect the state of Property/Client Directory can be","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"undone.","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"For example, `help` cannot be undone, whereas `add -p` can be undone.","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"Format: `undo`","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"yuehernkang"},"content":"Shows the help guide","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"Exits the program.","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"Format: `exit`","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"misterpuffin"},"content":"## Property Directory Features","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"zacchaeuschok"},"content":"### Adding a property: `add -p`","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"zacchaeuschok"},"content":"Adds a property to the property directory.","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"misterpuffin"},"content":"Format: `add -p n/NAME a/ADDRESS p/PRICE [-i] [t/TAG]…​`","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"yuehernkang"},"content":"Required parameters: `NAME`, `ADDRESS`, `PRICE`, `PROPERTY_TYPE`","lastModifiedDate":"2022-10-30"},{"lineNumber":133,"author":{"gitId":"yuehernkang"},"content":"Optional Parameters: `TAG`, `IMAGE`, `INTERESTED_CLIENTS`, `PROPERTY_STATUS`","lastModifiedDate":"2022-10-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"zacchaeuschok"},"content":"A property can have any number of tags (including 0)","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"yuehernkang"},"content":"* `add -p n/PINNACLE@DUXTON a/11 Pulau Tekong Besar, Pulau, Tekong Camp, 508450 p/1,000,000 h/HDB t/cheap`","lastModifiedDate":"2022-10-30"},{"lineNumber":141,"author":{"gitId":"yuehernkang"},"content":"* `add -p n/SEMAKAU LANDFILL a/Straits Boulevard p/1,000 h/CONDO t/high-end`","lastModifiedDate":"2022-10-30"},{"lineNumber":142,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"misterpuffin"},"content":"The `-i` flag allows the user to upload images of the property. A file chooser dialog will appear after running the","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"misterpuffin"},"content":"command.","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"misterpuffin"},"content":"The `h/PROPERTY_TYPE` flag specifies the type of property. It can only be either HDB, CONDO, or LANDED.","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"misterpuffin"},"content":"![file_chooser](images/fileChooser.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"zacchaeuschok"},"content":"### Listing all properties : `list -p`","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"zacchaeuschok"},"content":"Shows a list of all properties in the address book.","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"zacchaeuschok"},"content":"Format: `list -p`","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"zacchaeuschok"},"content":"### Editing a property : `edit -p`","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"misterpuffin"},"content":"Format: `edit -p INDEX [n/NAME] [a/ADDRESS] [p/PRICE] [h/PROPERTY_TYPE] [t/TAG]…​`","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"zacchaeuschok"},"content":"* Edits the property at the specified `INDEX`. The index refers to the index number shown in the displayed property list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"zacchaeuschok"},"content":"* You can remove all the property’s tags by typing `t/` without","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"yuehernkang"},"content":"*  `edit -p 1 p/1,000,000 a/11 Pulau Tekong Besar, Pulau, Tekong Camp, 508450` Edits the price and address of the 1st person to be `1,000,000` and `11 Pulau Tekong Besar, Pulau, Tekong Camp, 508450` respectively.","lastModifiedDate":"2022-10-30"},{"lineNumber":171,"author":{"gitId":"yuehernkang"},"content":"*  `edit -p 2 n/Cinammon College t/` Edits the name of the 2nd property to be `Cinammon College` and clears all existing tags.","lastModifiedDate":"2022-10-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"zacchaeuschok"},"content":"### Locating properties by name: `find -p`","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"zacchaeuschok"},"content":"Finds properties whose names contain any of the given keywords.","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"yuehernkang"},"content":"Format: `find -p KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-10-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"zacchaeuschok"},"content":"* The search is case-insensitive. e.g `bishan` will match `Bishan`","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"zacchaeuschok"},"content":"* The order of the keywords does not matter. e.g. `PINNACLE@DUXTON Bishan` will match `Bishan PINNACLE@DUXTON`","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"zacchaeuschok"},"content":"* Only full words will be matched e.g. `PINNACLE` will not match `PINNACLE@DUXTON`","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"zacchaeuschok"},"content":"* Properties matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"zacchaeuschok"},"content":"  e.g. `PINNACLE@DUXTON Bishan` will return `PINNACLE@DUXTON`, `Bishan 8`","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"zacchaeuschok"},"content":"* `find -p Wall Street` returns `Wall Street` and `Wall Street Prime`","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"zacchaeuschok"},"content":"* `find -p Pinnacle@Duxton Sesame Street` returns `Pinnacle@Duxton`, `Sesame Street`\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"zacchaeuschok"},"content":"[//]: # (Image to be added later)","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"zacchaeuschok"},"content":"[//]: # (  ![result for \u0027find alex david\u0027]\u0026#40;images/findAlexDavidResult.png\u0026#41;)","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"zacchaeuschok"},"content":"### Deleting a property : `delete -p`","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"zacchaeuschok"},"content":"Deletes the specified property from the address book.","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"zacchaeuschok"},"content":"Format: `delete -p INDEX`","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"zacchaeuschok"},"content":"* Deletes the property at the specified `INDEX`.","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"lkwlkww"},"content":"* The index refers to the index number shown in the displayed property list.","lastModifiedDate":"2022-10-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"lkwlkww"},"content":"* `list -p` followed by `delete -p 2` deletes the 2nd property in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"lkwlkww"},"content":"* `find -p Wall Street` followed by `delete -p 1` deletes the 1st property in the results of the `find -p` command.","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"zacchaeuschok"},"content":"### Filtering profiles: `filter -p`","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"zacchaeuschok"},"content":"Returns a filtered list of properties that fulfil the filter conditions for tags only.","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"zacchaeuschok"},"content":"Format: `filter -p TAG...`","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"zacchaeuschok"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"zacchaeuschok"},"content":"* `filter -p high-end` returns all properties with the `high-end` tag.","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"zacchaeuschok"},"content":"* `filter -p available` returns all properties with the `available` tag.","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"zacchaeuschok"},"content":"### Filtering properties within price range: `range -p`","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"zacchaeuschok"},"content":"Returns a filtered list of clients that fulfil the filter conditions.","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"zacchaeuschok"},"content":"Format: `range -p l/100,000 u/1,000,000`","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"zacchaeuschok"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"zacchaeuschok"},"content":"* `range -p l/100,000 u/1,000,000` returns all properties within the price range of 100,000 and 1,000,000 inclusive.","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"zacchaeuschok"},"content":"Notes:","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"zacchaeuschok"},"content":"* lower and upper price boundaries only accept integer values (commas acceptable).","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"yuehernkang"},"content":"### Filter properties by status: `status -p`","lastModifiedDate":"2022-10-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":226,"author":{"gitId":"yuehernkang"},"content":"Returns all the properties with the specified `PropertyStatusEnum`","lastModifiedDate":"2022-10-28"},{"lineNumber":227,"author":{"gitId":"yuehernkang"},"content":"Format: `status -p STATUS`","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":229,"author":{"gitId":"yuehernkang"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":230,"author":{"gitId":"yuehernkang"},"content":"* `status -p AVAILABLE` returns all the properties with status of `AVAILABLE`","lastModifiedDate":"2022-10-28"},{"lineNumber":231,"author":{"gitId":"yuehernkang"},"content":"* `status -p PENDING` returns all the properties with status of `PENDING`","lastModifiedDate":"2022-10-28"},{"lineNumber":232,"author":{"gitId":"yuehernkang"},"content":"* `status -p SOLD` returns all the properties with status of `SOLD`","lastModifiedDate":"2022-10-28"},{"lineNumber":233,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"zacchaeuschok"},"content":"### Filtering properties by type: `type -p`","lastModifiedDate":"2022-10-28"},{"lineNumber":235,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":236,"author":{"gitId":"zacchaeuschok"},"content":"Returns a filtered list of clients that fulfil the filter conditions.","lastModifiedDate":"2022-10-28"},{"lineNumber":237,"author":{"gitId":"zacchaeuschok"},"content":"Format: `type -p HDB`","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"zacchaeuschok"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"zacchaeuschok"},"content":"* `type -p HDB condo` returns all properties that are HDBs or Condos","lastModifiedDate":"2022-10-28"},{"lineNumber":240,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"yuehernkang"},"content":"### Selecting a property: `select -p INDEX`","lastModifiedDate":"2022-10-29"},{"lineNumber":242,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"lkwlkww"},"content":"Selects the specified property in the address book, for its details to be displayed.","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"lkwlkww"},"content":"Format: `select -p INDEX`","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"lkwlkww"},"content":"* Selects the property at the specified `INDEX`.","lastModifiedDate":"2022-10-28"},{"lineNumber":248,"author":{"gitId":"lkwlkww"},"content":"* The index refers to the index number shown in the displayed property list.","lastModifiedDate":"2022-10-28"},{"lineNumber":249,"author":{"gitId":"lkwlkww"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-28"},{"lineNumber":250,"author":{"gitId":"lkwlkww"},"content":"* The GUI changes to display just the selected property in the property directory,","lastModifiedDate":"2022-10-28"},{"lineNumber":251,"author":{"gitId":"lkwlkww"},"content":"while clients interested in that property are shown in the client directory.","lastModifiedDate":"2022-10-28"},{"lineNumber":252,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"zacchaeuschok"},"content":"Clears all properties from the property directory.","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"misterpuffin"},"content":"Format: `clear -p`","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"misterpuffin"},"content":"Property directory and Client directory data are saved in the hard disk automatically after any command that changes ","lastModifiedDate":"2022-10-28"},{"lineNumber":262,"author":{"gitId":"misterpuffin"},"content":"the data. There is no need to save manually.","lastModifiedDate":"2022-10-28"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":266,"author":{"gitId":"zacchaeuschok"},"content":"Property directory data are saved as a JSON file `[JAR file location]/data/propertyDirectory.json`.","lastModifiedDate":"2022-10-27"},{"lineNumber":267,"author":{"gitId":"zacchaeuschok"},"content":"Client directory data are saved as a JSON file `[JAR file location]/data/clientDirectory.json`.","lastModifiedDate":"2022-10-27"},{"lineNumber":268,"author":{"gitId":"misterpuffin"},"content":"Uploaded images are saved in `[JAR file location]/data/images`.","lastModifiedDate":"2022-10-28"},{"lineNumber":269,"author":{"gitId":"zacchaeuschok"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":272,"author":{"gitId":"zacchaeuschok"},"content":"If your changes to the data file makes its format invalid, both the Property directory and Client directory will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-10-27"},{"lineNumber":273,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":275,"author":{"gitId":"lkwlkww"},"content":"## Client Directory Features","lastModifiedDate":"2022-09-23"},{"lineNumber":276,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":277,"author":{"gitId":"zacchaeuschok"},"content":"### Adding a client profile: `add -c`","lastModifiedDate":"2022-10-27"},{"lineNumber":278,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":279,"author":{"gitId":"lkwlkww"},"content":"Adds a client profile to the client directory.","lastModifiedDate":"2022-09-23"},{"lineNumber":280,"author":{"gitId":"zacchaeuschok"},"content":"Format: `add -c n/NAME a/ADDRESS [t/TAG]...`","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"lkwlkww"},"content":"Tips:","lastModifiedDate":"2022-09-23"},{"lineNumber":282,"author":{"gitId":"lkwlkww"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-09-23"},{"lineNumber":283,"author":{"gitId":"lkwlkww"},"content":"  Examples:","lastModifiedDate":"2022-09-23"},{"lineNumber":284,"author":{"gitId":"zacchaeuschok"},"content":"* `add -c n/Bob a/Cinammon College`","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":286,"author":{"gitId":"zacchaeuschok"},"content":"### Editing a client profile: `edit -c`","lastModifiedDate":"2022-10-27"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":288,"author":{"gitId":"lkwlkww"},"content":"Edits a client profile already existing in the client directory.","lastModifiedDate":"2022-09-23"},{"lineNumber":289,"author":{"gitId":"zacchaeuschok"},"content":"Format: `edit -c INDEX [n/NAME] [a/ADDRESS] [t/TAG]...`","lastModifiedDate":"2022-10-27"},{"lineNumber":290,"author":{"gitId":"lkwlkww"},"content":"Tips:","lastModifiedDate":"2022-09-23"},{"lineNumber":291,"author":{"gitId":"lkwlkww"},"content":"* Edits the client profile at the specified INDEX. The index refers to the index numebr shown","lastModifiedDate":"2022-09-23"},{"lineNumber":292,"author":{"gitId":"lkwlkww"},"content":"  in the displayed person list. The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-09-23"},{"lineNumber":293,"author":{"gitId":"lkwlkww"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-09-23"},{"lineNumber":294,"author":{"gitId":"lkwlkww"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-09-23"},{"lineNumber":295,"author":{"gitId":"lkwlkww"},"content":"* When editing tags, the existing tags of the listing will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-09-23"},{"lineNumber":296,"author":{"gitId":"lkwlkww"},"content":"* You can remove all the listing\u0027s tags b","lastModifiedDate":"2022-09-23"},{"lineNumber":297,"author":{"gitId":"lkwlkww"},"content":"  Examples:","lastModifiedDate":"2022-09-23"},{"lineNumber":298,"author":{"gitId":"zacchaeuschok"},"content":"* `edit -c 5 n/Bob a/RC4 t/thrifty`","lastModifiedDate":"2022-10-27"},{"lineNumber":299,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":300,"author":{"gitId":"zacchaeuschok"},"content":"### Listing all client profiles: `list -c`","lastModifiedDate":"2022-10-27"},{"lineNumber":301,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":302,"author":{"gitId":"lkwlkww"},"content":"Lists all client profiles currently stored in the client directory.","lastModifiedDate":"2022-09-23"},{"lineNumber":303,"author":{"gitId":"lkwlkww"},"content":"Format: `list -c`","lastModifiedDate":"2022-09-23"},{"lineNumber":304,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":305,"author":{"gitId":"zacchaeuschok"},"content":"### Filtering client profiles: `filter -c`","lastModifiedDate":"2022-10-27"},{"lineNumber":306,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":307,"author":{"gitId":"zacchaeuschok"},"content":"Returns a filtered list of clients according to specified tags.","lastModifiedDate":"2022-10-27"},{"lineNumber":308,"author":{"gitId":"zacchaeuschok"},"content":"Format: `filter -c TAG...`","lastModifiedDate":"2022-10-27"},{"lineNumber":309,"author":{"gitId":"lkwlkww"},"content":"Examples:","lastModifiedDate":"2022-09-23"},{"lineNumber":310,"author":{"gitId":"zacchaeuschok"},"content":"* `filter -c high-end`","lastModifiedDate":"2022-10-27"},{"lineNumber":311,"author":{"gitId":"zacchaeuschok"},"content":"* `filter -c thrifty`","lastModifiedDate":"2022-10-27"},{"lineNumber":312,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":313,"author":{"gitId":"zacchaeuschok"},"content":"### Deleting a client profile: `delete -c INDEX`","lastModifiedDate":"2022-10-27"},{"lineNumber":314,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":315,"author":{"gitId":"lkwlkww"},"content":"Deletes the unique client profile at the specified INDEX.","lastModifiedDate":"2022-09-23"},{"lineNumber":316,"author":{"gitId":"zacchaeuschok"},"content":"Format: `delete -c INDEX`","lastModifiedDate":"2022-10-27"},{"lineNumber":317,"author":{"gitId":"lkwlkww"},"content":"Tips:","lastModifiedDate":"2022-09-23"},{"lineNumber":318,"author":{"gitId":"lkwlkww"},"content":"* The INDEX must be a positive integer 1, 2, 3...","lastModifiedDate":"2022-09-23"},{"lineNumber":319,"author":{"gitId":"lkwlkww"},"content":"  Examples:","lastModifiedDate":"2022-09-23"},{"lineNumber":320,"author":{"gitId":"lkwlkww"},"content":"* `list -c` followed by `delete 2` deletes the second client in the address book","lastModifiedDate":"2022-09-23"},{"lineNumber":321,"author":{"gitId":"zacchaeuschok"},"content":"* `filter -c high-end` followed by `delete 1` deletes the first client in the results of the","lastModifiedDate":"2022-10-27"},{"lineNumber":322,"author":{"gitId":"zacchaeuschok"},"content":"  `filter -c` command","lastModifiedDate":"2022-10-27"},{"lineNumber":323,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":324,"author":{"gitId":"yuehernkang"},"content":"### Selecting a client profile: `select -c INDEX`","lastModifiedDate":"2022-10-30"},{"lineNumber":325,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":326,"author":{"gitId":"lkwlkww"},"content":"Selects the specified client in the address book, for its details to be displayed.","lastModifiedDate":"2022-10-28"},{"lineNumber":327,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":328,"author":{"gitId":"lkwlkww"},"content":"Format: `select -c INDEX`","lastModifiedDate":"2022-10-28"},{"lineNumber":329,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":330,"author":{"gitId":"lkwlkww"},"content":"* Selects the client at the specified `INDEX`.","lastModifiedDate":"2022-10-28"},{"lineNumber":331,"author":{"gitId":"lkwlkww"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-10-28"},{"lineNumber":332,"author":{"gitId":"lkwlkww"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-28"},{"lineNumber":333,"author":{"gitId":"lkwlkww"},"content":"* The GUI changes to display just the selected client in the client directory,","lastModifiedDate":"2022-10-28"},{"lineNumber":334,"author":{"gitId":"lkwlkww"},"content":"while properties the client is interested in are shown in the property directory.","lastModifiedDate":"2022-10-28"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":336,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"misterpuffin"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains ","lastModifiedDate":"2022-10-28"},{"lineNumber":342,"author":{"gitId":"misterpuffin"},"content":"the data of your previous Property directory and Client directory home folder.","lastModifiedDate":"2022-10-28"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"zacchaeuschok"},"content":"**Property Directory**","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":350,"author":{"gitId":"yuehernkang"},"content":"| Action        | Format, Examples                                                                                                                                 |","lastModifiedDate":"2022-10-30"},{"lineNumber":351,"author":{"gitId":"yuehernkang"},"content":"|---------------|--------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-30"},{"lineNumber":352,"author":{"gitId":"yuehernkang"},"content":"| **Add -p**    | `add -p n/NAME a/ADDRESS p/PRICE h/PROPERTY_TYPE [-i] [t/TAG]…​` \u003cbr\u003e e.g., `add -p n/PINNACLE@DUXTON a/SG, Cantonment Rd, #1G, 085301 t/luxury` |","lastModifiedDate":"2022-10-30"},{"lineNumber":353,"author":{"gitId":"yuehernkang"},"content":"| **Clear -p**  | `clear -p`                                                                                                                                       |","lastModifiedDate":"2022-10-30"},{"lineNumber":354,"author":{"gitId":"yuehernkang"},"content":"| **Delete -p** | `delete -p INDEX`\u003cbr\u003e e.g., `delete -p 3`                                                                                                        |","lastModifiedDate":"2022-10-30"},{"lineNumber":355,"author":{"gitId":"yuehernkang"},"content":"| **Edit -p**   | `edit INDEX [n/NAME] [a/ADDRESS] [h/PROPERTY_TYPE] [t/TAG]…​`\u003cbr\u003e e.g.,`edit -p 2 n/PINNACLE@DUXTON a/SG, Cantonment Rd, #1G, 085301 t/luxury`   |","lastModifiedDate":"2022-10-30"},{"lineNumber":356,"author":{"gitId":"yuehernkang"},"content":"| **Filter -p** | `filter -p TAG [MORE_TAGS]`\u003cbr\u003e e.g., `filter -p high-end thrifty`                                                                               |","lastModifiedDate":"2022-10-30"},{"lineNumber":357,"author":{"gitId":"yuehernkang"},"content":"| **Find -p**   | `find -p NAME [MORE_NAMES]`\u003cbr\u003e e.g., `find -p PINNACLE@DUXTON BISHAN`                                                                           |","lastModifiedDate":"2022-10-30"},{"lineNumber":358,"author":{"gitId":"yuehernkang"},"content":"| **Range -p**  | `range -p l/LOWER_BOUND u/UPPER_BOUND`\u003cbr\u003e e.g., `range -p l/1,000,000 u/3,000,000`                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":359,"author":{"gitId":"yuehernkang"},"content":"| **List -p**   | `list -p`                                                                                                                                        |","lastModifiedDate":"2022-10-30"},{"lineNumber":360,"author":{"gitId":"yuehernkang"},"content":"| **Select -p** | `select -p INDEX` \u003cbr\u003e e.g., `select -p 2`                                                                                                       |","lastModifiedDate":"2022-10-30"},{"lineNumber":361,"author":{"gitId":"yuehernkang"},"content":"| **Status -p** | `status -p`                                                                                                                                      |","lastModifiedDate":"2022-10-30"},{"lineNumber":362,"author":{"gitId":"yuehernkang"},"content":"| **Type -p**   | `type -p`                                                                                                                                        |","lastModifiedDate":"2022-10-30"},{"lineNumber":363,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":364,"author":{"gitId":"zacchaeuschok"},"content":"**Client Directory**","lastModifiedDate":"2022-10-27"},{"lineNumber":365,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":366,"author":{"gitId":"yuehernkang"},"content":"| Action        | Format, Examples                                                                                                                      |","lastModifiedDate":"2022-10-30"},{"lineNumber":367,"author":{"gitId":"yuehernkang"},"content":"|---------------|---------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-30"},{"lineNumber":368,"author":{"gitId":"yuehernkang"},"content":"| **Add -c**    | `add n/NAME a/ADDRESS [-i] [t/TAG]…​` \u003cbr\u003e e.g., `add n/James a/123, Clementi Rd, 1234665 t/friend t/colleague`                       |","lastModifiedDate":"2022-10-30"},{"lineNumber":369,"author":{"gitId":"yuehernkang"},"content":"| **Clear -c**  | `clear -c`                                                                                                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":370,"author":{"gitId":"yuehernkang"},"content":"| **Delete -c** | `delete -c INDEX`\u003cbr\u003e e.g., `delete -c 3`                                                                                             |","lastModifiedDate":"2022-10-30"},{"lineNumber":371,"author":{"gitId":"yuehernkang"},"content":"| **Edit -c**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee a/SG, Cantonment Rd, #1G, 085301` |","lastModifiedDate":"2022-10-30"},{"lineNumber":372,"author":{"gitId":"yuehernkang"},"content":"| **Filter -c** | `filter -c TAG [MORE_TAGS]`\u003cbr\u003e e.g., `filter -c friend colleague`                                                                    |","lastModifiedDate":"2022-10-30"},{"lineNumber":373,"author":{"gitId":"yuehernkang"},"content":"| **Find -c**   | `find -c NAME [MORE_NAMES]`\u003cbr\u003e e.g., `find -c James Jake`                                                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":374,"author":{"gitId":"yuehernkang"},"content":"| **List -c**   | `list -c`                                                                                                                             |","lastModifiedDate":"2022-10-30"},{"lineNumber":375,"author":{"gitId":"yuehernkang"},"content":"| **Select -c** | `select -c INDEX` \u003cbr\u003e e.g., `select -p 1`                                                                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":376,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":377,"author":{"gitId":"zacchaeuschok"},"content":"**General**","lastModifiedDate":"2022-10-27"},{"lineNumber":378,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":379,"author":{"gitId":"zacchaeuschok"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-10-27"},{"lineNumber":380,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"misterpuffin"},"content":"**Undo** | `undo`","lastModifiedDate":"2022-10-28"},{"lineNumber":382,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"yuehernkang":71,"lkwlkww":57,"zacchaeuschok":92,"misterpuffin":32,"-":130}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"lkwlkww"},"content":"    content: \"Condonery\";","lastModifiedDate":"2022-09-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"lkwlkww":1,"-":294}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"Class CondoneryParser","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"misterpuffin":1,"-":37}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"title: Condonery","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103-W14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103-W14-1/tp/actions)","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103-W14-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S1-CS2103-W14-1/tp/actions)","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"**Condonery is a desktop application for managing your condo property listings, as well as your client details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"* If you are interested in using Condonery, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"* If you are interested about developing Condonery, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lkwlkww":6,"-":13}},{"path":"docs/team/frrramses.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Frrramses"},"content":"### Project: Condonery","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"Frrramses"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"Frrramses"},"content":"Condonery is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"Frrramses"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"Frrramses"},"content":"Below is my contribution to the project","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"Frrramses"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Frrramses":6}},{"path":"docs/team/lkwlkww.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"layout: page","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"title: Lee Kang Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"### Project: Condonery","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"**Condonery is a desktop application for managing condo property listings, as well as client details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"  * Note to self: Include link to my code on the tP code dashboard","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"* **Contibutions to User Guide**:","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"  * Completed the section for describing features of Condonery\u0027s client directory","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    * Note to self: can reproduce the exact parts that I wrote","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"* **Contributions to Developer Guide**:","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"  * Completed the Glossary section for key terms worth defining","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    * Note to self: can reproduce the exact parts that I wrote","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"* **Other documentation contributions**:","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"  * Updated the \\_config.yml file for Condonery\u0027s Github static site page which uses Jekyll","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"lkwlkww":30}},{"path":"docs/team/misterpuffin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"title: Haoren\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"### Project: Condonery","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"Condonery is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"misterpuffin":3,"-":43}},{"path":"docs/team/yuehernkang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"# Condonery","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"##Overview:","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"Condonery is an application that helps property agents","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"manage the contact list of clients.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"## Summary of Contributions:","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"Code contributed: [tp Code Dashboard](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dyuehernkang\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"Enhancements implemented: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"Contributions to the UG: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"Contributions to the DG: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"Review/mentoring contributions:  `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"[//]: # (Links to PRs reviewed, instances of helping team members in other ways.)","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"Contributions beyond the project team:  `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"Evidence of helping others: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"[//]: # (e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,)","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"Evidence of technical leadership: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"[//]: # (e.g. sharing useful information in the forum)","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yuehernkang":32}},{"path":"docs/team/zacchaeuschok.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"title: Zacchaeus\u0027 Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"### Project: Condonery","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"Condonery is a desktop address book application used for teaching Software Engineering principles.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"## Code Contributed","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"## Enhancements Implemented","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"## Contributions to the UG","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"## Contributions to the DG","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"## Contributions to Team-based Tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"## Review/Mentoring Contributions","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"To be added soon","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"zacchaeuschok":36}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"misterpuffin"},"content":"Create a `RemarkCommandParser` class in the `seedu.condonery.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"misterpuffin"},"content":"Create a new `Remark` in `seedu.condonery.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"misterpuffin"},"content":"Simply add the following to [`seedu.condonery.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"misterpuffin":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"The `address` field in `Person` is actually an instance of the `seedu.condonery.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"misterpuffin":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.condonery.logic.Logic`.","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"A quick look at the `seedu.condonery.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"misterpuffin":2,"-":299}},{"path":"src/main/java/seedu/condonery/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.FileUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"misterpuffin":3,"-":61}},{"path":"src/main/java/seedu/condonery/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"misterpuffin":1,"-":24}},{"path":"src/main/java/seedu/condonery/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.Config;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.Version;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.StringUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.Logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.LogicManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.ClientDirectoryStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.JsonClientDirectoryStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.JsonPropertyDirectoryStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.PropertyDirectoryStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.Storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.StorageManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.ui.Ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.ui.UiManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Condonery ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectoryStorage propertyDirectoryStorage \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"                new JsonPropertyDirectoryStorage(","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"                    userPrefs.getPropertyDirectoryFilePath()","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"                );","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"        ClientDirectoryStorage clientDirectoryStorage \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"                new JsonClientDirectoryStorage(","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"                    userPrefs.getClientDirectoryFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"        storage \u003d new StorageManager(propertyDirectoryStorage, clientDirectoryStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"        Optional\u003cReadOnlyPropertyDirectory\u003e propertyDirectoryOptional;","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"        ReadOnlyPropertyDirectory initialPropertyDirectoryData;","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"        Optional\u003cReadOnlyClientDirectory\u003e clientDirectoryOptional;","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"        ReadOnlyClientDirectory initialClientDirectoryData;","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"            propertyDirectoryOptional \u003d storage.readPropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"            if (!propertyDirectoryOptional.isPresent()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"                logger.info(\"Data file not found. Will be starting with a sample PropertyDirectory\");","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"            initialPropertyDirectoryData \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"                    propertyDirectoryOptional.orElseGet(SampleDataUtil::getSamplePropertyDirectory);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty PropertyDirectory\");","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"            initialPropertyDirectoryData \u003d new PropertyDirectory();","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PropertyDirectory\");","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"            initialPropertyDirectoryData \u003d new PropertyDirectory();","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"            clientDirectoryOptional \u003d storage.readClientDirectory();","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"            if (!clientDirectoryOptional.isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"                logger.info(\"Data file not found. Will be starting with a sample PropertyDirectory\");","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"yuehernkang"},"content":"            initialClientDirectoryData \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"yuehernkang"},"content":"                    clientDirectoryOptional.orElseGet(SampleDataUtil::getSampleClientDirectory);","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ClientDirectory\");","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"            initialClientDirectoryData \u003d new ClientDirectory();","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"misterpuffin"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ClientDirectory\");","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"            initialClientDirectoryData \u003d new ClientDirectory();","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"misterpuffin"},"content":"        return new ModelManager(initialPropertyDirectoryData, initialClientDirectoryData, userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"misterpuffin"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty UserPrefs\");","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"misterpuffin"},"content":"        logger.info(\"Starting Condonery \" + MainApp.VERSION);","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lkwlkww":4,"yuehernkang":2,"misterpuffin":61,"-":146}},{"path":"src/main/java/seedu/condonery/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":1,"-":62}},{"path":"src/main/java/seedu/condonery/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":1,"-":78}},{"path":"src/main/java/seedu/condonery/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    private static final String LOG_FILE \u003d \"condonery.log\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":2,"-":110}},{"path":"src/main/java/seedu/condonery/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX \u003d \"The property index provided is invalid\";","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_PROPERTIES_LISTED_OVERVIEW \u003d \"%1$d properties listed!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_INVALID_STATUS \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"            \"Only AVAILABLE, PENDING, SOLD status is accepted (Case sensitive)\";","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lkwlkww":2,"yuehernkang":3,"zacchaeuschok":1,"misterpuffin":1,"-":10}},{"path":"src/main/java/seedu/condonery/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":1,"-":115}},{"path":"src/main/java/seedu/condonery/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.core.index;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"        boolean result \u003d false;","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"        Index e \u003d (Index) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"        if (getZeroBased() \u003d\u003d e.getZeroBased()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"            result \u003d true;","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"        return result;","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"yuehernkang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"yuehernkang"},"content":"        return Objects.hash(zeroBasedIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"yuehernkang"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"yuehernkang"},"content":"        return \"Index{\"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"yuehernkang"},"content":"                + \"zeroBasedIndex\u003d\" + zeroBasedIndex","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"yuehernkang"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yuehernkang":31,"misterpuffin":1,"-":51}},{"path":"src/main/java/seedu/condonery/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":1,"-":10}},{"path":"src/main/java/seedu/condonery/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":1,"-":20}},{"path":"src/main/java/seedu/condonery/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.MainApp;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"misterpuffin":2,"-":40}},{"path":"src/main/java/seedu/condonery/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":1,"-":34}},{"path":"src/main/java/seedu/condonery/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.Config;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"misterpuffin":3,"-":20}},{"path":"src/main/java/seedu/condonery/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":1,"-":82}},{"path":"src/main/java/seedu/condonery/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":3,"-":140}},{"path":"src/main/java/seedu/condonery/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"     * Returns true if the {@code set} of words contains the {@code word}.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"zacchaeuschok"},"content":"     * @param set cannot be null","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"zacchaeuschok"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"zacchaeuschok"},"content":"    public static boolean containsWordIgnoreCase(Set\u003cString\u003e set, String word) {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(set);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"zacchaeuschok"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"zacchaeuschok"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"zacchaeuschok"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"zacchaeuschok"},"content":"        String preppedSentence \u003d String.join(\" \", set);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"zacchaeuschok"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"zacchaeuschok"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"zacchaeuschok"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zacchaeuschok":22,"misterpuffin":2,"-":66}},{"path":"src/main/java/seedu/condonery/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"     * Returns the PropertyDirectory.","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"     * @see seedu.condonery.model.Model#getPropertyDirectory()","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    ReadOnlyPropertyDirectory getPropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"    /** Returns an unmodifiable view of the filtered list of properties */","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"    ObservableList\u003cProperty\u003e getFilteredPropertyList();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    Path getPropertyDirectoryFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"     * Returns the ClientDirectory.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"     * @see seedu.condonery.model.Model#getClientDirectory()","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    ReadOnlyClientDirectory getClientDirectory();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"    /** Returns an unmodifiable view of the filtered list of clients*/","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"    Path getClientDirectoryFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    Path getUserImageDirectoryPath();","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lkwlkww":5,"misterpuffin":30,"-":37}},{"path":"src/main/java/seedu/condonery/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.CondoneryParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.Storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    private final CondoneryParser condoneryParser;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    private final Collection\u003cClass\u003c? extends Command\u003e\u003e commandsToIgnore \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"            Arrays.asList(HelpCommand.class, ExitCommand.class, UndoCommand.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"        condoneryParser \u003d new CondoneryParser();","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        Command command \u003d condoneryParser.parseCommand(commandText);","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        if (!commandsToIgnore.contains(command.getClass())) {","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"            model.addCommand(command);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"            storage.savePropertyDirectory(model.getPropertyDirectory());","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"            storage.saveClientDirectory(model.getClientDirectory());","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"    public ReadOnlyPropertyDirectory getPropertyDirectory() {","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"        return model.getPropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"    public ObservableList\u003cProperty\u003e getFilteredPropertyList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"        return model.getFilteredPropertyList();","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"    public Path getPropertyDirectoryFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"        return model.getPropertyDirectoryFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"    public ReadOnlyClientDirectory getClientDirectory() {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"        return model.getClientDirectory();","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"    public Path getClientDirectoryFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"        return model.getClientDirectoryFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"    public Path getUserImageDirectoryPath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"        return model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lkwlkww":5,"zacchaeuschok":1,"misterpuffin":51,"-":59}},{"path":"src/main/java/seedu/condonery/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":3,"-":17}},{"path":"src/main/java/seedu/condonery/logic/commands/CommandQueue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.EmptyQueueException;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":" * Keeps track of the various commands executed by user in the Application\u0027s lifecycle.","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"public class CommandQueue implements Iterable\u003cCommand\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"    private final List\u003cCommand\u003e commandQueue \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"    public void addCommand(Command command) {","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"        commandQueue.add(command);","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"     * Pops the last command from the queue.","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"     * @return previous command executed","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"     * @throws EmptyQueueException if queue is empty.","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    public Command popCommand() throws EmptyQueueException {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"        int size;","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"        if ((size \u003d commandQueue.size()) \u003e 0) {","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"            Command result \u003d commandQueue.get(size - 1);","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"            commandQueue.remove(size - 1);","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"            return result;","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"        } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"            throw new EmptyQueueException(\"No previous commands found!\");","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    public Iterator\u003cCommand\u003e iterator() {","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"        return commandQueue.iterator();","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"misterpuffin":40}},{"path":"src/main/java/seedu/condonery/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"    /** The application should prompt for image upload. */","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    private String imageToUploadName;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, String imageToUploadName) {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"        this.imageToUploadName \u003d imageToUploadName;","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    public String getImageToUploadName() {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        return imageToUploadName;","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"    public boolean isImageUpload() {","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"        return imageToUploadName !\u003d null;","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":22,"-":70}},{"path":"src/main/java/seedu/condonery/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" * Deletes a property identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"            + \": Deletes the property identified by the index number used in the displayed property list.\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_DELETE_PROPERTY_SUCCESS \u003d \"Deleted Property: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"        List\u003cProperty\u003e lastShownList \u003d model.getFilteredPropertyList();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"        Property propertyToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"        model.deleteProperty(propertyToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PROPERTY_SUCCESS, propertyToDelete));","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lkwlkww":9,"misterpuffin":5,"-":39}},{"path":"src/main/java/seedu/condonery/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"misterpuffin":2,"-":17}},{"path":"src/main/java/seedu/condonery/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":2,"-":19}},{"path":"src/main/java/seedu/condonery/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.EmptyQueueException;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":" * Undo the previous command.","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully undid previous command.\";","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"        CommandQueue commandQueue \u003d model.getCommandQueue();","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"            Command previousCommand \u003d commandQueue.popCommand();","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"            model.resetPropertyDirectory();","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"            model.resetClientDirectory();","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"            for (Command cmd : commandQueue) {","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"                cmd.execute(model);","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"        } catch (EmptyQueueException ex) {","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"            throw new CommandException(ex.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"misterpuffin":36}},{"path":"src/main/java/seedu/condonery/logic/commands/client/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.utils.ParseClientInterestedProperties;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":" * Adds a property to Condonery.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    public static final String COMMAND_WORD \u003d \"add -c\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to Condonery. \"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"            + PREFIX_NAME + \"Alice Tan \"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"            + PREFIX_ADDRESS + \"Cantonment Rd, #1G, S085301 \"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"            + PREFIX_TAG + \"Condo\";","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in Condonery\";","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    public static final String MESSAGE_IMAGE_UPLOAD \u003d \"Opened Upload Image window\";","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    private final Client toAdd;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"    private final boolean hasImage;","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"    private final ArrayList\u003cString\u003e missingProperties \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"    private final ArrayList\u003cString\u003e duplicateProperties \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"     * Creates an AddCommand to add the specified {@code Property}","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    public AddClientCommand(Client client) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        toAdd \u003d client;","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"        hasImage \u003d false;","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"     * Creates an AddCommand to add the specified {@code Client}, with a boolean to indicate if image is uploaded.","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"    public AddClientCommand(Client client, boolean hasImage) {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"        toAdd \u003d client;","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"        this.hasImage \u003d hasImage;","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"     * Gets an updated sucess message based on the presence of missing properties or duplicate properties.","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"    private String getUpdatedSuccessMessage(ArrayList\u003cString\u003e missingProperties,","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"                ArrayList\u003cString\u003e duplicateProperties) {","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"        String newSuccessMessage \u003d MESSAGE_SUCCESS + \". \";","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"        if (missingProperties.isEmpty() \u0026\u0026 duplicateProperties.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"            newSuccessMessage \u003d newSuccessMessage + \" No rejected property names.\";","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"        } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"            if (!missingProperties.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"                newSuccessMessage \u003d newSuccessMessage + \"Missing properties: \" + missingProperties","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"                        .stream()","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"                        .collect(Collectors.joining(\" \"))","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"                        + \". \";","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"            if (!duplicateProperties.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"                newSuccessMessage \u003d newSuccessMessage + \"Duplicate properties: \" + duplicateProperties","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"                        .stream()","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"                        .collect(Collectors.joining(\" \"))","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"                        + \". \";","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"        return newSuccessMessage;","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"        ParseClientInterestedProperties parser \u003d new ParseClientInterestedProperties(","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"lkwlkww"},"content":"            toAdd, model);","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"lkwlkww"},"content":"        Client newClientToAdd \u003d parser.getNewClient();","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"        newClientToAdd.setImageDirectoryPath(model.getUserPrefs().getUserImageDirectoryPath());","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"        String newMessageSuccess \u003d getUpdatedSuccessMessage(parser.getMissingProperties(),","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"            parser.getDuplicateProperties());","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"        model.addClient(newClientToAdd);","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"        if (this.hasImage) {","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"                String.format(newMessageSuccess, toAdd),","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"                false,","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"                false,","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"                \"client-\" + newClientToAdd.getCamelCaseName()","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"            );","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"lkwlkww"},"content":"        return new CommandResult(String.format(newMessageSuccess, newClientToAdd));","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"misterpuffin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"misterpuffin"},"content":"                || (other instanceof AddClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 toAdd.equals(((AddClientCommand) other).toAdd));","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"lkwlkww":42,"misterpuffin":84}},{"path":"src/main/java/seedu/condonery/logic/commands/client/ClearClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ClientDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":" * Clears the client directory.","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"public class ClearClientCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String COMMAND_WORD \u003d \"clear -c\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Client directory has been cleared!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"        model.setClientDirectory(new ClientDirectory());","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"lkwlkww":1,"zacchaeuschok":25}},{"path":"src/main/java/seedu/condonery/logic/commands/client/DeleteClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.io.File;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":" * Deletes a {@code Client} from Condonery.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"public class DeleteClientCommand extends Command {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"    public static final String COMMAND_WORD \u003d \"delete -c\";","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"            + \": Delete a client from Condonery.\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Client successfully deleted: %1$s\";","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"     * Creates an DeleteCommand to delete the specified {@code Client}","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"    public DeleteClientCommand(Index targetIndex) {","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"        Client clientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        File image \u003d new File(clientToDelete.getImagePath().toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"        image.delete();","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"        model.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete));","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"                || (other instanceof DeleteClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteClientCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yuehernkang":60,"misterpuffin":3}},{"path":"src/main/java/seedu/condonery/logic/commands/client/EditClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_INTERESTEDPROPERTIES;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import java.io.File;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.utils.ParseClientInterestedProperties;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":" * Edits the details of an existing client in the address book.","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"public class EditClientCommand extends Command {","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"    public static final String COMMAND_WORD \u003d \"edit -c\";","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the specified \"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"            + \"client in Condonery. \"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"            + PREFIX_NAME + \"Alice Tan\"","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"            + PREFIX_ADDRESS + \"Cantonment Rd, #1G, S085301 \"","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"            + PREFIX_TAG + \"Condo\"","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"            + PREFIX_INTERESTEDPROPERTIES + \"duxton\";","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Client successfully edited: %1$s\";","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book.\";","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"    private final EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"    private boolean hasImage \u003d false;","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"     * Creates a EditClientCommand to edit the specific {@code Client} at the specified index","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"     * @param targetIndex index of the client to edit","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"     * @param editClientDescriptor details to edit the client","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"    public EditClientCommand(Index targetIndex, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"yuehernkang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"yuehernkang"},"content":"        this.editClientDescriptor \u003d editClientDescriptor;","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"     * Overloaded Constructor to specify if user is editting the Client image.","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"     * @param targetIndex index of the client to edit","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"     * @param editClientDescriptor details to edit the client","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"     * @param hasImage boolean image is being uploaded","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"    public EditClientCommand(Index targetIndex, EditClientDescriptor editClientDescriptor, boolean hasImage) {","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"        this(targetIndex, editClientDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"        this.hasImage \u003d true;","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"yuehernkang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"yuehernkang"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"yuehernkang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"yuehernkang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"yuehernkang"},"content":"        Client clientToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"        Path imageDirectoryPath \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"        Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor, imageDirectoryPath);","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"        // Parsed interested properties","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"        Client newEditedClient \u003d new ParseClientInterestedProperties(editedClient, model).getNewClient();","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"yuehernkang"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"yuehernkang"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"        File existingImage \u003d new File(clientToEdit.getImagePath().toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"        if (existingImage.exists()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"            existingImage.renameTo(new File(newEditedClient.getImagePath().toString()));","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"        model.setClient(clientToEdit, newEditedClient);","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"yuehernkang"},"content":"        model.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"        if (this.hasImage) {","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"                String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient),","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"                false,","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"                false,","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"                \"client-\" + newEditedClient.getCamelCaseName()","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":"            );","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"lkwlkww"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, newEditedClient));","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"yuehernkang"},"content":"    public EditClientDescriptor getEditClientDescriptor() {","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"yuehernkang"},"content":"        return editClientDescriptor;","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"yuehernkang"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"yuehernkang"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2022-10-19"},{"lineNumber":130,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"yuehernkang"},"content":"    private static Client createEditedClient(Client clientToEdit,","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"misterpuffin"},"content":"                                             EditClientDescriptor editClientDescriptor,","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"misterpuffin"},"content":"                                             Path imageDirectoryPath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"yuehernkang"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"yuehernkang"},"content":"        Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"yuehernkang"},"content":"        Address updatedAddress \u003d editClientDescriptor.getAddress().orElse(clientToEdit.getAddress());","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"yuehernkang"},"content":"        Set\u003cTag\u003e updatedTags \u003d editClientDescriptor.getTags().orElse(clientToEdit.getTags());","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cProperty\u003e updatedInterestedProperties \u003d editClientDescriptor","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"lkwlkww"},"content":"                .getInterestedProperties()","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"lkwlkww"},"content":"                .orElse(clientToEdit.getInterestedProperties());","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"misterpuffin"},"content":"        Client updatedClient \u003d new Client(updatedName, updatedAddress, updatedTags, updatedInterestedProperties);","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"misterpuffin"},"content":"        updatedClient.setImageDirectoryPath(imageDirectoryPath);","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"misterpuffin"},"content":"        return updatedClient;","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":149,"author":{"gitId":"yuehernkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":150,"author":{"gitId":"yuehernkang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":151,"author":{"gitId":"yuehernkang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-19"},{"lineNumber":152,"author":{"gitId":"yuehernkang"},"content":"            return true;","lastModifiedDate":"2022-10-19"},{"lineNumber":153,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":154,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"yuehernkang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"yuehernkang"},"content":"        if (!(other instanceof EditClientCommand)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"yuehernkang"},"content":"            return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"yuehernkang"},"content":"        EditClientCommand e \u003d (EditClientCommand) other;","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"yuehernkang"},"content":"        if (!this.targetIndex.equals(e.targetIndex)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"yuehernkang"},"content":"            return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":165,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":166,"author":{"gitId":"yuehernkang"},"content":"        return editClientDescriptor.equals(e.getEditClientDescriptor());","lastModifiedDate":"2022-10-19"},{"lineNumber":167,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":168,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":169,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"yuehernkang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"yuehernkang"},"content":"        return Objects.hash(targetIndex, editClientDescriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":174,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":175,"author":{"gitId":"yuehernkang"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-19"},{"lineNumber":176,"author":{"gitId":"yuehernkang"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2022-10-19"},{"lineNumber":177,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":178,"author":{"gitId":"yuehernkang"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2022-10-19"},{"lineNumber":179,"author":{"gitId":"yuehernkang"},"content":"        private Name name;","lastModifiedDate":"2022-10-19"},{"lineNumber":180,"author":{"gitId":"yuehernkang"},"content":"        private Address address;","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"yuehernkang"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":182,"author":{"gitId":"lkwlkww"},"content":"        private Set\u003cProperty\u003e interestedProperties;","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":184,"author":{"gitId":"yuehernkang"},"content":"        public EditClientDescriptor() {}","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":186,"author":{"gitId":"yuehernkang"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":187,"author":{"gitId":"yuehernkang"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-19"},{"lineNumber":188,"author":{"gitId":"lkwlkww"},"content":"         * A defensive copy of {@code tags} and {@code interestedProperties} is used internally.","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"yuehernkang"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"yuehernkang"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"yuehernkang"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-19"},{"lineNumber":192,"author":{"gitId":"yuehernkang"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-10-19"},{"lineNumber":193,"author":{"gitId":"yuehernkang"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"lkwlkww"},"content":"            setInterestedProperties(toCopy.interestedProperties);","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":196,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"yuehernkang"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":198,"author":{"gitId":"yuehernkang"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-19"},{"lineNumber":199,"author":{"gitId":"yuehernkang"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":200,"author":{"gitId":"yuehernkang"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-19"},{"lineNumber":201,"author":{"gitId":"yuehernkang"},"content":"            return CollectionUtil.isAnyNonNull(name, address, tags);","lastModifiedDate":"2022-10-19"},{"lineNumber":202,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":203,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":204,"author":{"gitId":"yuehernkang"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-19"},{"lineNumber":205,"author":{"gitId":"yuehernkang"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-19"},{"lineNumber":206,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":207,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":208,"author":{"gitId":"yuehernkang"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-19"},{"lineNumber":209,"author":{"gitId":"yuehernkang"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-19"},{"lineNumber":210,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":211,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":212,"author":{"gitId":"yuehernkang"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-10-19"},{"lineNumber":213,"author":{"gitId":"yuehernkang"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-10-19"},{"lineNumber":214,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":215,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":216,"author":{"gitId":"yuehernkang"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-10-19"},{"lineNumber":217,"author":{"gitId":"yuehernkang"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-10-19"},{"lineNumber":218,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":219,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":220,"author":{"gitId":"yuehernkang"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":221,"author":{"gitId":"yuehernkang"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-19"},{"lineNumber":222,"author":{"gitId":"yuehernkang"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-19"},{"lineNumber":223,"author":{"gitId":"yuehernkang"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":224,"author":{"gitId":"yuehernkang"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-19"},{"lineNumber":225,"author":{"gitId":"yuehernkang"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-19"},{"lineNumber":226,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":227,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":228,"author":{"gitId":"yuehernkang"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":229,"author":{"gitId":"yuehernkang"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-19"},{"lineNumber":230,"author":{"gitId":"yuehernkang"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-19"},{"lineNumber":231,"author":{"gitId":"yuehernkang"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-19"},{"lineNumber":232,"author":{"gitId":"yuehernkang"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":233,"author":{"gitId":"yuehernkang"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-19"},{"lineNumber":234,"author":{"gitId":"yuehernkang"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-19"},{"lineNumber":235,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":236,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":237,"author":{"gitId":"lkwlkww"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"lkwlkww"},"content":"         * Sets {@code properies} to this object\u0027s {@code properties}.","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"lkwlkww"},"content":"         * A defensive copy of {@code properties} is used internally.","lastModifiedDate":"2022-10-28"},{"lineNumber":240,"author":{"gitId":"lkwlkww"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"lkwlkww"},"content":"        public void setInterestedProperties(Set\u003cProperty\u003e properties) {","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"lkwlkww"},"content":"            this.interestedProperties \u003d (interestedProperties !\u003d null)","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"lkwlkww"},"content":"                    ? new HashSet\u003c\u003e(interestedProperties)","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"lkwlkww"},"content":"                    : null;","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"lkwlkww"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":248,"author":{"gitId":"lkwlkww"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-28"},{"lineNumber":249,"author":{"gitId":"lkwlkww"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-28"},{"lineNumber":250,"author":{"gitId":"lkwlkww"},"content":"         * Returns {@code Optional#empty()} if {@code properties} is null.","lastModifiedDate":"2022-10-28"},{"lineNumber":251,"author":{"gitId":"lkwlkww"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":252,"author":{"gitId":"lkwlkww"},"content":"        public Optional\u003cSet\u003cProperty\u003e\u003e getInterestedProperties() {","lastModifiedDate":"2022-10-28"},{"lineNumber":253,"author":{"gitId":"lkwlkww"},"content":"            return (interestedProperties !\u003d null)","lastModifiedDate":"2022-10-28"},{"lineNumber":254,"author":{"gitId":"lkwlkww"},"content":"                    ? Optional.of(Collections.unmodifiableSet(interestedProperties))","lastModifiedDate":"2022-10-28"},{"lineNumber":255,"author":{"gitId":"lkwlkww"},"content":"                    : Optional.empty();","lastModifiedDate":"2022-10-28"},{"lineNumber":256,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":257,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":259,"author":{"gitId":"yuehernkang"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":260,"author":{"gitId":"yuehernkang"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":261,"author":{"gitId":"yuehernkang"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":262,"author":{"gitId":"yuehernkang"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-19"},{"lineNumber":263,"author":{"gitId":"yuehernkang"},"content":"                return true;","lastModifiedDate":"2022-10-19"},{"lineNumber":264,"author":{"gitId":"yuehernkang"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":265,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":266,"author":{"gitId":"yuehernkang"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":267,"author":{"gitId":"yuehernkang"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":268,"author":{"gitId":"yuehernkang"},"content":"                return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":269,"author":{"gitId":"yuehernkang"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":270,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":271,"author":{"gitId":"yuehernkang"},"content":"            // state check","lastModifiedDate":"2022-10-19"},{"lineNumber":272,"author":{"gitId":"yuehernkang"},"content":"            EditClientDescriptor e \u003d (EditClientDescriptor) other;","lastModifiedDate":"2022-10-19"},{"lineNumber":273,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":274,"author":{"gitId":"yuehernkang"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-19"},{"lineNumber":275,"author":{"gitId":"yuehernkang"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-10-19"},{"lineNumber":276,"author":{"gitId":"lkwlkww"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-10-28"},{"lineNumber":277,"author":{"gitId":"lkwlkww"},"content":"                    \u0026\u0026 getInterestedProperties().equals(e.getInterestedProperties());","lastModifiedDate":"2022-10-28"},{"lineNumber":278,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":279,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":280,"author":{"gitId":"yuehernkang"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":281,"author":{"gitId":"yuehernkang"},"content":"        public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":282,"author":{"gitId":"yuehernkang"},"content":"            return \"EditPropertyDescriptor{\"","lastModifiedDate":"2022-10-19"},{"lineNumber":283,"author":{"gitId":"yuehernkang"},"content":"                    + \"name\u003d\" + name","lastModifiedDate":"2022-10-19"},{"lineNumber":284,"author":{"gitId":"yuehernkang"},"content":"                    + \", address\u003d\" + address","lastModifiedDate":"2022-10-19"},{"lineNumber":285,"author":{"gitId":"yuehernkang"},"content":"                    + \", tags\u003d\" + tags","lastModifiedDate":"2022-10-19"},{"lineNumber":286,"author":{"gitId":"lkwlkww"},"content":"                    + \", interested properties\u003d\" + interestedProperties","lastModifiedDate":"2022-10-28"},{"lineNumber":287,"author":{"gitId":"yuehernkang"},"content":"                    + \u0027}\u0027;","lastModifiedDate":"2022-10-19"},{"lineNumber":288,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":289,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":290,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":291,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":292,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yuehernkang":214,"lkwlkww":41,"zacchaeuschok":1,"misterpuffin":36}},{"path":"src/main/java/seedu/condonery/logic/commands/client/FilterClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.client.ClientTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":" * Finds and lists all properties in Condonery whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class FilterClientCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String COMMAND_WORD \u003d \"filter -c\";","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose tags contain any of \"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Example: \" + COMMAND_WORD + \" high-end\";","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    private final ClientTagContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"    public FilterClientCommand(ClientTagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"zacchaeuschok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof FilterClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 predicate.equals(((FilterClientCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"zacchaeuschok":44}},{"path":"src/main/java/seedu/condonery/logic/commands/client/FindClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.client.ClientNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":" * Finds and lists all properties in Condonery whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class FindClientCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String COMMAND_WORD \u003d \"find -c\";","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    private final ClientNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"    public FindClientCommand(ClientNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof FindClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 predicate.equals(((FindClientCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lkwlkww":1,"zacchaeuschok":13,"misterpuffin":2,"-":28}},{"path":"src/main/java/seedu/condonery/logic/commands/client/ListClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":" * Lists all properties in the address book to the user.","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"public class ListClientCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"    public static final String COMMAND_WORD \u003d \"list -c\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lkwlkww":1,"misterpuffin":9,"-":15}},{"path":"src/main/java/seedu/condonery/logic/commands/client/SelectClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":" * Selects a client to view its details.","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"public class SelectClientCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    public static final String COMMAND_WORD \u003d \"select -c\";","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"            + \": Selects a client.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Client %1$s is selected and its details are currently shown below\";","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"     * Creates a SelectCommand to select the specified {@code Client}","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"    public SelectClientCommand(Index targetIndex) {","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        Client clientToSelect \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"        model.updateFilteredClientList(client -\u003e client.equals(clientToSelect));","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cProperty\u003e interestedProperties \u003d clientToSelect.getInterestedProperties();","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"        model.updateFilteredPropertyList(property -\u003e interestedProperties.contains(property));","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, clientToSelect.getName().toString()));","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"                || (other instanceof SelectClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"                \u0026\u0026 targetIndex.equals(((SelectClientCommand) other).targetIndex));","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"lkwlkww":65}},{"path":"src/main/java/seedu/condonery/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"misterpuffin":1,"-":16}},{"path":"src/main/java/seedu/condonery/logic/commands/exceptions/EmptyQueueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands.exceptions;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandQueue;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":" * Represents an error which occurs when trying to pop from empty {@link CommandQueue}.","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"public class EmptyQueueException extends Exception {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"    public EmptyQueueException(String message) {","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"        super(message);","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"    public EmptyQueueException(String message, Throwable cause) {","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"        super(message, cause);","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"misterpuffin":19}},{"path":"src/main/java/seedu/condonery/logic/commands/property/AddPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_IMAGE_UPLOAD;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PROPERTY_TYPE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.utils.ParsePropertyInterestedClients;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":" * Adds a property to Condonery.","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"public class AddPropertyCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"    public static final String COMMAND_WORD \u003d \"add -p\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a property to Condonery. \"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"            + PREFIX_PROPERTY_TYPE + \"PROPERTY_TYPE \"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"            + \"[\" + PREFIX_IMAGE_UPLOAD + \"] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"            + PREFIX_NAME + \"PINNACLE@DUXTON \"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"            + PREFIX_ADDRESS + \"Cantonment Rd, #1G, S085301 \"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"            + PREFIX_PRICE + \"1000000 \"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"            + PREFIX_PROPERTY_TYPE + \"HDB \"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"            + PREFIX_TAG + \"High-End \";","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New property added: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"This property already exists in Condonery\";","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"    public static final String MESSAGE_IMAGE_UPLOAD \u003d \"Opened Upload Image window\";","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"    private final Property toAdd;","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"    private final boolean hasImage;","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"    private final ArrayList\u003cString\u003e missingClients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"    private final ArrayList\u003cString\u003e duplicateClients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"     * Creates an AddCommand to add the specified {@code Property}","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"    public AddPropertyCommand(Property property) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(property);","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        this.toAdd \u003d property;","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"        this.hasImage \u003d false;","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"     * Creates an AddCommand to add the specified {@code Property}, with a boolean to indicate if image is uploaded.","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"    public AddPropertyCommand(Property property, boolean hasImage) {","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(property);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"        toAdd \u003d property;","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"        this.hasImage \u003d hasImage;","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"     * Gets an updated sucess message based on the presence of missing clients or duplicate clients.","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"    private String getUpdatedSuccessMessage(ArrayList\u003cString\u003e missingClients, ArrayList\u003cString\u003e duplicateClients) {","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"        String newSuccessMessage \u003d MESSAGE_SUCCESS + \". \";","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"        if (missingClients.isEmpty() \u0026\u0026 duplicateClients.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"            newSuccessMessage \u003d newSuccessMessage + \"No rejected client names.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"            if (!missingClients.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"                newSuccessMessage \u003d newSuccessMessage + \"Missing clients: \" + missingClients","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"                        .stream()","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"                        .collect(Collectors.joining(\" \"))","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"                        + \". \";","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"            if (!duplicateClients.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"                newSuccessMessage \u003d newSuccessMessage + \"Duplicate clients: \" + duplicateClients","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"                        .stream()","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"                        .collect(Collectors.joining(\" \"))","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":"                        + \". \";","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"        return newSuccessMessage;","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"        if (model.hasProperty(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"lkwlkww"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"        toAdd.setImageDirectoryPath(model.getUserPrefs().getUserImageDirectoryPath());","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"        ParsePropertyInterestedClients parser \u003d new ParsePropertyInterestedClients(","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"                toAdd, model);","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"        Property newPropertyToAdd \u003d parser.getNewProperty();","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"        String newMessageSuccess \u003d getUpdatedSuccessMessage(parser.getMissingClients(), parser.getDuplicateClients());","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"lkwlkww"},"content":"        model.addProperty(newPropertyToAdd);","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"        if (this.hasImage) {","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"lkwlkww"},"content":"                    String.format(newMessageSuccess, newPropertyToAdd),","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"                    false,","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"                    false,","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"lkwlkww"},"content":"                    \"property-\" + newPropertyToAdd.getCamelCaseName());","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"        return new CommandResult(String.format(newMessageSuccess, newPropertyToAdd));","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":124,"author":{"gitId":"lkwlkww"},"content":"                || (other instanceof AddPropertyCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"lkwlkww"},"content":"                \u0026\u0026 toAdd.equals(((AddPropertyCommand) other).toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":127,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"zacchaeuschok"},"content":"    public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"zacchaeuschok"},"content":"        return toAdd.toString();","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lkwlkww":63,"yuehernkang":2,"zacchaeuschok":10,"misterpuffin":24,"-":33}},{"path":"src/main/java/seedu/condonery/logic/commands/property/ClearPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":" * Clears the property directory.","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"public class ClearPropertyCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String COMMAND_WORD \u003d \"clear -p\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Property directory has been cleared!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"        model.setPropertyDirectory(new PropertyDirectory());","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"lkwlkww":1,"zacchaeuschok":24}},{"path":"src/main/java/seedu/condonery/logic/commands/property/DeletePropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.io.File;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":" * Deletes a property from Condonery.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"public class DeletePropertyCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"    public static final String COMMAND_WORD \u003d \"delete -p\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"            + \": Delete a property from Condonery.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_DELETE_PROPERTY_SUCCESS \u003d \"Property successfully deleted: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"     * Creates an DeleteCommand to delete the specified {@code Property}","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"    public DeletePropertyCommand(Index targetIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"        List\u003cProperty\u003e lastShownList \u003d model.getFilteredPropertyList();","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"        Property propertyToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        File image \u003d new File(propertyToDelete.getImagePath().toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"        image.delete();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"        model.deleteProperty(propertyToDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PROPERTY_SUCCESS, propertyToDelete));","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"zacchaeuschok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof DeletePropertyCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePropertyCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"yuehernkang":48,"zacchaeuschok":11,"misterpuffin":3}},{"path":"src/main/java/seedu/condonery/logic/commands/property/EditPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_INTERESTEDCLIENTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PROPERTY_TYPE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import java.io.File;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.Price;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.utils.ParsePropertyInterestedClients;","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":" * Edits the details of an existing property in the address book.","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"public class EditPropertyCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"    public static final String COMMAND_WORD \u003d \"edit -p\";","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the property identified \"","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"            + \"by the index number used in the displayed property list. \"","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"zacchaeuschok"},"content":"            + \"[\" + PREFIX_PRICE + \"PRICE] \"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"            + \"[\" + PREFIX_INTERESTEDCLIENTS + \"INTERESTED-CLIENTS]...\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"            + \"[\" + PREFIX_PROPERTY_TYPE + \"PROPERTY TYPE] \"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_EDIT_PROPERTY_SUCCESS \u003d \"Property successfully edited: %1$s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"This property already exists in the address book.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"    private final EditPropertyDescriptor editPropertyDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"    private boolean hasImage \u003d false;","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"     * Creates a EditPropertyCommand to edit the specific {@code Property} at the specified index","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"     * @param targetIndex of the property to edit","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"     * @param editPropertyDescriptor details to edit the property","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"    public EditPropertyCommand(Index targetIndex, EditPropertyDescriptor editPropertyDescriptor) {","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(editPropertyDescriptor);","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"yuehernkang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"yuehernkang"},"content":"        this.editPropertyDescriptor \u003d new EditPropertyDescriptor(editPropertyDescriptor);","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"     * Overloaded Constructor for hasImage boolean to determine if Command includes image upload.","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"     * @param targetIndex of the property to edit","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"     * @param editPropertyDescriptor details to edit the property","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"     * @param hasImage true if image is uploaded.","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"    public EditPropertyCommand(Index targetIndex,","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"                                     EditPropertyDescriptor editPropertyDescriptor,","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"                                     boolean hasImage) {","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"        this(targetIndex, editPropertyDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"        this.hasImage \u003d hasImage;","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"yuehernkang"},"content":"    public EditPropertyDescriptor getEditPropertyDescriptor() {","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"yuehernkang"},"content":"        return editPropertyDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"yuehernkang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"yuehernkang"},"content":"        List\u003cProperty\u003e lastShownList \u003d model.getFilteredPropertyList();","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"yuehernkang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"yuehernkang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"yuehernkang"},"content":"        Property propertyToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"        Path imageDirectoryPath \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"        Property editedProperty \u003d createEditedProperty(propertyToEdit, editPropertyDescriptor, imageDirectoryPath);","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"        // Parsed interested clients","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"        Property newEditedProperty \u003d new ParsePropertyInterestedClients(editedProperty, model).getNewProperty();","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"        if (!propertyToEdit.isSameProperty(newEditedProperty) \u0026\u0026 model.hasProperty(newEditedProperty)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"yuehernkang"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"        File existingImage \u003d new File(propertyToEdit.getImagePath().toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"        if (existingImage.exists()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"            existingImage.renameTo(new File(editedProperty.getImagePath().toString()));","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"        model.setProperty(propertyToEdit, newEditedProperty);","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"yuehernkang"},"content":"        model.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"misterpuffin"},"content":"        if (this.hasImage) {","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"misterpuffin"},"content":"                String.format(MESSAGE_EDIT_PROPERTY_SUCCESS, newEditedProperty),","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"misterpuffin"},"content":"                false,","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"misterpuffin"},"content":"                false,","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"misterpuffin"},"content":"                \"property-\" + newEditedProperty.getCamelCaseName()","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"misterpuffin"},"content":"            );","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"lkwlkww"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PROPERTY_SUCCESS, newEditedProperty));","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"yuehernkang"},"content":"     * Creates and returns a {@code Property} with the details of {@code propertyToEdit}","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"yuehernkang"},"content":"     * edited with {@code editPropertyDescriptor}.","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"yuehernkang"},"content":"    private static Property createEditedProperty(Property propertyToEdit,","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"misterpuffin"},"content":"                                                 EditPropertyDescriptor editPropertyDescriptor,","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"misterpuffin"},"content":"                                                 Path imageDirectoryPath) {","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"yuehernkang"},"content":"        assert propertyToEdit !\u003d null;","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"yuehernkang"},"content":"        Name updatedName \u003d editPropertyDescriptor.getName().orElse(propertyToEdit.getName());","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"yuehernkang"},"content":"        Address updatedAddress \u003d editPropertyDescriptor.getAddress().orElse(propertyToEdit.getAddress());","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"zacchaeuschok"},"content":"        Price updatedPrice \u003d editPropertyDescriptor.getPrice().orElse(propertyToEdit.getPrice());","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"yuehernkang"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPropertyDescriptor.getTags().orElse(propertyToEdit.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cClient\u003e updatedInterestedClients \u003d editPropertyDescriptor","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"lkwlkww"},"content":"                .getInterestedClients()","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"lkwlkww"},"content":"                .orElse(propertyToEdit.getInterestedClients());","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"yuehernkang"},"content":"        PropertyTypeEnum propertyTypeEnum \u003d editPropertyDescriptor","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"yuehernkang"},"content":"                .getPropertyTypeEnum().orElse(propertyToEdit.getPropertyTypeEnum());","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"yuehernkang"},"content":"        PropertyStatusEnum propertyStatusEnum \u003d editPropertyDescriptor","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"yuehernkang"},"content":"                .getPropertyStatusEnum().orElse(propertyToEdit.getPropertyStatusEnum());","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"yuehernkang"},"content":"        Property updatedProperty \u003d new Property(updatedName, updatedAddress,","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"yuehernkang"},"content":"                updatedPrice,","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"yuehernkang"},"content":"                updatedTags,","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"lkwlkww"},"content":"                updatedInterestedClients,","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"yuehernkang"},"content":"                propertyTypeEnum,","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"yuehernkang"},"content":"                propertyStatusEnum);","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"misterpuffin"},"content":"        updatedProperty.setImageDirectoryPath(imageDirectoryPath);","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"misterpuffin"},"content":"        return updatedProperty;","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"yuehernkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"yuehernkang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"yuehernkang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"yuehernkang"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"yuehernkang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"yuehernkang"},"content":"        if (!(other instanceof EditPropertyCommand)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"yuehernkang"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand e \u003d (EditPropertyCommand) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"yuehernkang"},"content":"        if (!this.targetIndex.equals(e.targetIndex)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"yuehernkang"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"yuehernkang"},"content":"        return editPropertyDescriptor.equals(e.getEditPropertyDescriptor());","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":184,"author":{"gitId":"yuehernkang"},"content":"     * Stores the details to edit the property with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-15"},{"lineNumber":185,"author":{"gitId":"yuehernkang"},"content":"     * corresponding field value of the property.","lastModifiedDate":"2022-10-15"},{"lineNumber":186,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":187,"author":{"gitId":"yuehernkang"},"content":"    public static class EditPropertyDescriptor {","lastModifiedDate":"2022-10-15"},{"lineNumber":188,"author":{"gitId":"yuehernkang"},"content":"        private Name name;","lastModifiedDate":"2022-10-15"},{"lineNumber":189,"author":{"gitId":"yuehernkang"},"content":"        private Address address;","lastModifiedDate":"2022-10-15"},{"lineNumber":190,"author":{"gitId":"zacchaeuschok"},"content":"        private Price price;","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"yuehernkang"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-15"},{"lineNumber":192,"author":{"gitId":"lkwlkww"},"content":"        private Set\u003cClient\u003e interestedClients;","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"yuehernkang"},"content":"        private PropertyTypeEnum propertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"yuehernkang"},"content":"        private PropertyStatusEnum propertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":196,"author":{"gitId":"yuehernkang"},"content":"        public EditPropertyDescriptor() {}","lastModifiedDate":"2022-10-15"},{"lineNumber":197,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":198,"author":{"gitId":"yuehernkang"},"content":"        /**","lastModifiedDate":"2022-10-15"},{"lineNumber":199,"author":{"gitId":"yuehernkang"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"lkwlkww"},"content":"         * A defensive copy of {@code tags} and {@code interestedClients} is used internally.","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"yuehernkang"},"content":"         */","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"yuehernkang"},"content":"        public EditPropertyDescriptor(EditPropertyDescriptor toCopy) {","lastModifiedDate":"2022-10-15"},{"lineNumber":203,"author":{"gitId":"yuehernkang"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-15"},{"lineNumber":204,"author":{"gitId":"yuehernkang"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-10-15"},{"lineNumber":205,"author":{"gitId":"zacchaeuschok"},"content":"            setPrice(toCopy.price);","lastModifiedDate":"2022-10-20"},{"lineNumber":206,"author":{"gitId":"yuehernkang"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-10-15"},{"lineNumber":207,"author":{"gitId":"lkwlkww"},"content":"            setInterestedClients(toCopy.interestedClients);","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"yuehernkang"},"content":"            setPropertyTypeEnum(toCopy.propertyTypeEnum);","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"yuehernkang"},"content":"            setPropertyStatusEnum(toCopy.propertyStatusEnum);","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":211,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":212,"author":{"gitId":"yuehernkang"},"content":"        /**","lastModifiedDate":"2022-10-15"},{"lineNumber":213,"author":{"gitId":"yuehernkang"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-15"},{"lineNumber":214,"author":{"gitId":"yuehernkang"},"content":"         */","lastModifiedDate":"2022-10-15"},{"lineNumber":215,"author":{"gitId":"yuehernkang"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-15"},{"lineNumber":216,"author":{"gitId":"yuehernkang"},"content":"            return CollectionUtil.isAnyNonNull(name, address, tags);","lastModifiedDate":"2022-10-15"},{"lineNumber":217,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":218,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":219,"author":{"gitId":"yuehernkang"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-15"},{"lineNumber":220,"author":{"gitId":"yuehernkang"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-15"},{"lineNumber":221,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":222,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":223,"author":{"gitId":"yuehernkang"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-15"},{"lineNumber":224,"author":{"gitId":"yuehernkang"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-15"},{"lineNumber":225,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":226,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":227,"author":{"gitId":"yuehernkang"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-10-15"},{"lineNumber":228,"author":{"gitId":"yuehernkang"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-10-15"},{"lineNumber":229,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":230,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":231,"author":{"gitId":"yuehernkang"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-10-15"},{"lineNumber":232,"author":{"gitId":"yuehernkang"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-10-15"},{"lineNumber":233,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":234,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":235,"author":{"gitId":"yuehernkang"},"content":"        /**","lastModifiedDate":"2022-10-15"},{"lineNumber":236,"author":{"gitId":"yuehernkang"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-15"},{"lineNumber":237,"author":{"gitId":"yuehernkang"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-15"},{"lineNumber":238,"author":{"gitId":"yuehernkang"},"content":"         */","lastModifiedDate":"2022-10-15"},{"lineNumber":239,"author":{"gitId":"yuehernkang"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-15"},{"lineNumber":240,"author":{"gitId":"yuehernkang"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-15"},{"lineNumber":241,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":242,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":243,"author":{"gitId":"yuehernkang"},"content":"        /**","lastModifiedDate":"2022-10-15"},{"lineNumber":244,"author":{"gitId":"yuehernkang"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-15"},{"lineNumber":245,"author":{"gitId":"yuehernkang"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-15"},{"lineNumber":246,"author":{"gitId":"yuehernkang"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-15"},{"lineNumber":247,"author":{"gitId":"yuehernkang"},"content":"         */","lastModifiedDate":"2022-10-15"},{"lineNumber":248,"author":{"gitId":"yuehernkang"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-15"},{"lineNumber":249,"author":{"gitId":"yuehernkang"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-15"},{"lineNumber":250,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":251,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":252,"author":{"gitId":"zacchaeuschok"},"content":"        public void setPrice(Price price) {","lastModifiedDate":"2022-10-20"},{"lineNumber":253,"author":{"gitId":"zacchaeuschok"},"content":"            this.price \u003d price;","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":255,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":256,"author":{"gitId":"zacchaeuschok"},"content":"        public Optional\u003cPrice\u003e getPrice() {","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"zacchaeuschok"},"content":"            return Optional.ofNullable(price);","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":260,"author":{"gitId":"lkwlkww"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":261,"author":{"gitId":"lkwlkww"},"content":"         * Sets {@code interestedClients} to this object\u0027s {@code interestedClients}.","lastModifiedDate":"2022-10-20"},{"lineNumber":262,"author":{"gitId":"lkwlkww"},"content":"         * A defensive copy of {@code interestedClients} is used internally.","lastModifiedDate":"2022-10-20"},{"lineNumber":263,"author":{"gitId":"lkwlkww"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":264,"author":{"gitId":"lkwlkww"},"content":"        public void setInterestedClients(Set\u003cClient\u003e interestedClients) {","lastModifiedDate":"2022-10-20"},{"lineNumber":265,"author":{"gitId":"lkwlkww"},"content":"            this.interestedClients \u003d (interestedClients !\u003d null) ? new HashSet\u003c\u003e(interestedClients) : null;","lastModifiedDate":"2022-10-20"},{"lineNumber":266,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":267,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":268,"author":{"gitId":"lkwlkww"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":269,"author":{"gitId":"lkwlkww"},"content":"         * Returns an unmodifiable client set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"lkwlkww"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-20"},{"lineNumber":271,"author":{"gitId":"lkwlkww"},"content":"         * Returns {@code Optional#empty()} if {@code interestedClients} is null.","lastModifiedDate":"2022-10-20"},{"lineNumber":272,"author":{"gitId":"lkwlkww"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":273,"author":{"gitId":"lkwlkww"},"content":"        public Optional\u003cSet\u003cClient\u003e\u003e getInterestedClients() {","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"lkwlkww"},"content":"            return (interestedClients !\u003d null)","lastModifiedDate":"2022-10-27"},{"lineNumber":275,"author":{"gitId":"lkwlkww"},"content":"                    ? Optional.of(Collections.unmodifiableSet(interestedClients))","lastModifiedDate":"2022-10-27"},{"lineNumber":276,"author":{"gitId":"lkwlkww"},"content":"                    : Optional.empty();","lastModifiedDate":"2022-10-27"},{"lineNumber":277,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"yuehernkang"},"content":"        public Optional\u003cPropertyTypeEnum\u003e getPropertyTypeEnum() {","lastModifiedDate":"2022-10-27"},{"lineNumber":280,"author":{"gitId":"yuehernkang"},"content":"            return Optional.ofNullable(propertyTypeEnum);","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"yuehernkang"},"content":"        public void setPropertyTypeEnum(PropertyTypeEnum propertyTypeEnum) {","lastModifiedDate":"2022-10-27"},{"lineNumber":284,"author":{"gitId":"yuehernkang"},"content":"            this.propertyTypeEnum \u003d propertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":286,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":287,"author":{"gitId":"yuehernkang"},"content":"        public Optional\u003cPropertyStatusEnum\u003e getPropertyStatusEnum() {","lastModifiedDate":"2022-10-28"},{"lineNumber":288,"author":{"gitId":"yuehernkang"},"content":"            return Optional.ofNullable(propertyStatusEnum);","lastModifiedDate":"2022-10-28"},{"lineNumber":289,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":290,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":291,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":292,"author":{"gitId":"yuehernkang"},"content":"        public void setPropertyStatusEnum(PropertyStatusEnum propertyStatusEnum) {","lastModifiedDate":"2022-10-28"},{"lineNumber":293,"author":{"gitId":"yuehernkang"},"content":"            this.propertyStatusEnum \u003d propertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":294,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":295,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":296,"author":{"gitId":"yuehernkang"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":297,"author":{"gitId":"yuehernkang"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":298,"author":{"gitId":"yuehernkang"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":299,"author":{"gitId":"yuehernkang"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-15"},{"lineNumber":300,"author":{"gitId":"yuehernkang"},"content":"                return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":301,"author":{"gitId":"yuehernkang"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":302,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":303,"author":{"gitId":"yuehernkang"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":304,"author":{"gitId":"yuehernkang"},"content":"            if (!(other instanceof EditPropertyDescriptor)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":305,"author":{"gitId":"yuehernkang"},"content":"                return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":306,"author":{"gitId":"yuehernkang"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":307,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":308,"author":{"gitId":"yuehernkang"},"content":"            // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":309,"author":{"gitId":"yuehernkang"},"content":"            EditPropertyDescriptor e \u003d (EditPropertyDescriptor) other;","lastModifiedDate":"2022-10-15"},{"lineNumber":310,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":311,"author":{"gitId":"yuehernkang"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-15"},{"lineNumber":312,"author":{"gitId":"yuehernkang"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-10-15"},{"lineNumber":313,"author":{"gitId":"yuehernkang"},"content":"                    \u0026\u0026 getPrice().equals(e.getPrice())","lastModifiedDate":"2022-10-27"},{"lineNumber":314,"author":{"gitId":"yuehernkang"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-10-27"},{"lineNumber":315,"author":{"gitId":"lkwlkww"},"content":"                    \u0026\u0026 getInterestedClients().equals(e.getInterestedClients())","lastModifiedDate":"2022-10-28"},{"lineNumber":316,"author":{"gitId":"yuehernkang"},"content":"                    \u0026\u0026 getPropertyTypeEnum().equals(e.getPropertyTypeEnum());","lastModifiedDate":"2022-10-27"},{"lineNumber":317,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":318,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":319,"author":{"gitId":"yuehernkang"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":320,"author":{"gitId":"yuehernkang"},"content":"        public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":321,"author":{"gitId":"yuehernkang"},"content":"            return \"EditPropertyDescriptor{\"","lastModifiedDate":"2022-10-16"},{"lineNumber":322,"author":{"gitId":"yuehernkang"},"content":"                    + \"name\u003d\" + name","lastModifiedDate":"2022-10-16"},{"lineNumber":323,"author":{"gitId":"yuehernkang"},"content":"                    + \", address\u003d\" + address","lastModifiedDate":"2022-10-16"},{"lineNumber":324,"author":{"gitId":"zacchaeuschok"},"content":"                    + \", price\u003d\" + price","lastModifiedDate":"2022-10-20"},{"lineNumber":325,"author":{"gitId":"yuehernkang"},"content":"                    + \", tags\u003d\" + tags","lastModifiedDate":"2022-10-16"},{"lineNumber":326,"author":{"gitId":"lkwlkww"},"content":"                    + \", interested clients\u003d\" + interestedClients","lastModifiedDate":"2022-10-20"},{"lineNumber":327,"author":{"gitId":"yuehernkang"},"content":"                    + \", propertyType\u003d\" + propertyTypeEnum","lastModifiedDate":"2022-10-27"},{"lineNumber":328,"author":{"gitId":"yuehernkang"},"content":"                    + \u0027}\u0027;","lastModifiedDate":"2022-10-16"},{"lineNumber":329,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":330,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":331,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":332,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":333,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":334,"author":{"gitId":"yuehernkang"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":335,"author":{"gitId":"yuehernkang"},"content":"        return \"EditPropertyCommand{\"","lastModifiedDate":"2022-10-16"},{"lineNumber":336,"author":{"gitId":"yuehernkang"},"content":"                + \"targetIndex\u003d\" + targetIndex","lastModifiedDate":"2022-10-16"},{"lineNumber":337,"author":{"gitId":"yuehernkang"},"content":"                + \", editPropertyDescriptor\u003d\" + editPropertyDescriptor","lastModifiedDate":"2022-10-16"},{"lineNumber":338,"author":{"gitId":"yuehernkang"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2022-10-16"},{"lineNumber":339,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":340,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-15"},{"lineNumber":341,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"yuehernkang":248,"lkwlkww":38,"zacchaeuschok":19,"misterpuffin":36}},{"path":"src/main/java/seedu/condonery/logic/commands/property/FilterPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":" * Finds and lists all properties in Condonery whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class FilterPropertyCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String COMMAND_WORD \u003d \"filter -p\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all properties whose tags contain any of \"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Example: \" + COMMAND_WORD + \" high-end\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    private final PropertyTagContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"    public FilterPropertyCommand(PropertyTagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"        model.updateFilteredPropertyList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"                String.format(Messages.MESSAGE_PROPERTIES_LISTED_OVERVIEW, model.getFilteredPropertyList().size()));","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"zacchaeuschok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof FilterPropertyCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 predicate.equals(((FilterPropertyCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"zacchaeuschok":44}},{"path":"src/main/java/seedu/condonery/logic/commands/property/FindPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":" * Finds and lists all properties in Condonery whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class FindPropertyCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String COMMAND_WORD \u003d \"find -p\";","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all properties whose names contain any of \"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Example: \" + COMMAND_WORD + \" Pinnacle@Duxton Bishan\";","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    private final PropertyNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"    public FindPropertyCommand(PropertyNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"        model.updateFilteredPropertyList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"                String.format(Messages.MESSAGE_PROPERTIES_LISTED_OVERVIEW, model.getFilteredPropertyList().size()));","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof FindPropertyCommand // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 predicate.equals(((FindPropertyCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lkwlkww":4,"zacchaeuschok":11,"misterpuffin":2,"-":27}},{"path":"src/main/java/seedu/condonery/logic/commands/property/ListPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import static seedu.condonery.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":" * Lists all properties in the address book to the user.","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"public class ListPropertyCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"    public static final String COMMAND_WORD \u003d \"list -p\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all properties\";","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"        model.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lkwlkww":4,"misterpuffin":6,"-":16}},{"path":"src/main/java/seedu/condonery/logic/commands/property/RangePropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyPriceWithinRangePredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":" * Finds and lists all properties in Condonery whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class RangePropertyCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String COMMAND_WORD \u003d \"range -p\";","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all properties within specified price range \"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Parameters: l/[LOWER] u/[UPPER]...\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Example: \" + COMMAND_WORD + \" l/10,000 u/200,000\";","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    private final PropertyPriceWithinRangePredicate predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"    public RangePropertyCommand(PropertyPriceWithinRangePredicate predicate) {","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"        model.updateFilteredPropertyList(predicate);","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"                String.format(Messages.MESSAGE_PROPERTIES_LISTED_OVERVIEW, model.getFilteredPropertyList().size()));","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"zacchaeuschok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof RangePropertyCommand // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 predicate.equals(((RangePropertyCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"zacchaeuschok":44}},{"path":"src/main/java/seedu/condonery/logic/commands/property/SelectPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":" * Selects a property to view its details.","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"public class SelectPropertyCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    public static final String COMMAND_WORD \u003d \"select -p\";","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"            + \": Selects a property.\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Property %1$s is selected and its details are currently shown below\";","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"     * Creates a SelectCommand to select the specified {@code Property}","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"    public SelectPropertyCommand(Index targetIndex) {","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"        List\u003cProperty\u003e lastShownList \u003d model.getFilteredPropertyList();","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        Property propertyToSelect \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"        model.updateFilteredPropertyList(property -\u003e property.equals(propertyToSelect));","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cClient\u003e interestedClients \u003d propertyToSelect.getInterestedClients();","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"        model.updateFilteredClientList(client -\u003e interestedClients.contains(client));","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, propertyToSelect.getName().toString()));","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"                || (other instanceof SelectPropertyCommand // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"                \u0026\u0026 targetIndex.equals(((SelectPropertyCommand) other).targetIndex));","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"lkwlkww":65}},{"path":"src/main/java/seedu/condonery/logic/commands/property/StatusPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.property.PropertyStatusContainsKeywordsPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":" * Finds and lists all properties in Condonery whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"public class StatusPropertyCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"    public static final String COMMAND_WORD \u003d \"status -p\";","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all properties whose names contain any of \"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"            + \"Parameters: TYPE [TYPES]...\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"            + \"Example: \" + COMMAND_WORD + \" HDB Condo\";","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"    private final PropertyStatusContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"    public StatusPropertyCommand(PropertyStatusContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"        model.updateFilteredPropertyList(predicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"                String.format(Messages.MESSAGE_PROPERTIES_LISTED_OVERVIEW, model.getFilteredPropertyList().size()));","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"                || (other instanceof StatusPropertyCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"                \u0026\u0026 predicate.equals(((StatusPropertyCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"yuehernkang":44}},{"path":"src/main/java/seedu/condonery/logic/commands/property/TypePropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyTypeContainsKeywordsPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":" * Finds and lists all properties in Condonery whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class TypePropertyCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String COMMAND_WORD \u003d \"type -p\";","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all properties whose names contain any of \"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Parameters: TYPE [TYPES]...\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"            + \"Example: \" + COMMAND_WORD + \" HDB Condo\";","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    private final PropertyTypeContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"    public TypePropertyCommand(PropertyTypeContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"        model.updateFilteredPropertyList(predicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"                String.format(Messages.MESSAGE_PROPERTIES_LISTED_OVERVIEW, model.getFilteredPropertyList().size()));","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"zacchaeuschok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof TypePropertyCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 predicate.equals(((TypePropertyCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"zacchaeuschok":44}},{"path":"src/main/java/seedu/condonery/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"misterpuffin":1,"-":59}},{"path":"src/main/java/seedu/condonery/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"misterpuffin":1,"-":147}},{"path":"src/main/java/seedu/condonery/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"    public static final Prefix PREFIX_LOWER \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"    public static final Prefix PREFIX_UPPER \u003d new Prefix(\"u/\");","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"    public static final Prefix PREFIX_PROPERTY_TYPE \u003d new Prefix(\"h/\");","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"    public static final Prefix PREFIX_PROPERTY_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"    public static final Prefix PREFIX_IMAGE_UPLOAD \u003d new Prefix(\"-i\");","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"    public static final Prefix PREFIX_INTERESTEDCLIENTS \u003d new Prefix(\"ic/\");","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    public static final Prefix PREFIX_INTERESTEDPROPERTIES \u003d new Prefix(\"ip/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yuehernkang":2,"lkwlkww":2,"zacchaeuschok":3,"misterpuffin":2,"-":11}},{"path":"src/main/java/seedu/condonery/logic/parser/CondoneryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.client.AddClientCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.client.ClearClientCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.client.EditClientCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.client.FilterClientCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.client.FindClientCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.client.ListClientCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.client.SelectClientCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.property.AddPropertyCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.ClearPropertyCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.DeletePropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.FilterPropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.FindPropertyCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.property.ListPropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.RangePropertyCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.property.SelectPropertyCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.StatusPropertyCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.client.AddClientCommandParser;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.client.DeleteClientCommandParser;","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.client.EditClientCommandParser;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.client.FilterClientCommandParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.client.FindClientCommandParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.client.SelectClientCommandParser;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.property.AddPropertyCommandParser;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.property.DeletePropertyCommandParser;","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.property.EditPropertyCommandParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.property.FilterPropertyCommandParser;","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.property.FindPropertyCommandParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.property.RangePropertyCommandParser;","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.property.SelectPropertyCommandParser;","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.property.StatusPropertyCommandParser;","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"public class CondoneryParser {","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"            .compile(\"(?\u003ccommandWord\u003e\\\\S+(\\\\s-[pc]{1})*)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"        //CHECKSTYLE.ON: Regexp","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"        case AddPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"            return new AddPropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        case AddClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"            return new AddClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"yuehernkang"},"content":"        case EditPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"yuehernkang"},"content":"            return new EditPropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"        case EditClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"            return new EditClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"yuehernkang"},"content":"        case DeletePropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"yuehernkang"},"content":"            return new DeletePropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"        case DeleteClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"            return new DeleteClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"lkwlkww"},"content":"        case SelectPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"lkwlkww"},"content":"            return new SelectPropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"        case SelectClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"            return new SelectClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"zacchaeuschok"},"content":"        case ClearPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"zacchaeuschok"},"content":"            return new ClearPropertyCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"zacchaeuschok"},"content":"        case ClearClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"zacchaeuschok"},"content":"            return new ClearClientCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"yuehernkang"},"content":"        case StatusPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"yuehernkang"},"content":"            return new StatusPropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"zacchaeuschok"},"content":"        case FindPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"zacchaeuschok"},"content":"            return new FindPropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"zacchaeuschok"},"content":"        case FindClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"zacchaeuschok"},"content":"            return new FindClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"zacchaeuschok"},"content":"        case FilterPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"zacchaeuschok"},"content":"            return new FilterPropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"zacchaeuschok"},"content":"        case FilterClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"zacchaeuschok"},"content":"            return new FilterClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"zacchaeuschok"},"content":"        case RangePropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"zacchaeuschok"},"content":"            return new RangePropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"misterpuffin"},"content":"        case ListPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"misterpuffin"},"content":"            return new ListPropertyCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"misterpuffin"},"content":"        case ListClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"misterpuffin"},"content":"            return new ListClientCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":136,"author":{"gitId":"misterpuffin"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"misterpuffin"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lkwlkww":18,"yuehernkang":15,"zacchaeuschok":32,"misterpuffin":31,"-":47}},{"path":"src/main/java/seedu/condonery/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"misterpuffin":5,"-":24}},{"path":"src/main/java/seedu/condonery/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"misterpuffin":3,"-":13}},{"path":"src/main/java/seedu/condonery/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import java.util.Locale;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.StringUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.Price;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"zacchaeuschok"},"content":"     * Parses a {@code String price} into an {@code Price}.","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"zacchaeuschok"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"zacchaeuschok"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"zacchaeuschok"},"content":"     * @throws ParseException if the given {@code price} is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"zacchaeuschok"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"zacchaeuschok"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"zacchaeuschok"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"zacchaeuschok"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"zacchaeuschok"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":113,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"zacchaeuschok"},"content":"     * Parses {@code String val} into a {@code int}.","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"zacchaeuschok"},"content":"    public static Integer parseNumber(String val) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(val);","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"zacchaeuschok"},"content":"        return Integer.parseInt(val.replaceAll(\",\", \"\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"lkwlkww"},"content":"     * Parses a {@code String clientName} into a {@code Client}.","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"lkwlkww"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"lkwlkww"},"content":"     * @throws ParseException if the given {@code clientName} does not match to a unique","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"     *     existing client\u0027s name.","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"lkwlkww"},"content":"    public static Client parseClientName(String clientName) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(clientName);","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"lkwlkww"},"content":"        String trimmedClientName \u003d clientName.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"lkwlkww"},"content":"        return new Client(","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"lkwlkww"},"content":"                new Name(clientName),","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"lkwlkww"},"content":"                new Address(\"placeholder\"),","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"lkwlkww"},"content":"                new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"lkwlkww"},"content":"                new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"lkwlkww"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"lkwlkww"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cClient\u003e}.","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"lkwlkww"},"content":"    public static Set\u003cClient\u003e parseClients(Collection\u003cString\u003e clients) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(clients);","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"lkwlkww"},"content":"        final Set\u003cClient\u003e clientSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"lkwlkww"},"content":"        for (String clientName : clients) {","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"lkwlkww"},"content":"            clientSet.add(parseClientName(clientName));","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"lkwlkww"},"content":"        return clientSet;","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"lkwlkww"},"content":"     * Parses a {@code String propertyName} into a {@code Property}.","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"lkwlkww"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"lkwlkww"},"content":"     * @throws ParseException if the given {@code propretyName} does not match to a unique","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"lkwlkww"},"content":"     *     existing property\u0027s name.","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"lkwlkww"},"content":"    public static Property parsePropertyName(String propertyName) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(propertyName);","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"lkwlkww"},"content":"        String trimmedPropertyName \u003d propertyName.trim();","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"lkwlkww"},"content":"        return new Property(","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"lkwlkww"},"content":"                new Name(propertyName),","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"lkwlkww"},"content":"                new Address(\"placeholder\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"lkwlkww"},"content":"                new Price(\"1000000\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"yuehernkang"},"content":"                new HashSet\u003cTag\u003e(),","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"yuehernkang"},"content":"                new HashSet\u003cClient\u003e(),","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"yuehernkang"},"content":"                PropertyTypeEnum.valueOf(\"CONDO\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"yuehernkang"},"content":"                PropertyStatusEnum.valueOf(\"AVAILABLE\")","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"yuehernkang"},"content":"        );","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"lkwlkww"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cProperty\u003e}.","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"lkwlkww"},"content":"    public static Set\u003cProperty\u003e parseProperties(Collection\u003cString\u003e properties) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(properties);","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"lkwlkww"},"content":"        final Set\u003cProperty\u003e propertySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"lkwlkww"},"content":"        for (String propertyName : properties) {","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"lkwlkww"},"content":"            propertySet.add(parsePropertyName(propertyName));","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"lkwlkww"},"content":"        return propertySet;","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"yuehernkang"},"content":"     * Parses a string into {@code PropertyTypeEnum} enum","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"yuehernkang"},"content":"     * @param propertyType string to PropertyTypeEnum","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"yuehernkang"},"content":"     * @return a {@code PropertyStatusEnum} enum","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"yuehernkang"},"content":"     * @throws ParseException if the string does not match any valid enum","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"yuehernkang"},"content":"    public static PropertyTypeEnum parsePropertyType(String propertyType) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(propertyType);","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"misterpuffin"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"misterpuffin"},"content":"            return PropertyTypeEnum.valueOf(propertyType.toUpperCase(Locale.ROOT));","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"misterpuffin"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"misterpuffin"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"misterpuffin"},"content":"                \"Invalid Property Type specified! Property Type must be one of HDB, CONDO, or LANDED\");","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"yuehernkang"},"content":"     * Parses a string into {@code PropertyStatusEnum} enum","lastModifiedDate":"2022-10-28"},{"lineNumber":203,"author":{"gitId":"yuehernkang"},"content":"     * @param propertyStatus string to PropertyStatusEnum","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"yuehernkang"},"content":"     * @return a {@code PropertyStatusEnum} enum","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"yuehernkang"},"content":"     * @throws ParseException if the string does not match any valid enum","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"yuehernkang"},"content":"    public static PropertyStatusEnum parsePropertyStatus(String propertyStatus) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"yuehernkang"},"content":"        requireNonNull(propertyStatus);","lastModifiedDate":"2022-10-28"},{"lineNumber":209,"author":{"gitId":"yuehernkang"},"content":"        return PropertyStatusEnum.valueOf(propertyStatus);","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lkwlkww":60,"yuehernkang":29,"zacchaeuschok":24,"misterpuffin":14,"-":85}},{"path":"src/main/java/seedu/condonery/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"misterpuffin":1,"-":38}},{"path":"src/main/java/seedu/condonery/logic/parser/client/AddClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser.client;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_IMAGE_UPLOAD;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_INTERESTEDPROPERTIES;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.client.AddClientCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.Prefix;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":" * Parses input arguments and creates a new AddClientCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"public class AddClientCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"     * and returns a Command object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"                    args,","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"                    PREFIX_NAME,","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"                    PREFIX_ADDRESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"                    PREFIX_TAG,","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"                    PREFIX_IMAGE_UPLOAD,","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"                    PREFIX_INTERESTEDPROPERTIES);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS)","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cProperty\u003e interestedPropertyList \u003d ParserUtil","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"                .parseProperties(argMultimap.getAllValues(PREFIX_INTERESTEDPROPERTIES));","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"        Client client \u003d new Client(name, address, tagList, interestedPropertyList);","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"        if (argMultimap.getValue(PREFIX_IMAGE_UPLOAD).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"            return new AddClientCommand(client, true);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"        return new AddClientCommand(client);","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"lkwlkww":6,"misterpuffin":69}},{"path":"src/main/java/seedu/condonery/logic/parser/client/DeleteClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.logic.parser.client;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":" * Parses input arguments and creates a new DeleteClientCommand object","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"public class DeleteClientCommandParser implements Parser\u003cDeleteClientCommand\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteClientCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"     * and returns a Command object for execution.","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    public DeleteClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"            return new DeleteClientCommand(index);","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yuehernkang":31}},{"path":"src/main/java/seedu/condonery/logic/parser/client/EditClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.logic.parser.client;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_IMAGE_UPLOAD;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_INTERESTEDPROPERTIES;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.client.EditClientCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":" * Parses input arguments and creates a new EditClientCommand object","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"public class EditClientCommandParser implements Parser\u003cEditClientCommand\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"     * Parses the given {@code String} of arguments in the context of the EditClientCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"     * and returns a Command object for execution.","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"    public EditClientCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"                        PREFIX_TAG, PREFIX_INTERESTEDPROPERTIES, PREFIX_IMAGE_UPLOAD);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"        EditClientCommand.EditClientDescriptor editClientDescriptor \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"                new EditClientCommand.EditClientDescriptor();","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"        Index index;","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"                    EditClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"        if (!argMultimap.getValue(PREFIX_NAME).isPresent() \u0026\u0026 !argMultimap.getValue(PREFIX_ADDRESS).isPresent()","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_IMAGE_UPLOAD).isPresent()","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"                \u0026\u0026 argMultimap.getAllValues(PREFIX_TAG).size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"            throw new ParseException(EditClientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"            editClientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editClientDescriptor::setTags);","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"        if (argMultimap.getValue(PREFIX_INTERESTEDPROPERTIES).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"            editClientDescriptor.setInterestedProperties(","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"                ParserUtil.parseProperties(argMultimap.getAllValues(PREFIX_INTERESTEDPROPERTIES)));","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"        if (argMultimap.getValue(PREFIX_IMAGE_UPLOAD).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"            return new EditClientCommand(index, editClientDescriptor, true);","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"        return new EditClientCommand(index, editClientDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"yuehernkang"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"yuehernkang"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"yuehernkang"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"yuehernkang"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"yuehernkang"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yuehernkang":68,"lkwlkww":7,"misterpuffin":12}},{"path":"src/main/java/seedu/condonery/logic/parser/client/FilterClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.client;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.client.FilterClientCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.client.ClientTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class FilterClientCommandParser implements Parser\u003cFilterClientCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    public FilterClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"        return new FilterClientCommand(new ClientTagContainsKeywordsPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"zacchaeuschok":34}},{"path":"src/main/java/seedu/condonery/logic/parser/client/FindClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.client;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.client.FindClientCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.client.ClientNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class FindClientCommandParser implements Parser\u003cFindClientCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    public FindClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"        return new FindClientCommand(new ClientNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"zacchaeuschok":8,"misterpuffin":2,"-":24}},{"path":"src/main/java/seedu/condonery/logic/parser/client/SelectClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.logic.parser.client;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.client.SelectClientCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":" * Parses input arguments and creates a new SelectClientCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"public class SelectClientCommandParser implements Parser\u003cSelectClientCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectClientCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"     * and returns a Command object for execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    public SelectClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"            return new SelectClientCommand(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"lkwlkww":31}},{"path":"src/main/java/seedu/condonery/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"misterpuffin":2,"-":15}},{"path":"src/main/java/seedu/condonery/logic/parser/property/AddPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_IMAGE_UPLOAD;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_INTERESTEDCLIENTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PROPERTY_STATUS;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PROPERTY_TYPE;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.property.AddPropertyCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.Prefix;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.Price;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":" * Parses input arguments and creates a new AddPropertyCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"public class AddPropertyCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"     * and returns a Command object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"zacchaeuschok"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PRICE, PREFIX_TAG,","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"                        PREFIX_IMAGE_UPLOAD, PREFIX_INTERESTEDCLIENTS, PREFIX_PROPERTY_TYPE, PREFIX_PROPERTY_STATUS);","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PRICE, PREFIX_PROPERTY_TYPE)","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"zacchaeuschok"},"content":"        Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cClient\u003e interestedClientList \u003d ParserUtil.parseClients(argMultimap.getAllValues(PREFIX_INTERESTEDCLIENTS));","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"        PropertyTypeEnum propertyTypeEnum \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"                ParserUtil.parsePropertyType(argMultimap.getValue(PREFIX_PROPERTY_TYPE).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"        PropertyStatusEnum propertyStatusEnum \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"                ParserUtil.parsePropertyStatus(argMultimap.getValue(PREFIX_PROPERTY_STATUS).get());","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"        Property property \u003d new Property(name, address, price, tagList, interestedClientList,","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"                propertyTypeEnum, propertyStatusEnum);","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"        if (argMultimap.getValue(PREFIX_IMAGE_UPLOAD).isPresent()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"            return new AddPropertyCommand(property, true);","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"        return new AddPropertyCommand(property);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"lkwlkww":26,"yuehernkang":11,"zacchaeuschok":7,"misterpuffin":11,"-":27}},{"path":"src/main/java/seedu/condonery/logic/parser/property/DeletePropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.DeletePropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":" * Parses input arguments and creates a new DeletePropertyCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"public class DeletePropertyCommandParser implements Parser\u003cDeletePropertyCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePropertyCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"     * and returns a Command object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    public DeletePropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"            return new DeletePropertyCommand(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePropertyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"yuehernkang":31}},{"path":"src/main/java/seedu/condonery/logic/parser/property/EditPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_STATUS;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_IMAGE_UPLOAD;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_INTERESTEDCLIENTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PROPERTY_STATUS;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PROPERTY_TYPE;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":" * Parses input arguments and creates a new EditPropertyCommand object","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"public class EditPropertyCommandParser implements Parser\u003cEditPropertyCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPropertyCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"     * and returns a Command object for execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"    public EditPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PRICE, PREFIX_TAG,","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"                        PREFIX_PROPERTY_TYPE, PREFIX_IMAGE_UPLOAD, PREFIX_INTERESTEDCLIENTS,","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"                        PREFIX_PROPERTY_STATUS, PREFIX_PROPERTY_STATUS);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyDescriptor editPropertyDescriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"                new EditPropertyDescriptor();","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"        Index index;","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"yuehernkang"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"                    EditPropertyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"        if (!argMultimap.getValue(PREFIX_NAME).isPresent()","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"            \u0026\u0026 !argMultimap.getValue(PREFIX_ADDRESS).isPresent()","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"zacchaeuschok"},"content":"            \u0026\u0026 !argMultimap.getValue(PREFIX_PRICE).isPresent()","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"            \u0026\u0026 !argMultimap.getValue(PREFIX_PROPERTY_TYPE).isPresent()","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"            \u0026\u0026 !argMultimap.getValue(PREFIX_PROPERTY_STATUS).isPresent()","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"            \u0026\u0026 !argMultimap.getValue(PREFIX_IMAGE_UPLOAD).isPresent()","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"            \u0026\u0026 argMultimap.getAllValues(PREFIX_TAG).size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"            throw new ParseException(EditPropertyCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"            editPropertyDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"yuehernkang"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"yuehernkang"},"content":"            editPropertyDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"zacchaeuschok"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"zacchaeuschok"},"content":"            editPropertyDescriptor.setPrice(ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"yuehernkang"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPropertyDescriptor::setTags);","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"        if (argMultimap.getValue(PREFIX_INTERESTEDCLIENTS).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"            editPropertyDescriptor.setInterestedClients(","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"                    ParserUtil.parseClients(argMultimap.getAllValues(PREFIX_INTERESTEDCLIENTS)));","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"yuehernkang"},"content":"        if (argMultimap.getValue(PREFIX_PROPERTY_TYPE).isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"yuehernkang"},"content":"            editPropertyDescriptor","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"yuehernkang"},"content":"                    .setPropertyTypeEnum(","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"yuehernkang"},"content":"                            ParserUtil.parsePropertyType(","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"yuehernkang"},"content":"                                    argMultimap.getValue(PREFIX_PROPERTY_TYPE).get()));","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"yuehernkang"},"content":"        if (argMultimap.getValue(PREFIX_PROPERTY_STATUS).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"yuehernkang"},"content":"            try {","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"yuehernkang"},"content":"                editPropertyDescriptor.setPropertyStatusEnum(","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"yuehernkang"},"content":"                        ParserUtil.parsePropertyStatus(","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"yuehernkang"},"content":"                                argMultimap.getValue(PREFIX_PROPERTY_STATUS).get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"yuehernkang"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"yuehernkang"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_STATUS,","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"yuehernkang"},"content":"                        EditPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"yuehernkang"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"        if (argMultimap.getValue(PREFIX_IMAGE_UPLOAD).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"            return new EditPropertyCommand(index, editPropertyDescriptor, true);","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"yuehernkang"},"content":"        return new EditPropertyCommand(index, editPropertyDescriptor);","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"yuehernkang"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"yuehernkang"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"yuehernkang"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"yuehernkang"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"yuehernkang"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"yuehernkang"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"yuehernkang":94,"lkwlkww":7,"zacchaeuschok":8,"misterpuffin":9}},{"path":"src/main/java/seedu/condonery/logic/parser/property/FilterPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.FilterPropertyCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyTagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class FilterPropertyCommandParser implements Parser\u003cFilterPropertyCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    public FilterPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"        return new FilterPropertyCommand(new PropertyTagContainsKeywordsPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"zacchaeuschok":34}},{"path":"src/main/java/seedu/condonery/logic/parser/property/FindPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.FindPropertyCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class FindPropertyCommandParser implements Parser\u003cFindPropertyCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    public FindPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"        return new FindPropertyCommand(new PropertyNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"zacchaeuschok":8,"misterpuffin":2,"-":24}},{"path":"src/main/java/seedu/condonery/logic/parser/property/RangePropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_LOWER;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_UPPER;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.RangePropertyCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyPriceWithinRangePredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":" * Parses input arguments and creates a new RangePropertyCommand object","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"public class RangePropertyCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"     * and returns a Command object for execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LOWER, PREFIX_UPPER);","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LOWER, PREFIX_UPPER)","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RangePropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"        Integer lower \u003d ParserUtil.parseNumber(argMultimap.getValue(PREFIX_LOWER).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"        Integer upper \u003d ParserUtil.parseNumber(argMultimap.getValue(PREFIX_UPPER).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"        return new RangePropertyCommand(new PropertyPriceWithinRangePredicate(lower, upper));","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"zacchaeuschok"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"zacchaeuschok"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"zacchaeuschok"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"zacchaeuschok"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"zacchaeuschok":52}},{"path":"src/main/java/seedu/condonery/logic/parser/property/SelectPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.commands.property.SelectPropertyCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":" * Parses input arguments and creates a new SelectPropertyCommand object","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"public class SelectPropertyCommandParser implements Parser\u003cSelectPropertyCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectPropertyCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"     * and returns a Command object for execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    public SelectPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"            return new SelectPropertyCommand(index);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectPropertyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"lkwlkww":31}},{"path":"src/main/java/seedu/condonery/logic/parser/property/StatusPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.StatusPropertyCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.property.PropertyStatusContainsKeywordsPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"public class StatusPropertyCommandParser implements Parser\u003cStatusPropertyCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"     * Parses the given {@code String} of arguments in the context of the TypeCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    public StatusPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"        return new StatusPropertyCommand(new PropertyStatusContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"yuehernkang":34}},{"path":"src/main/java/seedu/condonery/logic/parser/property/TypePropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.TypePropertyCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.Parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyTypeContainsKeywordsPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"public class TypePropertyCommandParser implements Parser\u003cTypePropertyCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"     * Parses the given {@code String} of arguments in the context of the TypeCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    public TypePropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, TypePropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"        return new TypePropertyCommand(new PropertyTypeContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"zacchaeuschok":34}},{"path":"src/main/java/seedu/condonery/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandQueue;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    Predicate\u003cProperty\u003e PREDICATE_SHOW_ALL_PROPERTIES \u003d unused -\u003e true;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    Path getPropertyDirectoryFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    void setPropertyDirectoryFilePath(Path propertyDirectoryFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"     * Replaces address book data with the data in {@code propertyDirectory}.","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"    void setPropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory);","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"     * Resets the property directory data to be the initial data on startup.","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    void resetPropertyDirectory();","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"    /** Returns the PropertyDirectory */","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"    ReadOnlyPropertyDirectory getPropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if a property with the same identity as {@code property} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"    boolean hasProperty(Property property);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"     * Deletes the given property.","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"     * The property must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"    void deleteProperty(Property target);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"     * Adds the given property.","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"     * {@code property} must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"    void addProperty(Property property);","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"     * Replaces the given property {@code target} with {@code editedProperty}.","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"     * The property identity of {@code editedProperty}","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"     * must not be the same as another existing property in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"    void setProperty(Property target, Property editedProperty);","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"    /** Returns an unmodifiable view of the filtered property list */","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"lkwlkww"},"content":"    ObservableList\u003cProperty\u003e getFilteredPropertyList();","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"lkwlkww"},"content":"     * Updates the filter of the filtered property list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"    void updateFilteredPropertyList(Predicate\u003cProperty\u003e predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"     * Returns the user prefs\u0027 client directory file path.","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"    Path getClientDirectoryFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"     * Sets the user prefs\u0027 client directory file path.","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"    void setClientDirectoryFilePath(Path propertyDirectoryFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"     * Replaces client directory data with the data in {@code clientDirectory}.","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"    void setClientDirectory(ReadOnlyClientDirectory clientDirectory);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"     * Resets the client directory data to be the initial data on startup.","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":"    void resetClientDirectory();","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"    /** Returns the ClientDirectory */","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"misterpuffin"},"content":"    ReadOnlyClientDirectory getClientDirectory();","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"misterpuffin"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the client directory.","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"misterpuffin"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if a client whos name contains the given String exists in the client directory.","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"lkwlkww"},"content":"    boolean hasClientName(String substring);","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if only one unique client whos name contains the given String exists in the client directory.","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"lkwlkww"},"content":"    boolean hasUniqueClientName(String substring);","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"lkwlkww"},"content":"     * Returns a unique client whos name contains the given string.","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"lkwlkww"},"content":"    Client getUniqueClientByName(String substring);","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if a property whos name contains the given String exists in the property directory.","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"lkwlkww"},"content":"    boolean hasPropertyName(String substring);","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if only one unique property whos name contains the given String exists in the property directory.","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"lkwlkww"},"content":"    boolean hasUniquePropertyName(String substring);","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"lkwlkww"},"content":"     * Returns a unique property whos name contains the given string.","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"lkwlkww"},"content":"    Property getUniquePropertyByName(String substring);","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"misterpuffin"},"content":"     * Deletes the given client.","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"misterpuffin"},"content":"     * The client must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"misterpuffin"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"misterpuffin"},"content":"     * Adds the given client.","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"misterpuffin"},"content":"     * {@code client} must not already exist in the client directory.","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"misterpuffin"},"content":"    void addClient(Client client);","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"misterpuffin"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"misterpuffin"},"content":"     * {@code target} must exist in the client directory.","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"misterpuffin"},"content":"     * The client identity of {@code editedClient}","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"misterpuffin"},"content":"     * must not be the same as another existing client in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"misterpuffin"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"misterpuffin"},"content":"    /** Returns an unmodifiable view of the filtered client list */","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"misterpuffin"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"misterpuffin"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"misterpuffin"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"misterpuffin"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"misterpuffin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CommandQueue \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"misterpuffin"},"content":"    void addCommand(Command cmd);","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"misterpuffin"},"content":"    CommandQueue getCommandQueue();","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lkwlkww":48,"misterpuffin":81,"-":62}},{"path":"src/main/java/seedu/condonery/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandQueue;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":" * Represents the in-memory model of the Condonery data.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    private final PropertyDirectory propertyDirectory;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"    private final FilteredList\u003cProperty\u003e filteredProperties;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    private final ClientDirectory clientDirectory;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    private final ReadOnlyPropertyDirectory initialPropertyDirectory;","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    private final ReadOnlyClientDirectory initialClientDirectory;","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    private final CommandQueue commandQueue \u003d new CommandQueue();","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"     * Initializes a ModelManager with the given propertyDirectory and userPrefs.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"    public ModelManager(ReadOnlyPropertyDirectory propertyDirectory, ReadOnlyClientDirectory clientDirectory,","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"        requireAllNonNull(propertyDirectory, clientDirectory, userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"        logger.fine(\"Initializing with address book: \" + propertyDirectory + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"        this.propertyDirectory \u003d new PropertyDirectory(propertyDirectory, userPrefs.getUserImageDirectoryPath());","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"        this.initialPropertyDirectory \u003d propertyDirectory;","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        filteredProperties \u003d new FilteredList\u003c\u003e(this.propertyDirectory.getPropertyList());","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"        this.clientDirectory \u003d new ClientDirectory(clientDirectory, userPrefs.getUserImageDirectoryPath());","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"        this.initialClientDirectory \u003d clientDirectory;","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.clientDirectory.getClientList());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"        this(new PropertyDirectory(), new ClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"    public Path getPropertyDirectoryFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"        return userPrefs.getPropertyDirectoryFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"    public void setPropertyDirectoryFilePath(Path propertyDirectoryFilePath) {","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(propertyDirectoryFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"        userPrefs.setPropertyDirectoryFilePath(propertyDirectoryFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"    public Path getClientDirectoryFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"        return userPrefs.getClientDirectoryFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"    public void setClientDirectoryFilePath(Path clientDirectoryFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(clientDirectoryFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"        userPrefs.setClientDirectoryFilePath(clientDirectoryFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PropertyDirectory \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"    public void setPropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory) {","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"        this.propertyDirectory.resetData(propertyDirectory);","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"    public void resetPropertyDirectory() {","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":"        this.propertyDirectory.resetData(initialPropertyDirectory);","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"    public ReadOnlyPropertyDirectory getPropertyDirectory() {","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"misterpuffin"},"content":"        return propertyDirectory;","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"lkwlkww"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ClientDirectory \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"misterpuffin"},"content":"    public void setClientDirectory(ReadOnlyClientDirectory clientDirectory) {","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"misterpuffin"},"content":"        this.clientDirectory.resetData(clientDirectory);","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"misterpuffin"},"content":"    public void resetClientDirectory() {","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"misterpuffin"},"content":"        this.clientDirectory.resetData(initialClientDirectory);","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"misterpuffin"},"content":"    public ReadOnlyClientDirectory getClientDirectory() {","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"misterpuffin"},"content":"        return clientDirectory;","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"misterpuffin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Property \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasProperty(Property property) {","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(property);","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"lkwlkww"},"content":"        return propertyDirectory.hasProperty(property);","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"lkwlkww"},"content":"    public void deleteProperty(Property target) {","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"lkwlkww"},"content":"        propertyDirectory.removeProperty(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":157,"author":{"gitId":"lkwlkww"},"content":"    public void addProperty(Property property) {","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"lkwlkww"},"content":"        propertyDirectory.addProperty(property);","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"lkwlkww"},"content":"        updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"lkwlkww"},"content":"    public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"lkwlkww"},"content":"        requireAllNonNull(target, editedProperty);","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":166,"author":{"gitId":"lkwlkww"},"content":"        propertyDirectory.setProperty(target, editedProperty);","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":169,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasPropertyName(String substring) {","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"lkwlkww"},"content":"        return propertyDirectory.hasPropertyName(substring);","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasUniquePropertyName(String substring) {","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"lkwlkww"},"content":"        return propertyDirectory.hasUniquePropertyName(substring);","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"lkwlkww"},"content":"    public Property getUniquePropertyByName(String substring) {","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"lkwlkww"},"content":"        return propertyDirectory.getUniquePropertyByName(substring);","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"lkwlkww"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Property List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":187,"author":{"gitId":"lkwlkww"},"content":"     * Returns an unmodifiable view of the list of {@code Property} backed by the internal list of","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"misterpuffin"},"content":"     * {@code versionedPropertyDirectory}","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":191,"author":{"gitId":"lkwlkww"},"content":"    public ObservableList\u003cProperty\u003e getFilteredPropertyList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"lkwlkww"},"content":"        return filteredProperties;","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":196,"author":{"gitId":"lkwlkww"},"content":"    public void updateFilteredPropertyList(Predicate\u003cProperty\u003e predicate) {","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":198,"author":{"gitId":"lkwlkww"},"content":"        filteredProperties.setPredicate(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":201,"author":{"gitId":"misterpuffin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Client \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"misterpuffin"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"misterpuffin"},"content":"        return clientDirectory.hasClient(client);","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"misterpuffin"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"misterpuffin"},"content":"        clientDirectory.removeClient(target);","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"misterpuffin"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"misterpuffin"},"content":"        clientDirectory.addClient(client);","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"misterpuffin"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":220,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":221,"author":{"gitId":"misterpuffin"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"misterpuffin"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"misterpuffin"},"content":"        clientDirectory.setClient(target, editedClient);","lastModifiedDate":"2022-10-10"},{"lineNumber":224,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":225,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":226,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":227,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasClientName(String substring) {","lastModifiedDate":"2022-10-20"},{"lineNumber":228,"author":{"gitId":"lkwlkww"},"content":"        return clientDirectory.hasClientName(substring);","lastModifiedDate":"2022-10-20"},{"lineNumber":229,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":230,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":231,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":232,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasUniqueClientName(String substring) {","lastModifiedDate":"2022-10-20"},{"lineNumber":233,"author":{"gitId":"lkwlkww"},"content":"        return clientDirectory.hasUniqueClientName(substring);","lastModifiedDate":"2022-10-20"},{"lineNumber":234,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":235,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":236,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":237,"author":{"gitId":"lkwlkww"},"content":"    public Client getUniqueClientByName(String substring) {","lastModifiedDate":"2022-10-20"},{"lineNumber":238,"author":{"gitId":"lkwlkww"},"content":"        return clientDirectory.getUniqueClientByName(substring);","lastModifiedDate":"2022-10-20"},{"lineNumber":239,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":240,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"misterpuffin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":243,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":244,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":245,"author":{"gitId":"misterpuffin"},"content":"     * Returns an unmodifiable view of the list of {@code Client} backed by the internal list of","lastModifiedDate":"2022-10-10"},{"lineNumber":246,"author":{"gitId":"misterpuffin"},"content":"     * {@code versionedClientDirectory}","lastModifiedDate":"2022-10-10"},{"lineNumber":247,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":248,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":249,"author":{"gitId":"misterpuffin"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":250,"author":{"gitId":"misterpuffin"},"content":"        return filteredClients;","lastModifiedDate":"2022-10-10"},{"lineNumber":251,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":252,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":253,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":254,"author":{"gitId":"misterpuffin"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":255,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"misterpuffin"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":257,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":258,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"misterpuffin"},"content":"        return propertyDirectory.equals(other.propertyDirectory)","lastModifiedDate":"2022-10-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":275,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 filteredProperties.equals(other.filteredProperties)","lastModifiedDate":"2022-10-10"},{"lineNumber":276,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 clientDirectory.equals(other.clientDirectory)","lastModifiedDate":"2022-10-10"},{"lineNumber":277,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients);","lastModifiedDate":"2022-10-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":281,"author":{"gitId":"misterpuffin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CommandQueue \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":282,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":283,"author":{"gitId":"misterpuffin"},"content":"    public void addCommand(Command cmd) {","lastModifiedDate":"2022-10-26"},{"lineNumber":284,"author":{"gitId":"misterpuffin"},"content":"        this.commandQueue.addCommand(cmd);","lastModifiedDate":"2022-10-26"},{"lineNumber":285,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":286,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":287,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":288,"author":{"gitId":"misterpuffin"},"content":"    public CommandQueue getCommandQueue() {","lastModifiedDate":"2022-10-26"},{"lineNumber":289,"author":{"gitId":"misterpuffin"},"content":"        return this.commandQueue;","lastModifiedDate":"2022-10-26"},{"lineNumber":290,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lkwlkww":58,"misterpuffin":129,"-":104}},{"path":"src/main/java/seedu/condonery/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"    Path getPropertyDirectoryFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"    Path getClientDirectoryFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    Path getUserImageDirectoryPath();","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"misterpuffin":6,"-":13}},{"path":"src/main/java/seedu/condonery/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"    private Path propertyDirectoryFilePath \u003d Paths.get(\"data\" , \"propertyDirectory.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    private Path clientDirectoryFilePath \u003d Paths.get(\"data\" , \"clientDirectory.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"    private Path userImageDirectoryPath \u003d Paths.get(\"data\", \"images\");","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"        setPropertyDirectoryFilePath(newUserPrefs.getPropertyDirectoryFilePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"        setClientDirectoryFilePath(newUserPrefs.getClientDirectoryFilePath());","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"        setUserImageDirectoryPath(newUserPrefs.getUserImageDirectoryPath());","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"    public Path getPropertyDirectoryFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        return propertyDirectoryFilePath;","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"    public Path getClientDirectoryFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"        return clientDirectoryFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"    public Path getUserImageDirectoryPath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"        return userImageDirectoryPath;","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"    public void setPropertyDirectoryFilePath(Path propertyDirectoryFilePath) {","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(propertyDirectoryFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"        this.propertyDirectoryFilePath \u003d propertyDirectoryFilePath;","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"    public void setClientDirectoryFilePath(Path clientDirectoryFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(clientDirectoryFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"        this.clientDirectoryFilePath \u003d clientDirectoryFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"    public void setUserImageDirectoryPath(Path userImageDirectoryPath) {","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(userImageDirectoryPath);","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"        this.userImageDirectoryPath \u003d userImageDirectoryPath;","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 propertyDirectoryFilePath.equals(o.propertyDirectoryFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"        return Objects.hash(guiSettings, propertyDirectoryFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"        sb.append(\"\\nLocal data file location : \" + propertyDirectoryFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":37,"-":75}},{"path":"src/main/java/seedu/condonery/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.client;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":" * Represents a Client in Condonery.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"public class Client {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"    // Identity fields","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    private final Name name;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    // Data fields","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    private final Address address;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    private final Set\u003cProperty\u003e interestedProperties \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    private Path imageDirectoryPath;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"    public Client(Name name, Address address, Set\u003cTag\u003e tags, Set\u003cProperty\u003e interestedProperties) {","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        requireAllNonNull(name, address, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"        return name;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"        return address;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"     * Returns an immutable property set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"    public Set\u003cProperty\u003e getInterestedProperties() {","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"        return Collections.unmodifiableSet(interestedProperties);","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"zacchaeuschok"},"content":"     * Returns an immutable set containing tag names, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"zacchaeuschok"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"zacchaeuschok"},"content":"    public Set\u003cString\u003e getTagNames() {","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"zacchaeuschok"},"content":"        HashSet\u003cString\u003e stringTags \u003d new HashSet\u003c\u003e(tags.size());","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"zacchaeuschok"},"content":"        tags.forEach(tag -\u003e stringTags.add(tag.tagName));","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"zacchaeuschok"},"content":"        return Collections.unmodifiableSet(stringTags);","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"    public Path getImageDirectoryPath() {","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"        return this.imageDirectoryPath;","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"    public Path getImagePath() {","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"        requireAllNonNull(imageDirectoryPath);","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"        return imageDirectoryPath.resolve(\"client-\" + getCamelCaseName());","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"     * Returns an immutable set containing interested property names, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"    public Set\u003cString\u003e getInterestedPropertyNames() {","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"        HashSet\u003cString\u003e stringProperties \u003d new HashSet\u003c\u003e(interestedProperties.size());","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"        interestedProperties.forEach(property -\u003e stringProperties.add(property.getName().toString()));","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"lkwlkww"},"content":"        return Collections.unmodifiableSet(stringProperties);","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"     * Returns true if both properties have the same name.","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":"     * This defines a weaker notion of equality between two properties.","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 otherClient.getName().equals(getName());","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"     * Returns the name of the client in lowerCamelCase.","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"     * This function is used when getting the file name for image storage.","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"     * @return client name in lowerCamelCase.","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"    public String getCamelCaseName() {","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"        String[] words \u003d name.toString().split(\"[\\\\W_]+\");","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"            String word \u003d words[i];","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"misterpuffin"},"content":"                word \u003d word.isEmpty() ? word : word.toLowerCase();","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"            } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"misterpuffin"},"content":"                word \u003d word.isEmpty() ? word : Character.toUpperCase(word.charAt(0)) + word.substring(1).toLowerCase();","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"misterpuffin"},"content":"            builder.append(word);","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"misterpuffin"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"misterpuffin"},"content":"     * Changes the imageDirectoryPath of the Client.","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"misterpuffin"},"content":"     * @param imageDirectoryPath Path to be saved.","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"misterpuffin"},"content":"    public void setImageDirectoryPath(Path imageDirectoryPath) {","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"misterpuffin"},"content":"        this.imageDirectoryPath \u003d imageDirectoryPath;","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"misterpuffin"},"content":"     * Returns true if both properties have the same identity and data fields.","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"misterpuffin"},"content":"     * This defines a stronger notion of equality between two properties.","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"misterpuffin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"misterpuffin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"misterpuffin"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"misterpuffin"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"misterpuffin"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"misterpuffin"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"misterpuffin"},"content":"        return otherClient.getName().equals(getName())","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"misterpuffin"},"content":"            \u0026\u0026 otherClient.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"lkwlkww"},"content":"            \u0026\u0026 otherClient.getTags().equals(getTags())","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"lkwlkww"},"content":"            \u0026\u0026 otherClient.getInterestedProperties().equals(getInterestedProperties());","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"misterpuffin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"misterpuffin"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"lkwlkww"},"content":"        return Objects.hash(name, address, tags, interestedProperties);","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"misterpuffin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"misterpuffin"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"misterpuffin"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"misterpuffin"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"misterpuffin"},"content":"            .append(getAddress());","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"misterpuffin"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"misterpuffin"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"misterpuffin"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"misterpuffin"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cProperty\u003e interestedProperties \u003d getInterestedProperties();","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"lkwlkww"},"content":"        if (!interestedProperties.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"lkwlkww"},"content":"            builder.append(\"; Interested Properties: \");","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"lkwlkww"},"content":"            interestedProperties.forEach(builder::append);","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"misterpuffin"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":31,"zacchaeuschok":12,"misterpuffin":142}},{"path":"src/main/java/seedu/condonery/model/client/ClientDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.client;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.exceptions.UniqueClientNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":" * Wraps all data at the Condonery level","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":" * Duplicates are not allowed (by .isSameClient comparison)","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"public class ClientDirectory implements ReadOnlyClientDirectory {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    public ClientDirectory() {}","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"     * Creates an ClientDirectory using the Clients in the {@code toBeCopied}","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public ClientDirectory(ReadOnlyClientDirectory toBeCopied, Path imageDirectoryPath) {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        this();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"        for (Client client : this.clients) {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"            client.setImageDirectoryPath(imageDirectoryPath);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"     * Resets the existing data of this {@code ClientDirectory} with {@code newData}.","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"    public void resetData(ReadOnlyClientDirectory newData) {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"    //// client-level operations","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"        return clients.contains(client);","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"     * Adds a client to the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"     * The client must not already exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"    public void addClient(Client p) {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"        clients.add(p);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"     * The client identity of {@code editedClient} must not be the same","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"     * as another existing client in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"     * Removes {@code key} from this {@code ClientDirectory}.","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":"    public void removeClient(Client key) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"        clients.remove(key);","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"    //// util methods","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if a client whos name contains the given String exists in the client directory.","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasClientName(String substring) {","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"        return clients.hasClientName(substring);","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if only one unique client whos name contains the given String exists in the client directory.","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasUniqueClientName(String substring) {","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"lkwlkww"},"content":"        return clients.hasUniqueClientName(substring);","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"     * Returns a unique client whos name contains the given string.","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"lkwlkww"},"content":"     * @throws UniqueClientNotFoundException if the substring does not match to a unique","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"lkwlkww"},"content":"     *                                 client.","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"lkwlkww"},"content":"    public Client getUniqueClientByName(String substring) throws UniqueClientNotFoundException {","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"lkwlkww"},"content":"        return clients.getUniqueClientByName(substring);","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"misterpuffin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"misterpuffin"},"content":"        return clients.asUnmodifiableObservableList().size() + \" clients\";","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"misterpuffin"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"misterpuffin"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"misterpuffin"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"misterpuffin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"misterpuffin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"misterpuffin"},"content":"                || (other instanceof ClientDirectory // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 clients.equals(((ClientDirectory) other).clients));","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"misterpuffin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"misterpuffin"},"content":"        return clients.hashCode();","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":32,"misterpuffin":117}},{"path":"src/main/java/seedu/condonery/model/client/ClientNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.model.client;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.util.StringUtil;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":" * Tests that a {@code Client}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"public class ClientNameContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"    public ClientNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getName().fullName, keyword));","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"                || (other instanceof ClientNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"                \u0026\u0026 keywords.equals(((ClientNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yuehernkang":31}},{"path":"src/main/java/seedu/condonery/model/client/ClientTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.model.client;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.commons.util.StringUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":" * Tests that a {@code Property}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"public class ClientTagContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"    public ClientTagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getTagNames(), keyword));","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof ClientTagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 keywords.equals(((ClientTagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"zacchaeuschok":31}},{"path":"src/main/java/seedu/condonery/model/client/ReadOnlyClientDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.client;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"public interface ReadOnlyClientDirectory {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"     * Returns an unmodifiable view of the properties list.","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"     * This list will not contain any duplicate properties.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":1,"misterpuffin":15}},{"path":"src/main/java/seedu/condonery/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.client;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.exceptions.UniqueClientNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":" * As such, adding and updating of clients uses Client#isSameClient(Client) for equality","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":" * so as to ensure that the client being added or updated is unique in terms of identity in the","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":" * UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"     * Adds a client to the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"     * The client must exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if a client whos name contains the given String exists in the client directory.","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasClientName(String substring) {","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"        for (Client client : internalList) {","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"            if (client.getName().toString().contains(substring)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"                return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"lkwlkww"},"content":"        return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if only one unique client whos name contains the given String exists in the client directory.","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasUniqueClientName(String substring) {","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"        int containCount \u003d 0;","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"lkwlkww"},"content":"        for (Client client : internalList) {","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"lkwlkww"},"content":"            if (client.getName().toString().contains(substring)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"lkwlkww"},"content":"                containCount +\u003d 1;","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"lkwlkww"},"content":"        if (containCount \u003d\u003d 1) {","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"lkwlkww"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"lkwlkww"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"lkwlkww"},"content":"     * Returns a unique client whos name contains the given string.","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"lkwlkww"},"content":"     * @throws UniqueClientNotFoundException if the substring does not match to a unique","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"lkwlkww"},"content":"     *                                 client.","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"lkwlkww"},"content":"    public Client getUniqueClientByName(String substring) throws UniqueClientNotFoundException {","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"lkwlkww"},"content":"        Client uniqueClient \u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"lkwlkww"},"content":"        for (Client client : internalList) {","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"lkwlkww"},"content":"            if (client.getName().containsSubstring(substring)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"lkwlkww"},"content":"                if (uniqueClient \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"lkwlkww"},"content":"                    uniqueClient \u003d client;","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"lkwlkww"},"content":"                } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"lkwlkww"},"content":"                    throw new UniqueClientNotFoundException();","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"lkwlkww"},"content":"                }","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"lkwlkww"},"content":"        if (uniqueClient \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"lkwlkww"},"content":"            throw new UniqueClientNotFoundException();","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"lkwlkww"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"lkwlkww"},"content":"            return uniqueClient;","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"misterpuffin"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"misterpuffin"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"misterpuffin"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"misterpuffin"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"misterpuffin"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"misterpuffin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"misterpuffin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"misterpuffin"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"misterpuffin"},"content":"                        \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"misterpuffin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"misterpuffin"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"misterpuffin"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"misterpuffin"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"misterpuffin"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"misterpuffin"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"misterpuffin"},"content":"                    return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"misterpuffin"},"content":"                }","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"misterpuffin"},"content":"        return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":59,"misterpuffin":133}},{"path":"src/main/java/seedu/condonery/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.client.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"public class ClientNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":1,"misterpuffin":5}},{"path":"src/main/java/seedu/condonery/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.client.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":" * Signals that the operation will result in duplicate Clients (Clients are considered duplicates","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":" * if they have the same identity).","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":2,"misterpuffin":9}},{"path":"src/main/java/seedu/condonery/model/client/exceptions/UniqueClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.client.exceptions;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":" * Signals that the operation is unable to find a unique client.","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"public class UniqueClientNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"    public UniqueClientNotFoundException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"        super(\"Operation cannot find a unique client\");","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"lkwlkww":10}},{"path":"src/main/java/seedu/condonery/model/client/utils/ParseClientInterestedProperties.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.client.utils;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":" * Parses a {@code Client} holding a list of interested property names.","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":" * The interested properties might only hold partial names (given by the user) along with placeholder","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" * values for other fields.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"public class ParseClientInterestedProperties {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"    private final ArrayList\u003cString\u003e missingProperties \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    private final ArrayList\u003cString\u003e duplicateProperties \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    private final Set\u003cProperty\u003e filteredInterestedProperties \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    private final Client originalClient;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     * Creates a ParseClientInterestedProperties to parse the specified {@code Client} using the","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     * input {@code Model}.","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    public ParseClientInterestedProperties(Client client, Model model) {","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"        originalClient \u003d client;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cString\u003e interestedPropertyNames \u003d originalClient.getInterestedPropertyNames();","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"        for (String propertyName : interestedPropertyNames) {","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"            if (model.hasPropertyName(propertyName)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"                if (model.hasUniquePropertyName(propertyName)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"                    filteredInterestedProperties.add(model.getUniquePropertyByName(propertyName));","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"                } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"                    duplicateProperties.add(propertyName);","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"            } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"                missingProperties.add(propertyName);","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"    public ArrayList\u003cString\u003e getMissingProperties() {","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"        return missingProperties;","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"    public ArrayList\u003cString\u003e getDuplicateProperties() {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        return duplicateProperties;","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"    public Client getNewClient() {","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"        Client client \u003d new Client(originalClient.getName(), originalClient.getAddress(),","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"                originalClient.getTags(), filteredInterestedProperties);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        client.setImageDirectoryPath(originalClient.getImageDirectoryPath());","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"        return client;","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"lkwlkww":56,"misterpuffin":3}},{"path":"src/main/java/seedu/condonery/model/fields/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.fields;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":" * Represents a Property\u0027s address in Condonery.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"public class Address {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"    public final String value;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"     * @param address A valid address.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"    public Address(String address) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(address);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"        value \u003d address;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"        return value;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"misterpuffin":57}},{"path":"src/main/java/seedu/condonery/model/fields/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.fields;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" * Represents a Property\u0027s or Client\u0027s name in Condonery.","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"public class Name {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"            \"Names can take any alphanumeric values, and it should not be blank\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum}@ \u0027]*\";","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    public Name(String name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if a given string is contained within a Name.","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"    public boolean containsSubstring(String substring) {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"        return fullName.contains(substring);","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        return fullName;","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":7,"zacchaeuschok":1,"misterpuffin":57}},{"path":"src/main/java/seedu/condonery/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":2,"-":55}},{"path":"src/main/java/seedu/condonery/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":2,"-":69}},{"path":"src/main/java/seedu/condonery/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":2,"-":57}},{"path":"src/main/java/seedu/condonery/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.StringUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"misterpuffin":2,"-":29}},{"path":"src/main/java/seedu/condonery/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":3,"-":120}},{"path":"src/main/java/seedu/condonery/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":2,"-":51}},{"path":"src/main/java/seedu/condonery/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"misterpuffin":4,"-":133}},{"path":"src/main/java/seedu/condonery/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"misterpuffin":1,"-":10}},{"path":"src/main/java/seedu/condonery/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"misterpuffin":1,"-":5}},{"path":"src/main/java/seedu/condonery/model/property/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":" * Represents a Property\u0027s price in Condonery.","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"public class Price {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Prices can take any positive integer, and it should not be blank\";","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"    /*","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d+([,]\\\\d+)*$\";","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"    public final String value;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    public final Integer amount;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"     * @param price A valid address.","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"    public Price(String price) {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"        amount \u003d Integer.parseInt(price.replaceAll(\",\", \"\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"        value \u003d this.toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"zacchaeuschok"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"    public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"zacchaeuschok"},"content":"        return String.valueOf(amount);","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"zacchaeuschok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof Price // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 amount.equals(((Price) other).amount)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"zacchaeuschok"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"zacchaeuschok"},"content":"        return amount.hashCode();","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"zacchaeuschok":59}},{"path":"src/main/java/seedu/condonery/model/property/Property.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":" * Represents a Property in Condonery.","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"public class Property {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    // Identity fields","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    private final Name name;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    // Data fields","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    private final Address address;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"    private final Price price;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    private Path imageDirectoryPath;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"    private final Set\u003cClient\u003e interestedClients \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"    private PropertyTypeEnum propertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"    private PropertyStatusEnum propertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"    public Property(Name name, Address address, Price price, Set\u003cTag\u003e tags, Set\u003cClient\u003e interestedClients,","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"                PropertyTypeEnum propertyTypeEnum, PropertyStatusEnum propertyStatusEnum) {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"        this.propertyTypeEnum \u003d propertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"        this.propertyStatusEnum \u003d propertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"        this.interestedClients.addAll(interestedClients);","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        return name;","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"        return address;","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"zacchaeuschok"},"content":"    public Price getPrice() {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"zacchaeuschok"},"content":"        return price;","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    public Path getImagePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"        requireAllNonNull(imageDirectoryPath);","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"        return imageDirectoryPath.resolve(\"property-\" + getCamelCaseName());","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"    public PropertyTypeEnum getPropertyTypeEnum() {","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"        return propertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"     * Returns an immutable interested client set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"    public Set\u003cClient\u003e getInterestedClients() {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"        return Collections.unmodifiableSet(interestedClients);","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"zacchaeuschok"},"content":"     * Returns an immutable set containing tag names, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"zacchaeuschok"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"zacchaeuschok"},"content":"    public Set\u003cString\u003e getTagNames() {","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"zacchaeuschok"},"content":"        HashSet\u003cString\u003e stringTags \u003d new HashSet\u003c\u003e(tags.size());","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"zacchaeuschok"},"content":"        tags.forEach(tag -\u003e stringTags.add(tag.tagName));","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"zacchaeuschok"},"content":"        return Collections.unmodifiableSet(stringTags);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"yuehernkang"},"content":"    public PropertyStatusEnum getPropertyStatusEnum() {","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"yuehernkang"},"content":"        return propertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"     * Returns the name of the property in lowerCamelCase.","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"     * This function is used when getting the file name for image storage.","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"     * @return property name in lowerCamelCase.","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"    public String getCamelCaseName() {","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"        String[] words \u003d name.toString().split(\"[\\\\W_]+\");","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"            String word \u003d words[i];","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"                word \u003d word.isEmpty() ? word : word.toLowerCase();","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"            } else {","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"                word \u003d word.isEmpty() ? word : Character.toUpperCase(word.charAt(0)) + word.substring(1).toLowerCase();","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"            builder.append(word);","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"misterpuffin"},"content":"     * Changes the imageDirectoryPath of the Property.","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"     * @param imageDirectoryPath Path to be saved.","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"misterpuffin"},"content":"    public void setImageDirectoryPath(Path imageDirectoryPath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"misterpuffin"},"content":"        this.imageDirectoryPath \u003d imageDirectoryPath;","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"lkwlkww"},"content":"     * Returns an immutable set containing interested client names, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"lkwlkww"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"lkwlkww"},"content":"    public Set\u003cString\u003e getInterestedClientNames() {","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"lkwlkww"},"content":"        HashSet\u003cString\u003e stringInterestedClients \u003d new HashSet\u003c\u003e(interestedClients.size());","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"lkwlkww"},"content":"        interestedClients.forEach(interestedClient","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"lkwlkww"},"content":"                -\u003e stringInterestedClients.add(interestedClient.getName().toString()));","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"lkwlkww"},"content":"        return Collections.unmodifiableSet(stringInterestedClients);","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if both properties have the same name.","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"lkwlkww"},"content":"     * This defines a weaker notion of equality between two properties.","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"lkwlkww"},"content":"    public boolean isSameProperty(Property otherProperty) {","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"lkwlkww"},"content":"        if (otherProperty \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"lkwlkww"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"lkwlkww"},"content":"        return otherProperty !\u003d null","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"lkwlkww"},"content":"                \u0026\u0026 otherProperty.getName().equals(getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if both properties have the same identity and data fields.","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"lkwlkww"},"content":"     * This defines a stronger notion of equality between two properties.","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"lkwlkww"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"lkwlkww"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"lkwlkww"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"lkwlkww"},"content":"        if (!(other instanceof Property)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"lkwlkww"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"lkwlkww"},"content":"        Property otherProperty \u003d (Property) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"lkwlkww"},"content":"        return otherProperty.getName().equals(getName())","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"lkwlkww"},"content":"            \u0026\u0026 otherProperty.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"zacchaeuschok"},"content":"            \u0026\u0026 otherProperty.getPrice().equals(getPrice())","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"yuehernkang"},"content":"            \u0026\u0026 otherProperty.getPropertyStatusEnum().equals(getPropertyStatusEnum())","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"yuehernkang"},"content":"            \u0026\u0026 otherProperty.getPropertyTypeEnum().equals(getPropertyTypeEnum())","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"lkwlkww"},"content":"            \u0026\u0026 otherProperty.getTags().equals(getTags())","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"yuehernkang"},"content":"            \u0026\u0026 otherProperty.getInterestedClients().equals(getInterestedClients());","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"lkwlkww"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"lkwlkww"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"yuehernkang"},"content":"        return Objects.hash(name, address, price, tags, interestedClients, propertyTypeEnum, propertyStatusEnum);","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"lkwlkww"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"lkwlkww"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"lkwlkww"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"lkwlkww"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"zacchaeuschok"},"content":"            .append(getAddress())","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"zacchaeuschok"},"content":"            .append(\"; Price: \")","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"yuehernkang"},"content":"            .append(getPrice())","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"yuehernkang"},"content":"            .append(\"; Property Type: \")","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"yuehernkang"},"content":"            .append(getPropertyTypeEnum())","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"yuehernkang"},"content":"            .append(\"; Property Status: \")","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"yuehernkang"},"content":"            .append(getPropertyStatusEnum());","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"lkwlkww"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"lkwlkww"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"lkwlkww"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cClient\u003e interestedClients \u003d getInterestedClients();","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"lkwlkww"},"content":"        if (!interestedClients.isEmpty()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":203,"author":{"gitId":"lkwlkww"},"content":"            builder.append(\"; Interested client(s): \");","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"lkwlkww"},"content":"            interestedClients.forEach(interestedClient -\u003e builder.append(interestedClient.getName().toString()));","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":206,"author":{"gitId":"lkwlkww"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lkwlkww":125,"yuehernkang":25,"zacchaeuschok":24,"misterpuffin":36}},{"path":"src/main/java/seedu/condonery/model/property/PropertyDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.exceptions.UniquePropertyNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":" * Wraps all data at the Condonery level","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":" * Duplicates are not allowed (by .isSameProperty comparison)","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"public class PropertyDirectory implements ReadOnlyPropertyDirectory {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    private final UniquePropertyList properties;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"        properties \u003d new UniquePropertyList();","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    public PropertyDirectory() {}","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"     * Creates an PropertyDirectory using the Properties in the {@code toBeCopied}","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public PropertyDirectory(ReadOnlyPropertyDirectory toBeCopied, Path imageDirectoryPath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        for (Property property : this.properties) {","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"            property.setImageDirectoryPath(imageDirectoryPath);","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"     * Replaces the contents of the property list with {@code properties}.","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"     * {@code properties} must not contain duplicate properties.","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"    public void setProperties(List\u003cProperty\u003e properties) {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        this.properties.setProperties(properties);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"     * Resets the existing data of this {@code PropertyDirectory} with {@code newData}.","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"    public void resetData(ReadOnlyPropertyDirectory newData) {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"        setProperties(newData.getPropertyList());","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"    //// property-level operations","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if a property with the same identity as {@code property} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasProperty(Property property) {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(property);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"        return properties.contains(property);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"     * Adds a property to the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"     * The property must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"    public void addProperty(Property p) {","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"        properties.add(p);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"     * Replaces the given property {@code target} in the list with {@code editedProperty}.","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"     * The property identity of {@code editedProperty} must not be the same","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"     * as another existing property in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"    public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(editedProperty);","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"        properties.setProperty(target, editedProperty);","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"     * Removes {@code key} from this {@code PropertyDirectory}.","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"lkwlkww"},"content":"    public void removeProperty(Property key) {","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"        properties.remove(key);","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if a property whos name contains the given String exists in the property directory.","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasPropertyName(String substring) {","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"        return properties.hasPropertyName(substring);","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if only one unique property whos name contains the given String exists in the property directory.","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasUniquePropertyName(String substring) {","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"lkwlkww"},"content":"        return properties.hasUniquePropertyName(substring);","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"lkwlkww"},"content":"     * Returns a unique property whos name contains the given string.","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"     * @throws UniquePropertyNotFoundException if the substring does not match to a unique","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"lkwlkww"},"content":"     *                                 property.","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"lkwlkww"},"content":"    public Property getUniquePropertyByName(String substring) throws UniquePropertyNotFoundException {","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"lkwlkww"},"content":"        return properties.getUniquePropertyByName(substring);","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"        return properties.asUnmodifiableObservableList().size() + \" properties\";","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"lkwlkww"},"content":"    public ObservableList\u003cProperty\u003e getPropertyList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"lkwlkww"},"content":"        return properties.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"misterpuffin"},"content":"                || (other instanceof PropertyDirectory // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"lkwlkww"},"content":"                \u0026\u0026 properties.equals(((PropertyDirectory) other).properties));","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"lkwlkww"},"content":"        return properties.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lkwlkww":56,"misterpuffin":13,"-":78}},{"path":"src/main/java/seedu/condonery/model/property/PropertyNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.commons.util.StringUtil;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":" * Tests that a {@code Property}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"public class PropertyNameContainsKeywordsPredicate implements Predicate\u003cProperty\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"    public PropertyNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    public boolean test(Property property) {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(property.getName().fullName, keyword));","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof PropertyNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 keywords.equals(((PropertyNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lkwlkww":27,"zacchaeuschok":4}},{"path":"src/main/java/seedu/condonery/model/property/PropertyPriceWithinRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":" * Tests that a {@code Property}\u0027s {@code Price} is within specified range.","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"public class PropertyPriceWithinRangePredicate implements Predicate\u003cProperty\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"    private final Integer lower;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"    private final Integer upper;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"     * Constructs predicate with lower bound and upper bound for price.","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"     * @param lower lower bound of price range (inclusive)","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"     * @param upper upper bound of price range (inclusive)","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"    public PropertyPriceWithinRangePredicate(int lower, int upper) {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"        this.lower \u003d lower;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"        this.upper \u003d upper;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean test(Property property) {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"        return property.getPrice().amount \u003e\u003d lower \u0026\u0026 property.getPrice().amount \u003c\u003d upper;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof PropertyPriceWithinRangePredicate // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 lower.equals(((PropertyPriceWithinRangePredicate) other).lower))","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 upper.equals(((PropertyPriceWithinRangePredicate) other).upper); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"zacchaeuschok":36}},{"path":"src/main/java/seedu/condonery/model/property/PropertyStatusContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":" * Tests that a {@code Property}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"public class PropertyStatusContainsKeywordsPredicate implements Predicate\u003cProperty\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"    public PropertyStatusContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"    public boolean test(Property property) {","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"                .anyMatch(keyword -\u003e keyword.equalsIgnoreCase(property.getPropertyStatusEnum().toString()));","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"                || (other instanceof PropertyStatusContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"                \u0026\u0026 keywords.equals(((PropertyStatusContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"yuehernkang":29}},{"path":"src/main/java/seedu/condonery/model/property/PropertyTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.commons.util.StringUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":" * Tests that a {@code Property}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"public class PropertyTagContainsKeywordsPredicate implements Predicate\u003cProperty\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"    public PropertyTagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean test(Property property) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(property.getTagNames(), keyword));","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof PropertyTagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 keywords.equals(((PropertyTagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"zacchaeuschok":31}},{"path":"src/main/java/seedu/condonery/model/property/PropertyTypeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.commons.util.StringUtil;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":" * Tests that a {@code Property}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"public class PropertyTypeContainsKeywordsPredicate implements Predicate\u003cProperty\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"    public PropertyTypeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean test(Property property) {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(property.getPropertyTypeEnum().name(), keyword));","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"                || (other instanceof PropertyTypeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"                \u0026\u0026 keywords.equals(((PropertyTypeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"zacchaeuschok":31}},{"path":"src/main/java/seedu/condonery/model/property/ReadOnlyPropertyDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"public interface ReadOnlyPropertyDirectory {","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"     * Returns an unmodifiable view of the properties list.","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"     * This list will not contain any duplicate properties.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"    ObservableList\u003cProperty\u003e getPropertyList();","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lkwlkww":4,"misterpuffin":1,"-":11}},{"path":"src/main/java/seedu/condonery/model/property/UniquePropertyList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import static seedu.condonery.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.exceptions.DuplicatePropertyException;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.exceptions.PropertyNotFoundException;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.exceptions.UniquePropertyNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":" * A list of properties that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":" * A property is considered unique by comparing using {@code Property#isSameProperty(Property)}.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":" * As such, adding and updating of properties uses Property#isSameProperty(Property) for equality","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":" * so as to ensure that the property being added or updated is unique in terms of identity in the","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":" * UniquePropertyList. However, the removal of a property uses Property#equals(Object) so","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":" * as to ensure that the property with exactly the same fields will be removed.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":" * @see Property#isSameProperty(Property)","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"public class UniquePropertyList implements Iterable\u003cProperty\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    private final ObservableList\u003cProperty\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    private final ObservableList\u003cProperty\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if the list contains an equivalent property as the given argument.","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"    public boolean contains(Property toCheck) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        return internalList.stream().anyMatch(toCheck::isSameProperty);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"     * Adds a property to the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"     * The property must not already exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"    public void add(Property toAdd) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"            throw new DuplicatePropertyException();","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"     * Replaces the property {@code target} in the list with {@code editedProperty}.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"     * The property identity of {@code editedProperty} must not be the same as another existing property in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"    public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"        requireAllNonNull(target, editedProperty);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"            throw new PropertyNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"        if (!target.isSameProperty(editedProperty) \u0026\u0026 contains(editedProperty)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"            throw new DuplicatePropertyException();","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"        internalList.set(index, editedProperty);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"     * Removes the equivalent property from the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"     * The property must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"    public void remove(Property toRemove) {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"            throw new PropertyNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"    public void setProperties(UniquePropertyList replacement) {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"     * Replaces the contents of this list with {@code properties}.","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"     * {@code properties} must not contain duplicate properties.","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"lkwlkww"},"content":"    public void setProperties(List\u003cProperty\u003e properties) {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"lkwlkww"},"content":"        requireAllNonNull(properties);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"lkwlkww"},"content":"        if (!propertiesAreUnique(properties)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"lkwlkww"},"content":"            throw new DuplicatePropertyException();","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"lkwlkww"},"content":"        internalList.setAll(properties);","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if a property whos name contains the given String exists in the property directory.","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasPropertyName(String substring) {","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"        for (Property property : internalList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"            if (property.getName().toString().contains(substring)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"                return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"lkwlkww"},"content":"        return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if only one unique property whos name contains the given String exists in the property directory.","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"lkwlkww"},"content":"    public boolean hasUniquePropertyName(String substring) {","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"        int containCount \u003d 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"lkwlkww"},"content":"        for (Property property : internalList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"lkwlkww"},"content":"            if (property.getName().toString().contains(substring)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"lkwlkww"},"content":"                containCount +\u003d 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"lkwlkww"},"content":"        if (containCount \u003d\u003d 1) {","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"lkwlkww"},"content":"            return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"lkwlkww"},"content":"        } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"            return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"lkwlkww"},"content":"     * Returns a unique property whos name contains the given string.","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"lkwlkww"},"content":"     * @throws UniquePropertyNotFoundException if the substring does not match to a unique","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"lkwlkww"},"content":"     *                                 property.","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"lkwlkww"},"content":"    public Property getUniquePropertyByName(String substring) throws UniquePropertyNotFoundException {","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"lkwlkww"},"content":"        Property uniqueProperty \u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"lkwlkww"},"content":"        for (Property property : internalList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"lkwlkww"},"content":"            if (property.getName().containsSubstring(substring)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"lkwlkww"},"content":"                if (uniqueProperty \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"lkwlkww"},"content":"                    uniqueProperty \u003d property;","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"lkwlkww"},"content":"                } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"lkwlkww"},"content":"                    throw new UniquePropertyNotFoundException();","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"lkwlkww"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"lkwlkww"},"content":"        if (uniqueProperty \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"lkwlkww"},"content":"            throw new UniquePropertyNotFoundException();","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"lkwlkww"},"content":"        } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"lkwlkww"},"content":"            return uniqueProperty;","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"lkwlkww"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"lkwlkww"},"content":"    public ObservableList\u003cProperty\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"lkwlkww"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"lkwlkww"},"content":"    public Iterator\u003cProperty\u003e iterator() {","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"lkwlkww"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"lkwlkww"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"lkwlkww"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"lkwlkww"},"content":"                || (other instanceof UniquePropertyList // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"lkwlkww"},"content":"                        \u0026\u0026 internalList.equals(((UniquePropertyList) other).internalList));","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"lkwlkww"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"lkwlkww"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"lkwlkww"},"content":"     * Returns true if {@code properties} contains only unique properties.","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"lkwlkww"},"content":"    private boolean propertiesAreUnique(List\u003cProperty\u003e properties) {","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"lkwlkww"},"content":"        for (int i \u003d 0; i \u003c properties.size() - 1; i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"lkwlkww"},"content":"            for (int j \u003d i + 1; j \u003c properties.size(); j++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"lkwlkww"},"content":"                if (properties.get(i).isSameProperty(properties.get(j))) {","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"lkwlkww"},"content":"                    return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"lkwlkww"},"content":"                }","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"lkwlkww"},"content":"        return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lkwlkww":188,"misterpuffin":4}},{"path":"src/main/java/seedu/condonery/model/property/exceptions/DuplicatePropertyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.property.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":" * Signals that the operation will result in duplicate Properties (Properties are considered duplicates","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":" * if they have the same identity).","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"public class DuplicatePropertyException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"    public DuplicatePropertyException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"        super(\"Operation would result in duplicate properties\");","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lkwlkww":9,"misterpuffin":2}},{"path":"src/main/java/seedu/condonery/model/property/exceptions/PropertyNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.property.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":" * Signals that the operation is unable to find the specified property.","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"public class PropertyNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lkwlkww":6}},{"path":"src/main/java/seedu/condonery/model/property/exceptions/UniquePropertyNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.property.exceptions;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":" * Signals that the operation is unable to find a unique property.","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"public class UniquePropertyNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"    public UniquePropertyNotFoundException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"        super(\"Operation cannot find a unique property\");","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"lkwlkww":10}},{"path":"src/main/java/seedu/condonery/model/property/utils/ParsePropertyInterestedClients.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.model.property.utils;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":" * Parses a {@code Property} holding a list of interested client names.","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":" * The interested clients might only hold partial names (given by the user) along with placeholder","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" * addresses and tags.","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"public class ParsePropertyInterestedClients {","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"    private final ArrayList\u003cString\u003e missingClients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    private final ArrayList\u003cString\u003e duplicateClients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    private final Set\u003cClient\u003e filteredInterestedClients \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    private final Property originalProperty;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     * Creates a ParsePropertyInterestedClients to parse the specified {@code Property} using the","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     * input {@code Model}.","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    public ParsePropertyInterestedClients(Property property, Model model) {","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"        originalProperty \u003d property;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"        Set\u003cString\u003e interestedClientNames \u003d originalProperty.getInterestedClientNames();","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"        for (String clientName : interestedClientNames) {","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"            if (model.hasClientName(clientName)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"                if (model.hasUniqueClientName(clientName)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"                    filteredInterestedClients.add(model.getUniqueClientByName(clientName));","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"                } else {","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"                    duplicateClients.add(clientName);","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"                }","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"            } else {","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"                missingClients.add(clientName);","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"    public ArrayList\u003cString\u003e getMissingClients() {","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"        return missingClients;","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"    public ArrayList\u003cString\u003e getDuplicateClients() {","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        return duplicateClients;","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"    public Property getNewProperty() {","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"        return new Property(","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"                originalProperty.getName(),","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"                originalProperty.getAddress(),","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"                originalProperty.getPrice(),","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"                originalProperty.getTags(),","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"                filteredInterestedClients,","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"                originalProperty.getPropertyTypeEnum(),","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"                originalProperty.getPropertyStatusEnum()","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"        );","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"lkwlkww":55,"yuehernkang":9}},{"path":"src/main/java/seedu/condonery/model/tag/PropertyStatusEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.model.tag;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":" * Property Status","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":" * AVAILABLE - Indicates {@code Property} is available for purchase","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":" * SOLD - Indicates {@code Property} has been sold","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":" * PENDING - Indicates {@code Property} is pending sale","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"public enum PropertyStatusEnum {","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"    AVAILABLE,","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"    SOLD,","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"    PENDING","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"yuehernkang":13}},{"path":"src/main/java/seedu/condonery/model/tag/PropertyTypeEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.model.tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":" * Enum for Property Type","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"public enum PropertyTypeEnum {","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"    HDB,","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"    CONDO,","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"    LANDED","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"yuehernkang":10}},{"path":"src/main/java/seedu/condonery/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}-]+\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zacchaeuschok":1,"misterpuffin":2,"-":51}},{"path":"src/main/java/seedu/condonery/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.Price;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":" * Contains utility methods for populating {@code PropertyDirectory} with sample data.","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    public static Property[] getSampleProperties() {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"        return new Property[] {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"            new Property(new Name(\"PINNACLE@DUXTON\"), new Address(\"Cantonment Rd, #1G, S085301\"),","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"                    new Price(\"1000000\"), getTagSet(\"High-End\", \"Available\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"                    getClientSet(","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"                        new Client(new Name(\"Bobby\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"                                new Address(\"BobbyAddress\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"                                getTagSet(\"Friend\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"                                new HashSet\u003c\u003e()),","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"                        new Client(new Name(\"Samuel\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"                                new Address(\"SamuelAddress\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"                                getTagSet(\"Friend\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"                                new HashSet\u003c\u003e())),","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"                    PropertyTypeEnum.valueOf(\"CONDO\"), PropertyStatusEnum.AVAILABLE),","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"            new Property(new Name(\"INTERLACE\"), new Address(\"180 Depot Road, S109684\"),","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"                    new Price(\"1000000\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"                    getTagSet(\"High-End\", \"Sold\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"                    getClientSet(","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"                            new Client(new Name(\"Casey\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"                                    new Address(\"CaseyAddress\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"                                    getTagSet(\"Rich\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"                                    new HashSet\u003c\u003e())), PropertyTypeEnum.valueOf(\"CONDO\"), PropertyStatusEnum.AVAILABLE),","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"            new Property(new Name(\"D\u0027LEEDON\"), new Address(\"7 Leedon Heights, D\u0027leedon, S267953\"),","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"                    new Price(\"1000000\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"                    getTagSet(\"High-End\", \"Reserved\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"                    getClientSet(","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"                            new Client(new Name(\"Jac\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"                                    new Address(\"JacAddress\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"                                    getTagSet(\"Urgent\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"                                    new HashSet\u003c\u003e()),","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"                            new Client(new Name(\"Jack\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"                                    new Address(\"JackAddress\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"                                    getTagSet(\"Test\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"                                    new HashSet\u003c\u003e()),","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"                            new Client(new Name(\"Hamster\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"                                    new Address(\"Hamster\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"                                    getTagSet(\"Friend\", \"Rich\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"                                    new HashSet\u003c\u003e())), PropertyTypeEnum.valueOf(\"CONDO\"), PropertyStatusEnum.AVAILABLE),","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"        return new Client[] {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"zacchaeuschok"},"content":"            new Client(new Name(\"Dennis Tan\"), new Address(\"Wall St, #1G, S085301\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"                    getTagSet(\"High-End\", \"Available\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"zacchaeuschok"},"content":"            new Client(new Name(\"Jeremy Tan\"), new Address(\"11 Pulau Tekong Besar, Pulau, Tekong Camp, 508450\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"                    getTagSet(\"High-End\", \"Sold\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"zacchaeuschok"},"content":"            new Client(new Name(\"Walter Wong\"), new Address(\"7 Leedon Heights, D\u0027leedon, S267953\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"                    getTagSet(\"High-End\", \"Reserved\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"            new Client(new Name(\"Jac\"), new Address(\"JacAddress\"), getTagSet(\"Urgent\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"            new Client(new Name(\"Jack\"), new Address(\"JackAddress\"), getTagSet(\"Friend\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"            new Client(new Name(\"Hamster\"), new Address(\"Hamster\"), getTagSet(\"Friend\", \"Rich\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"            new Client(new Name(\"Casey\"), new Address(\"CaseyAddress\"), getTagSet(\"Rich\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"            new Client(new Name(\"Bobby\"), new Address(\"BobbyAddress\"), getTagSet(\"Rich\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"                    getPropertySet(","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"                            new Property(new Name(\"PINNACLE@DUXTON\"), new Address(\"Cantonment Rd, #1G, S085301\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"                                    new Price(\"1000000\"), getTagSet(\"High-End\", \"Available\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"yuehernkang"},"content":"                                    new HashSet\u003c\u003e(), PropertyTypeEnum.valueOf(\"CONDO\"), PropertyStatusEnum.AVAILABLE))),","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"            new Client(new Name(\"Samuel\"), new Address(\"SamuelAddress\"), getTagSet(\"Friend\"), new HashSet\u003c\u003e())","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"        };","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"    public static ReadOnlyPropertyDirectory getSamplePropertyDirectory() {","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectory sampleAb \u003d new PropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"        for (Property sampleProperty : getSampleProperties()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"            sampleAb.addProperty(sampleProperty);","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"    public static ReadOnlyClientDirectory getSampleClientDirectory() {","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"        ClientDirectory sampleCd \u003d new ClientDirectory();","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"            sampleCd.addClient(sampleClient);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"        return sampleCd;","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":112,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"lkwlkww"},"content":"     * Returns a Client set containing the list of clients given.","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"lkwlkww"},"content":"    public static Set\u003cClient\u003e getClientSet(Client... clients) {","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"lkwlkww"},"content":"        return Arrays.stream(clients)","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"lkwlkww"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"lkwlkww"},"content":"     * Returns a Property set containing the list of properties given.","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"lkwlkww"},"content":"    public static Set\u003cProperty\u003e getPropertySet(Property... properties) {","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"lkwlkww"},"content":"        return Arrays.stream(properties)","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"lkwlkww"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"lkwlkww":41,"yuehernkang":32,"zacchaeuschok":6,"misterpuffin":23,"-":26}},{"path":"src/main/java/seedu/condonery/storage/ClientDirectoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":" * Represents a storage for {@link seedu.condonery.model.ClientDirectory}.","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"public interface ClientDirectoryStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    Path getClientDirectoryFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"     * Returns ClientDirectory data as a {@link ReadOnlyClientDirectory}.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    Optional\u003cReadOnlyClientDirectory\u003e readClientDirectory() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"     * @see #getClientDirectoryFilePath()","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    Optional\u003cReadOnlyClientDirectory\u003e readClientDirectory(Path filePath)","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"     * Saves the given {@link ReadOnlyClientDirectory} to the storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"     * @param clientDirectory cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    void saveClientDirectory(ReadOnlyClientDirectory clientDirectory) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"     * @see #saveClientDirectory(ReadOnlyClientDirectory)","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"    void saveClientDirectory(ReadOnlyClientDirectory clientDirectory, Path filePath) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":1,"misterpuffin":45}},{"path":"src/main/java/seedu/condonery/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    private final String name;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"    private final String address;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    private final List\u003cJsonAdaptedProperty\u003e interestedProperties \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"            @JsonProperty(\"interestedProperties\") List\u003cJsonAdaptedProperty\u003e interestedProperties) {","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"        if (interestedProperties !\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"            this.interestedProperties.addAll(interestedProperties);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"        interestedProperties.addAll(source.getInterestedProperties().stream()","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"                .map(JsonAdaptedProperty::new)","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Client} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"        final List\u003cTag\u003e clientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"        final List\u003cProperty\u003e interestedProperties \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"            clientTags.add(tag.toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"        for (JsonAdaptedProperty property : this.interestedProperties) {","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"            interestedProperties.add(property.toModelType());","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(clientTags);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"        final Set\u003cProperty\u003e modelInterestedProperties \u003d new HashSet\u003c\u003e(interestedProperties);","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"        return new Client(modelName, modelAddress, modelTags, modelInterestedProperties);","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":19,"misterpuffin":82}},{"path":"src/main/java/seedu/condonery/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Person;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"misterpuffin":8,"-":101}},{"path":"src/main/java/seedu/condonery/storage/JsonAdaptedProperty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.Price;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":" * Jackson-friendly version of {@link Property}.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"class JsonAdaptedProperty {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Property\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    private final String name;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    private final String address;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"    private final String price;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"    private final List\u003cJsonAdaptedClient\u003e interestedClients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"    private final String propertyType;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"    private final String propertyStatus;","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"     * Constructs a {@code JsonAdaptedProperty} with the given property details.","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"    public JsonAdaptedProperty(@JsonProperty(\"name\") String name, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"                               @JsonProperty(\"price\") String price,","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"                               @JsonProperty(\"propertyType\")String propertyType,","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"                               @JsonProperty(\"propertyStatus\")String propertyStatus,","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"                              @JsonProperty(\"interestedClients\") List\u003cJsonAdaptedClient\u003e interestedClients","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"    ) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"zacchaeuschok"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"        if (interestedClients !\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"            this.interestedClients.addAll(interestedClients);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"        this.propertyType \u003d propertyType;","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"        this.propertyStatus \u003d propertyStatus;","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"     * Converts a given {@code Property} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"    public JsonAdaptedProperty(Property source) {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"zacchaeuschok"},"content":"        price \u003d source.getPrice().value;","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"        interestedClients.addAll(source.getInterestedClients().stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"                .map(JsonAdaptedClient::new)","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"yuehernkang"},"content":"        propertyType \u003d source.getPropertyTypeEnum().toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"yuehernkang"},"content":"        propertyStatus \u003d source.getPropertyStatusEnum().toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"     * Converts this Jackson-friendly adapted property object into the model\u0027s {@code Property} object.","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted property.","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"    public Property toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"        final List\u003cTag\u003e propertyTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"        final List\u003cClient\u003e interestedClients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":"            propertyTags.add(tag.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"        for (JsonAdaptedClient client : this.interestedClients) {","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"lkwlkww"},"content":"            interestedClients.add(client.toModelType());","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"lkwlkww"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"lkwlkww"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"lkwlkww"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"lkwlkww"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"zacchaeuschok"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"zacchaeuschok"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"zacchaeuschok"},"content":"        if (!Price.isValidPrice(price)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"zacchaeuschok"},"content":"            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"zacchaeuschok"},"content":"        final Price modelPrice \u003d new Price(price);","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"lkwlkww"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(propertyTags);","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"lkwlkww"},"content":"        final Set\u003cClient\u003e modelInterestedClients \u003d new HashSet\u003c\u003e(interestedClients);","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"yuehernkang"},"content":"        if (propertyType \u003d\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"yuehernkang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"yuehernkang"},"content":"                    PropertyTypeEnum.class.getSimpleName()));","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"yuehernkang"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"yuehernkang"},"content":"        final PropertyTypeEnum modelPropertyType \u003d PropertyTypeEnum.valueOf(propertyType);","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"yuehernkang"},"content":"        final PropertyStatusEnum modelPropertyStatus \u003d PropertyStatusEnum.valueOf(propertyStatus);","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"yuehernkang"},"content":"        return new Property(modelName, modelAddress, modelPrice, modelTags,","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"yuehernkang"},"content":"               modelInterestedClients, modelPropertyType, modelPropertyStatus);","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lkwlkww":97,"yuehernkang":22,"zacchaeuschok":13,"misterpuffin":2}},{"path":"src/main/java/seedu/condonery/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"misterpuffin":3,"-":45}},{"path":"src/main/java/seedu/condonery/storage/JsonClientDirectoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.FileUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.JsonUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":" * A class to access ClientDirectory data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"public class JsonClientDirectoryStorage implements ClientDirectoryStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonClientDirectoryStorage.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    public JsonClientDirectoryStorage(Path filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    public Path getClientDirectoryFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"        return filePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public Optional\u003cReadOnlyClientDirectory\u003e readClientDirectory() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        return readClientDirectory(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"     * Similar to {@link #readClientDirectory()}.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    public Optional\u003cReadOnlyClientDirectory\u003e readClientDirectory(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"        Optional\u003cJsonSerializableClientDirectory\u003e jsonClientDirectory \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"                filePath, JsonSerializableClientDirectory.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        if (!jsonClientDirectory.isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"            return Optional.of(jsonClientDirectory.get().toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"    public void saveClientDirectory(ReadOnlyClientDirectory clientDirectory) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"        saveClientDirectory(clientDirectory, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"     * Similar to {@link #saveClientDirectory(ReadOnlyClientDirectory)}.","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"    public void saveClientDirectory(ReadOnlyClientDirectory clientDirectory, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(clientDirectory);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableClientDirectory(clientDirectory), filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":1,"misterpuffin":79}},{"path":"src/main/java/seedu/condonery/storage/JsonPropertyDirectoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.FileUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.JsonUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":" * A class to access PropertyDirectory data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"public class JsonPropertyDirectoryStorage implements PropertyDirectoryStorage {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPropertyDirectoryStorage.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    public JsonPropertyDirectoryStorage(Path filePath) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    public Path getPropertyDirectoryFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"        return filePath;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public Optional\u003cReadOnlyPropertyDirectory\u003e readPropertyDirectory() throws DataConversionException {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        return readPropertyDirectory(filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"     * Similar to {@link #readPropertyDirectory()}.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    public Optional\u003cReadOnlyPropertyDirectory\u003e readPropertyDirectory(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"        Optional\u003cJsonSerializablePropertyDirectory\u003e jsonPropertyDirectory \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"                filePath, JsonSerializablePropertyDirectory.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        if (!jsonPropertyDirectory.isPresent()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"            return Optional.of(jsonPropertyDirectory.get().toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"    public void savePropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory) throws IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"        savePropertyDirectory(propertyDirectory, filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"     * Similar to {@link #savePropertyDirectory(ReadOnlyPropertyDirectory)}.","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"    public void savePropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory, Path filePath) throws IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(propertyDirectory);","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePropertyDirectory(propertyDirectory), filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"lkwlkww":1,"misterpuffin":79}},{"path":"src/main/java/seedu/condonery/storage/JsonSerializableClientDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":" * An Immutable ClientDirectory that is serializable to JSON format.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"@JsonRootName(value \u003d \"clientDirectory\")","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"class JsonSerializableClientDirectory {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"Properties list contains duplicate client(s).\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"     * Constructs a {@code JsonSerializableClientDirectory} with the given clients.","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    public JsonSerializableClientDirectory(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"     * Converts a given {@code ReadOnlyClientDirectory} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableClientDirectory}.","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    public JsonSerializableClientDirectory(ReadOnlyClientDirectory source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"     * Converts this address book into the model\u0027s {@code ClientDirectory} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    public ClientDirectory toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"        ClientDirectory clientDirectory \u003d new ClientDirectory();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"            if (clientDirectory.hasClient(client)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"            clientDirectory.addClient(client);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"        return clientDirectory;","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"lkwlkww":2,"misterpuffin":58}},{"path":"src/main/java/seedu/condonery/storage/JsonSerializablePropertyDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":" * An Immutable PropertyDirectory that is serializable to JSON format.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"@JsonRootName(value \u003d \"propertyDirectory\")","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"class JsonSerializablePropertyDirectory {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"Properties list contains duplicate property(s).\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    private final List\u003cJsonAdaptedProperty\u003e properties \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"     * Constructs a {@code JsonSerializablePropertyDirectory} with the given properties.","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    public JsonSerializablePropertyDirectory(@JsonProperty(\"properties\") List\u003cJsonAdaptedProperty\u003e properties) {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"        this.properties.addAll(properties);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"     * Converts a given {@code ReadOnlyPropertyDirectory} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePropertyDirectory}.","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    public JsonSerializablePropertyDirectory(ReadOnlyPropertyDirectory source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"        properties.addAll(source.getPropertyList().stream().map(JsonAdaptedProperty::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"     * Converts this address book into the model\u0027s {@code PropertyDirectory} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    public PropertyDirectory toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectory propertyDirectory \u003d new PropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        for (JsonAdaptedProperty jsonAdaptedProperty : properties) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"            Property property \u003d jsonAdaptedProperty.toModelType();","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"            if (propertyDirectory.hasProperty(property)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"            propertyDirectory.addProperty(property);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"        return propertyDirectory;","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"lkwlkww":14,"misterpuffin":46}},{"path":"src/main/java/seedu/condonery/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.JsonUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"misterpuffin":5,"-":42}},{"path":"src/main/java/seedu/condonery/storage/PropertyDirectoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":" * Represents a storage for {@link seedu.condonery.model.PropertyDirectory}.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"public interface PropertyDirectoryStorage {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    Path getPropertyDirectoryFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"     * Returns PropertyDirectory data as a {@link ReadOnlyPropertyDirectory}.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    Optional\u003cReadOnlyPropertyDirectory\u003e readPropertyDirectory() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"     * @see #getPropertyDirectoryFilePath()","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    Optional\u003cReadOnlyPropertyDirectory\u003e readPropertyDirectory(Path filePath)","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"     * Saves the given {@link ReadOnlyPropertyDirectory} to the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"     * @param propertyDirectory cannot be null.","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    void savePropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"     * @see #savePropertyDirectory(ReadOnlyPropertyDirectory)","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"    void savePropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory, Path filePath) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"lkwlkww":1,"misterpuffin":45}},{"path":"src/main/java/seedu/condonery/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":" * API of the Storage component","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"public interface Storage extends PropertyDirectoryStorage, ClientDirectoryStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    Path getPropertyDirectoryFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    Optional\u003cReadOnlyPropertyDirectory\u003e readPropertyDirectory() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    void savePropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    Path getClientDirectoryFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    Optional\u003cReadOnlyClientDirectory\u003e readClientDirectory() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"    void saveClientDirectory(ReadOnlyClientDirectory clientDirectory) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"lkwlkww":2,"misterpuffin":40}},{"path":"src/main/java/seedu/condonery/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":" * Manages storage of PropertyDirectory data in local storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    private ClientDirectoryStorage clientDirectoryStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"    private PropertyDirectoryStorage propertyDirectoryStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"     * Creates a {@code StorageManager} with the given {@code PropertyDirectoryStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    public StorageManager(PropertyDirectoryStorage propertyDirectoryStorage,","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"                          ClientDirectoryStorage clientDirectoryStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"        this.clientDirectoryStorage \u003d clientDirectoryStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"        this.propertyDirectoryStorage \u003d propertyDirectoryStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PropertyDirectory methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"    public Path getPropertyDirectoryFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"        return propertyDirectoryStorage.getPropertyDirectoryFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    public Optional\u003cReadOnlyPropertyDirectory\u003e readPropertyDirectory() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"        return readPropertyDirectory(propertyDirectoryStorage.getPropertyDirectoryFilePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"    public Optional\u003cReadOnlyPropertyDirectory\u003e readPropertyDirectory(Path filePath)","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"        return propertyDirectoryStorage.readPropertyDirectory(filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"    public void savePropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory) throws IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"        savePropertyDirectory(propertyDirectory, propertyDirectoryStorage.getPropertyDirectoryFilePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"    public void savePropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory, Path filePath) throws IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"        propertyDirectoryStorage.savePropertyDirectory(propertyDirectory, filePath);","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ClientDirectory methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"    public Path getClientDirectoryFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"        return clientDirectoryStorage.getClientDirectoryFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"    public Optional\u003cReadOnlyClientDirectory\u003e readClientDirectory() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"        return readClientDirectory(clientDirectoryStorage.getClientDirectoryFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"    public Optional\u003cReadOnlyClientDirectory\u003e readClientDirectory(Path filePath)","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"        return clientDirectoryStorage.readClientDirectory(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"    public void saveClientDirectory(ReadOnlyClientDirectory clientDirectory) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"        saveClientDirectory(clientDirectory, clientDirectoryStorage.getClientDirectoryFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"    public void saveClientDirectory(ReadOnlyClientDirectory clientDirectory, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"        clientDirectoryStorage.saveClientDirectory(clientDirectory, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"lkwlkww":2,"misterpuffin":110}},{"path":"src/main/java/seedu/condonery/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":" * Represents a storage for {@link seedu.condonery.model.UserPrefs}.","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"     * Saves the given {@link seedu.condonery.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"misterpuffin":6,"-":30}},{"path":"src/main/java/seedu/condonery/ui/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.io.File;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"public class ClientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"    private static final String FXML \u003d \"ClientListCard.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    private static final String DEFAULT_PROPERTY_IMAGE \u003d \"/images/ClientDisplay.png\";","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on PropertyDirectory level 4\u003c/a\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    public final Client client;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"     * Creates a {@code ClientCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"        address.setText(client.getAddress().value);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"        client.getTags().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"        displayPicture.setClip(new Circle(40, 40, 40));","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"        Path imagePath \u003d client.getImagePath();","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"        if (imagePath !\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"            File file \u003d new File(client.getImagePath().toString());","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"            if (file.exists()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"                Image img \u003d new Image(file.toURI().toString());","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"                displayPicture.setImage(img);","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"            } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"                Image img \u003d new Image(this.getClass().getResourceAsStream(DEFAULT_PROPERTY_IMAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"                displayPicture.setImage(img);","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"        if (!(other instanceof ClientCard)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"        ClientCard card \u003d (ClientCard) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"misterpuffin":36,"-":59}},{"path":"src/main/java/seedu/condonery/ui/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":" * Panel containing the list of properties.","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    public ClientListPanel(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"        super(FXML);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"     * Forces re-render of the PropertyListPanel.","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public void refresh() {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        clientListView.refresh();","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Client} using a {@code ClientCard}.","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"    class ClientListViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"                setText(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"            } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"                setGraphic(new ClientCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"misterpuffin":56}},{"path":"src/main/java/seedu/condonery/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"    private List\u003cString\u003e previousCommands;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    private int previousCommandsCount \u003d -1;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    public CommandBox(CommandExecutor commandExecutor, List\u003cString\u003e previousCommands) {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        this.previousCommands \u003d previousCommands;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"            setStyleToDefault();","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"        });","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"        commandTextField.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"            if (event.getCode().equals(KeyCode.UP)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"                setPreviousCommandsCount(previousCommandsCount + 1);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"            } else if (event.getCode().equals(KeyCode.DOWN)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"                setPreviousCommandsCount(previousCommandsCount - 1);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"            } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"                setPreviousCommandsCount(-1);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"        });","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"     * Handles the up arrow keypress to show previous command","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"    private void setPreviousCommandsCount(int i) {","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"        int size \u003d previousCommands.size();","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"        if (i \u003c 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"            previousCommandsCount \u003d -1;","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"        } else if (i \u003e\u003d size) {","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"            previousCommandsCount \u003d size - 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"            previousCommandsCount \u003d i;","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"            commandTextField.setText(previousCommands.get(size - 1 - i));","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"         * @see seedu.condonery.logic.Logic#execute(String)","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"misterpuffin":39,"-":79}},{"path":"src/main/java/seedu/condonery/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.web.WebEngine;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.web.WebView;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103-w14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    private WebView webView;","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"        renderHtml();","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"    private void renderHtml() {","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"            Stream\u003cString\u003e lines \u003d Files.lines(","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"                Paths.get(ClassLoader.getSystemResource(\"html/UserGuide.html\").toURI())","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"            );","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"            WebEngine webEngine \u003d webView.getEngine();","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"            webEngine.loadContent(lines.collect(Collectors.joining(\"\\n\")));","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"            webEngine.setUserStyleSheetLocation(ClassLoader.getSystemResource(\"html/style.css\").toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"        } catch (URISyntaxException | IOException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"            logger.warning(\"User Guide not found!\");","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"misterpuffin":28,"-":99}},{"path":"src/main/java/seedu/condonery/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.io.File;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import javafx.stage.FileChooser;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.Logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    private PropertyListPanel propertyListPanel;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    private final List\u003cString\u003e previousCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"    private StackPane propertyListPanelPlaceholder;","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"lkwlkww"},"content":"        propertyListPanel \u003d new PropertyListPanel(logic.getFilteredPropertyList());","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"        propertyListPanelPlaceholder.getChildren().add(propertyListPanel.getRoot());","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"misterpuffin"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getFilteredClientList());","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"misterpuffin"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"misterpuffin"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPropertyDirectoryFilePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"misterpuffin"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, previousCommands);","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"misterpuffin"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"misterpuffin"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"misterpuffin"},"content":"    public void handleImageUpload(String name) {","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"misterpuffin"},"content":"        FileChooser fileChooser \u003d new FileChooser();","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"misterpuffin"},"content":"        fileChooser.setTitle(\"Upload Image\");","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"misterpuffin"},"content":"        fileChooser.getExtensionFilters().addAll(","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"misterpuffin"},"content":"            new FileChooser.ExtensionFilter(\"All Images\", \"*.png\", \"*.jpg\", \"*.JPG\", \"*.jpeg\", \"*.JPEG\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"misterpuffin"},"content":"            new FileChooser.ExtensionFilter(\"JPG\", \"*.jpg\", \"*.JPG\", \"*.jpeg\", \"*.JPEG\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"misterpuffin"},"content":"            new FileChooser.ExtensionFilter(\"PNG\", \"*.png\")","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"misterpuffin"},"content":"        File file \u003d fileChooser.showOpenDialog(primaryStage);","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"misterpuffin"},"content":"        if (file !\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"misterpuffin"},"content":"            try {","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"misterpuffin"},"content":"                Files.copy(","lastModifiedDate":"2022-10-15"},{"lineNumber":183,"author":{"gitId":"misterpuffin"},"content":"                    Files.newInputStream(file.toPath()),","lastModifiedDate":"2022-10-15"},{"lineNumber":184,"author":{"gitId":"misterpuffin"},"content":"                    logic.getUserImageDirectoryPath().resolve(name),","lastModifiedDate":"2022-10-15"},{"lineNumber":185,"author":{"gitId":"misterpuffin"},"content":"                    StandardCopyOption.REPLACE_EXISTING","lastModifiedDate":"2022-10-15"},{"lineNumber":186,"author":{"gitId":"misterpuffin"},"content":"                );","lastModifiedDate":"2022-10-15"},{"lineNumber":187,"author":{"gitId":"misterpuffin"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2022-10-15"},{"lineNumber":188,"author":{"gitId":"misterpuffin"},"content":"                logger.warning(\"Could not handle file upload: \" + name);","lastModifiedDate":"2022-10-15"},{"lineNumber":189,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":190,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":191,"author":{"gitId":"misterpuffin"},"content":"        propertyListPanel.refresh();","lastModifiedDate":"2022-10-15"},{"lineNumber":192,"author":{"gitId":"misterpuffin"},"content":"        clientListPanel.refresh();","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":194,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":195,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":212,"author":{"gitId":"lkwlkww"},"content":"    public PropertyListPanel getPropertyListPanel() {","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"lkwlkww"},"content":"        return propertyListPanel;","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"misterpuffin"},"content":"     * @see seedu.condonery.logic.Logic#execute(String)","lastModifiedDate":"2022-10-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"misterpuffin"},"content":"            previousCommands.add(commandText);","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"misterpuffin"},"content":"            if (commandResult.isImageUpload()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":237,"author":{"gitId":"misterpuffin"},"content":"                handleImageUpload(commandResult.getImageToUploadName());","lastModifiedDate":"2022-10-15"},{"lineNumber":238,"author":{"gitId":"misterpuffin"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":239,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lkwlkww":6,"misterpuffin":59,"-":182}},{"path":"src/main/java/seedu/condonery/ui/PropertyCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.io.File;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":" * An UI component that displays information of a {@code Property}.","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"public class PropertyCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    private static final String FXML \u003d \"PropertyListCard.fxml\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    private static final String DEFAULT_PROPERTY_IMAGE \u003d \"/images/PropertyDisplay.png\";","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on PropertyDirectory level 4\u003c/a\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"    public final Property property;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"    private Label name;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"    private Label id;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"    private Label address;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"    private Label price;","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"zacchaeuschok"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"    @FXML","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"yuehernkang"},"content":"    private Label propertyType;","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"    private Label propertyStatus;","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"     * Creates a {@code PropertyCode} with the given {@code Property} and index to display.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"    public PropertyCard(Property property, int displayedIndex) {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"        super(FXML);","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"        this.property \u003d property;","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"        name.setText(property.getName().fullName);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"        address.setText(property.getAddress().value);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"zacchaeuschok"},"content":"        price.setText(\"$\" + property.getPrice().value);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"        property.getTags().stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"        displayPicture.setClip(new Circle(40, 40, 40));","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"        propertyType.setText(property.getPropertyTypeEnum().toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"        propertyStatus.setText(property.getPropertyStatusEnum().toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"        Path imagePath \u003d property.getImagePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"        if (imagePath !\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"            File file \u003d new File(property.getImagePath().toString());","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"            if (file.exists()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"                Image img \u003d new Image(file.toURI().toString());","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"                displayPicture.setImage(img);","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"            } else {","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"                Image img \u003d new Image(this.getClass().getResourceAsStream(DEFAULT_PROPERTY_IMAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"                displayPicture.setImage(img);","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"            Image img \u003d new Image(this.getClass().getResourceAsStream(DEFAULT_PROPERTY_IMAGE));","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"            displayPicture.setImage(img);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"lkwlkww"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"lkwlkww"},"content":"        if (!(other instanceof PropertyCard)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"lkwlkww"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"        // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"        PropertyCard card \u003d (PropertyCard) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"lkwlkww"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"lkwlkww"},"content":"                \u0026\u0026 property.equals(card.property);","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lkwlkww":71,"yuehernkang":6,"zacchaeuschok":3,"misterpuffin":22}},{"path":"src/main/java/seedu/condonery/ui/PropertyListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" * Panel containing the list of properties.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"public class PropertyListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    private static final String FXML \u003d \"PropertyListPanel.fxml\";","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PropertyListPanel.class);","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    private ListView\u003cProperty\u003e propertyListView;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     * Creates a {@code PropertyListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"    public PropertyListPanel(ObservableList\u003cProperty\u003e propertyList) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"        super(FXML);","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"        propertyListView.setItems(propertyList);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"        propertyListView.setCellFactory(listView -\u003e new PropertyListViewCell());","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"     * Forces re-render of the PropertyListPanel.","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public void refresh() {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        propertyListView.refresh();","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Property} using a {@code PropertyCard}.","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"    class PropertyListViewCell extends ListCell\u003cProperty\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"        protected void updateItem(Property property, boolean empty) {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"            super.updateItem(property, empty);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"            if (empty || property \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"                setText(null);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"            } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"                setGraphic(new PropertyCard(property, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lkwlkww":49,"misterpuffin":7}},{"path":"src/main/java/seedu/condonery/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"misterpuffin":1,"-":27}},{"path":"src/main/java/seedu/condonery/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":1,"-":27}},{"path":"src/main/java/seedu/condonery/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"misterpuffin":1,"-":12}},{"path":"src/main/java/seedu/condonery/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.MainApp;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.StringUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.Logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"misterpuffin":5,"-":83}},{"path":"src/main/java/seedu/condonery/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.MainApp;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"misterpuffin":2,"-":86}},{"path":"src/main/resources/html/style.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":".highlight .c {","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"    color: #998;","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"    font-style: italic;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":".highlight .err {","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"    color: #a61717;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"    background-color: #e3d2d2;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":".highlight .k {","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":".highlight .o {","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":".highlight .cm {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"    color: #998;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"    font-style: italic;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":".highlight .cp {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"    color: #999;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":".highlight .c1 {","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"    color: #998;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    font-style: italic;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":".highlight .cs {","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    color: #999;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    font-style: italic;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":".highlight .gd {","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    color: #000;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    background-color: #fdd;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":".highlight .gd .x {","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    color: #000;","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    background-color: #faa;","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":".highlight .ge {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    font-style: italic;","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":".highlight .gr {","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"    color: #a00;","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":".highlight .gh {","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"    color: #999;","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":".highlight .gi {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"    color: #000;","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    background-color: #dfd;","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":".highlight .gi .x {","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    color: #000;","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"    background-color: #afa;","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":".highlight .go {","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    color: #888;","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":".highlight .gp {","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    color: #555;","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":".highlight .gs {","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":".highlight .gu {","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    color: #aaa;","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":".highlight .gt {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"    color: #a00;","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":".highlight .kc {","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":".highlight .kd {","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":".highlight .kp {","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":".highlight .kr {","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":".highlight .kt {","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"    color: #458;","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":".highlight .m {","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"    color: #099;","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":".highlight .s {","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"    color: #d14;","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":".highlight .na {","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"    color: teal;","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":".highlight .nb {","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"    color: #0086b3;","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":".highlight .nc {","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"    color: #458;","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":".highlight .no {","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"    color: teal;","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":".highlight .ni {","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"    color: purple;","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":".highlight .ne {","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"    color: #900;","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":".highlight .nf {","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"    color: #900;","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":".highlight .nn {","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"misterpuffin"},"content":"    color: #555;","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"misterpuffin"},"content":".highlight .nt {","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"    color: navy;","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"misterpuffin"},"content":".highlight .nv {","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"misterpuffin"},"content":"    color: teal;","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"misterpuffin"},"content":".highlight .ow {","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"misterpuffin"},"content":"    font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"misterpuffin"},"content":".highlight .w {","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"misterpuffin"},"content":"    color: #bbb;","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"misterpuffin"},"content":".highlight .mf {","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"misterpuffin"},"content":"    color: #099;","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"misterpuffin"},"content":".highlight .mh {","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"misterpuffin"},"content":"    color: #099;","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"misterpuffin"},"content":".highlight .mi {","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"misterpuffin"},"content":"    color: #099;","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"misterpuffin"},"content":".highlight .mo {","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"misterpuffin"},"content":"    color: #099;","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"misterpuffin"},"content":".highlight .sb {","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"misterpuffin"},"content":"    color: #d14;","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"misterpuffin"},"content":".highlight .sc {","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"misterpuffin"},"content":"    color: #d14;","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"misterpuffin"},"content":".highlight .sd {","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"misterpuffin"},"content":"    color: #d14;","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"misterpuffin"},"content":".highlight .s2 {","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"misterpuffin"},"content":"    color: #d14;","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"misterpuffin"},"content":".highlight .se {","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"misterpuffin"},"content":"    color: #d14;","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"misterpuffin"},"content":".highlight .sh {","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"misterpuffin"},"content":"    color: #d14;","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"misterpuffin"},"content":".highlight .si {","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"misterpuffin"},"content":"    color: #d14;","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"misterpuffin"},"content":".highlight .sx {","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"misterpuffin"},"content":"    color: #d14;","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"misterpuffin"},"content":".highlight .sr {","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"misterpuffin"},"content":"    color: #009926;","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"misterpuffin"},"content":".highlight .s1 {","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"misterpuffin"},"content":"    color: #d14;","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"misterpuffin"},"content":".highlight .ss {","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"misterpuffin"},"content":"    color: #990073;","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"misterpuffin"},"content":".highlight .bp {","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"misterpuffin"},"content":"    color: #999;","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"misterpuffin"},"content":".highlight .vc {","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"misterpuffin"},"content":"    color: teal;","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"misterpuffin"},"content":".highlight .vg {","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"misterpuffin"},"content":"    color: teal;","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"misterpuffin"},"content":".highlight .vi {","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"misterpuffin"},"content":"    color: teal;","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"misterpuffin"},"content":".highlight .il {","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"misterpuffin"},"content":"    color: #099;","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"misterpuffin"},"content":"html {","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"misterpuffin"},"content":"    font-size: 16px;","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"misterpuffin"},"content":"body,","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"misterpuffin"},"content":"h1,","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"misterpuffin"},"content":"h2,","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"misterpuffin"},"content":"h3,","lastModifiedDate":"2022-10-28"},{"lineNumber":200,"author":{"gitId":"misterpuffin"},"content":"h4,","lastModifiedDate":"2022-10-28"},{"lineNumber":201,"author":{"gitId":"misterpuffin"},"content":"h5,","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"misterpuffin"},"content":"h6,","lastModifiedDate":"2022-10-28"},{"lineNumber":203,"author":{"gitId":"misterpuffin"},"content":"p,","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"misterpuffin"},"content":"blockquote,","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"misterpuffin"},"content":"pre,","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"misterpuffin"},"content":"hr,","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"misterpuffin"},"content":"dl,","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"misterpuffin"},"content":"dd,","lastModifiedDate":"2022-10-28"},{"lineNumber":209,"author":{"gitId":"misterpuffin"},"content":"ol,","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"misterpuffin"},"content":"ul,","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"misterpuffin"},"content":"figure {","lastModifiedDate":"2022-10-28"},{"lineNumber":212,"author":{"gitId":"misterpuffin"},"content":"    margin: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"misterpuffin"},"content":"    padding: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"misterpuffin"},"content":"body {","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"misterpuffin"},"content":"    font: 400 16px/1.5 -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", \"Apple Color Emoji\", Roboto, Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"misterpuffin"},"content":"    color: #111;","lastModifiedDate":"2022-10-28"},{"lineNumber":218,"author":{"gitId":"misterpuffin"},"content":"    background-color: #fdfdfd;","lastModifiedDate":"2022-10-28"},{"lineNumber":219,"author":{"gitId":"misterpuffin"},"content":"    -webkit-text-size-adjust: 100%;","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"misterpuffin"},"content":"    -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":221,"author":{"gitId":"misterpuffin"},"content":"    -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"misterpuffin"},"content":"    -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":223,"author":{"gitId":"misterpuffin"},"content":"    font-feature-settings: \"kern\" 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":224,"author":{"gitId":"misterpuffin"},"content":"    font-kerning: normal;","lastModifiedDate":"2022-10-28"},{"lineNumber":225,"author":{"gitId":"misterpuffin"},"content":"    display: flex;","lastModifiedDate":"2022-10-28"},{"lineNumber":226,"author":{"gitId":"misterpuffin"},"content":"    min-height: 100vh;","lastModifiedDate":"2022-10-28"},{"lineNumber":227,"author":{"gitId":"misterpuffin"},"content":"    flex-direction: column;","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"misterpuffin"},"content":"    overflow-wrap: break-word;","lastModifiedDate":"2022-10-28"},{"lineNumber":229,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":230,"author":{"gitId":"misterpuffin"},"content":"h1,","lastModifiedDate":"2022-10-28"},{"lineNumber":231,"author":{"gitId":"misterpuffin"},"content":"h2,","lastModifiedDate":"2022-10-28"},{"lineNumber":232,"author":{"gitId":"misterpuffin"},"content":"h3,","lastModifiedDate":"2022-10-28"},{"lineNumber":233,"author":{"gitId":"misterpuffin"},"content":"h4,","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"misterpuffin"},"content":"h5,","lastModifiedDate":"2022-10-28"},{"lineNumber":235,"author":{"gitId":"misterpuffin"},"content":"h6,","lastModifiedDate":"2022-10-28"},{"lineNumber":236,"author":{"gitId":"misterpuffin"},"content":"p,","lastModifiedDate":"2022-10-28"},{"lineNumber":237,"author":{"gitId":"misterpuffin"},"content":"blockquote,","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"misterpuffin"},"content":"pre,","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"misterpuffin"},"content":"ul,","lastModifiedDate":"2022-10-28"},{"lineNumber":240,"author":{"gitId":"misterpuffin"},"content":"ol,","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"misterpuffin"},"content":"dl,","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"misterpuffin"},"content":"figure,","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"misterpuffin"},"content":".highlight {","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 15px;","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"misterpuffin"},"content":"hr {","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"misterpuffin"},"content":"    margin-top: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":248,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":249,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":250,"author":{"gitId":"misterpuffin"},"content":"main {","lastModifiedDate":"2022-10-28"},{"lineNumber":251,"author":{"gitId":"misterpuffin"},"content":"    display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":252,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":253,"author":{"gitId":"misterpuffin"},"content":"img {","lastModifiedDate":"2022-10-28"},{"lineNumber":254,"author":{"gitId":"misterpuffin"},"content":"    max-width: 100%;","lastModifiedDate":"2022-10-28"},{"lineNumber":255,"author":{"gitId":"misterpuffin"},"content":"    vertical-align: middle;","lastModifiedDate":"2022-10-28"},{"lineNumber":256,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":257,"author":{"gitId":"misterpuffin"},"content":"figure \u003e img {","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"misterpuffin"},"content":"    display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":259,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":260,"author":{"gitId":"misterpuffin"},"content":"figcaption {","lastModifiedDate":"2022-10-28"},{"lineNumber":261,"author":{"gitId":"misterpuffin"},"content":"    font-size: 14px;","lastModifiedDate":"2022-10-28"},{"lineNumber":262,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":263,"author":{"gitId":"misterpuffin"},"content":"ul,","lastModifiedDate":"2022-10-28"},{"lineNumber":264,"author":{"gitId":"misterpuffin"},"content":"ol {","lastModifiedDate":"2022-10-28"},{"lineNumber":265,"author":{"gitId":"misterpuffin"},"content":"    margin-left: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":266,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"misterpuffin"},"content":"li \u003e ul,","lastModifiedDate":"2022-10-28"},{"lineNumber":268,"author":{"gitId":"misterpuffin"},"content":"li \u003e ol {","lastModifiedDate":"2022-10-28"},{"lineNumber":269,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":270,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":271,"author":{"gitId":"misterpuffin"},"content":"h1,","lastModifiedDate":"2022-10-28"},{"lineNumber":272,"author":{"gitId":"misterpuffin"},"content":"h2,","lastModifiedDate":"2022-10-28"},{"lineNumber":273,"author":{"gitId":"misterpuffin"},"content":"h3,","lastModifiedDate":"2022-10-28"},{"lineNumber":274,"author":{"gitId":"misterpuffin"},"content":"h4,","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"misterpuffin"},"content":"h5,","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"misterpuffin"},"content":"h6 {","lastModifiedDate":"2022-10-28"},{"lineNumber":277,"author":{"gitId":"misterpuffin"},"content":"    font-weight: 400;","lastModifiedDate":"2022-10-28"},{"lineNumber":278,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":279,"author":{"gitId":"misterpuffin"},"content":"a {","lastModifiedDate":"2022-10-28"},{"lineNumber":280,"author":{"gitId":"misterpuffin"},"content":"    color: #2a7ae2;","lastModifiedDate":"2022-10-28"},{"lineNumber":281,"author":{"gitId":"misterpuffin"},"content":"    text-decoration: none;","lastModifiedDate":"2022-10-28"},{"lineNumber":282,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":283,"author":{"gitId":"misterpuffin"},"content":"a:visited {","lastModifiedDate":"2022-10-28"},{"lineNumber":284,"author":{"gitId":"misterpuffin"},"content":"    color: #1756a9;","lastModifiedDate":"2022-10-28"},{"lineNumber":285,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":286,"author":{"gitId":"misterpuffin"},"content":"a:hover {","lastModifiedDate":"2022-10-28"},{"lineNumber":287,"author":{"gitId":"misterpuffin"},"content":"    color: #111;","lastModifiedDate":"2022-10-28"},{"lineNumber":288,"author":{"gitId":"misterpuffin"},"content":"    text-decoration: underline;","lastModifiedDate":"2022-10-28"},{"lineNumber":289,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":290,"author":{"gitId":"misterpuffin"},"content":".social-media-list a:hover,","lastModifiedDate":"2022-10-28"},{"lineNumber":291,"author":{"gitId":"misterpuffin"},"content":".pagination a:hover {","lastModifiedDate":"2022-10-28"},{"lineNumber":292,"author":{"gitId":"misterpuffin"},"content":"    text-decoration: none;","lastModifiedDate":"2022-10-28"},{"lineNumber":293,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":294,"author":{"gitId":"misterpuffin"},"content":".social-media-list a:hover .username,","lastModifiedDate":"2022-10-28"},{"lineNumber":295,"author":{"gitId":"misterpuffin"},"content":".pagination a:hover .username {","lastModifiedDate":"2022-10-28"},{"lineNumber":296,"author":{"gitId":"misterpuffin"},"content":"    text-decoration: underline;","lastModifiedDate":"2022-10-28"},{"lineNumber":297,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":298,"author":{"gitId":"misterpuffin"},"content":"blockquote {","lastModifiedDate":"2022-10-28"},{"lineNumber":299,"author":{"gitId":"misterpuffin"},"content":"    color: #828282;","lastModifiedDate":"2022-10-28"},{"lineNumber":300,"author":{"gitId":"misterpuffin"},"content":"    border-left: 4px solid #e8e8e8;","lastModifiedDate":"2022-10-28"},{"lineNumber":301,"author":{"gitId":"misterpuffin"},"content":"    padding-left: 15px;","lastModifiedDate":"2022-10-28"},{"lineNumber":302,"author":{"gitId":"misterpuffin"},"content":"    font-size: 1.125rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":303,"author":{"gitId":"misterpuffin"},"content":"    font-style: italic;","lastModifiedDate":"2022-10-28"},{"lineNumber":304,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":305,"author":{"gitId":"misterpuffin"},"content":"blockquote \u003e :last-child {","lastModifiedDate":"2022-10-28"},{"lineNumber":306,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":307,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":308,"author":{"gitId":"misterpuffin"},"content":"blockquote i,","lastModifiedDate":"2022-10-28"},{"lineNumber":309,"author":{"gitId":"misterpuffin"},"content":"blockquote em {","lastModifiedDate":"2022-10-28"},{"lineNumber":310,"author":{"gitId":"misterpuffin"},"content":"    font-style: normal;","lastModifiedDate":"2022-10-28"},{"lineNumber":311,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":312,"author":{"gitId":"misterpuffin"},"content":"pre,","lastModifiedDate":"2022-10-28"},{"lineNumber":313,"author":{"gitId":"misterpuffin"},"content":"code {","lastModifiedDate":"2022-10-28"},{"lineNumber":314,"author":{"gitId":"misterpuffin"},"content":"    font-family: \"Menlo\", \"Inconsolata\", \"Consolas\", \"Roboto Mono\", \"Ubuntu Mono\", \"Liberation Mono\", \"Courier New\", monospace;","lastModifiedDate":"2022-10-28"},{"lineNumber":315,"author":{"gitId":"misterpuffin"},"content":"    font-size: 0.9375em;","lastModifiedDate":"2022-10-28"},{"lineNumber":316,"author":{"gitId":"misterpuffin"},"content":"    border: 1px solid #e8e8e8;","lastModifiedDate":"2022-10-28"},{"lineNumber":317,"author":{"gitId":"misterpuffin"},"content":"    border-radius: 3px;","lastModifiedDate":"2022-10-28"},{"lineNumber":318,"author":{"gitId":"misterpuffin"},"content":"    background-color: #eef;","lastModifiedDate":"2022-10-28"},{"lineNumber":319,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":320,"author":{"gitId":"misterpuffin"},"content":"code {","lastModifiedDate":"2022-10-28"},{"lineNumber":321,"author":{"gitId":"misterpuffin"},"content":"    padding: 1px 5px;","lastModifiedDate":"2022-10-28"},{"lineNumber":322,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":323,"author":{"gitId":"misterpuffin"},"content":"pre {","lastModifiedDate":"2022-10-28"},{"lineNumber":324,"author":{"gitId":"misterpuffin"},"content":"    padding: 8px 12px;","lastModifiedDate":"2022-10-28"},{"lineNumber":325,"author":{"gitId":"misterpuffin"},"content":"    overflow-x: auto;","lastModifiedDate":"2022-10-28"},{"lineNumber":326,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":327,"author":{"gitId":"misterpuffin"},"content":"pre \u003e code {","lastModifiedDate":"2022-10-28"},{"lineNumber":328,"author":{"gitId":"misterpuffin"},"content":"    border: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":329,"author":{"gitId":"misterpuffin"},"content":"    padding-right: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":330,"author":{"gitId":"misterpuffin"},"content":"    padding-left: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":331,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":332,"author":{"gitId":"misterpuffin"},"content":".highlight {","lastModifiedDate":"2022-10-28"},{"lineNumber":333,"author":{"gitId":"misterpuffin"},"content":"    border-radius: 3px;","lastModifiedDate":"2022-10-28"},{"lineNumber":334,"author":{"gitId":"misterpuffin"},"content":"    background: #eef;","lastModifiedDate":"2022-10-28"},{"lineNumber":335,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":336,"author":{"gitId":"misterpuffin"},"content":".highlighter-rouge .highlight {","lastModifiedDate":"2022-10-28"},{"lineNumber":337,"author":{"gitId":"misterpuffin"},"content":"    background: #eef;","lastModifiedDate":"2022-10-28"},{"lineNumber":338,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":339,"author":{"gitId":"misterpuffin"},"content":".wrapper {","lastModifiedDate":"2022-10-28"},{"lineNumber":340,"author":{"gitId":"misterpuffin"},"content":"    max-width: calc(800px - (30px));","lastModifiedDate":"2022-10-28"},{"lineNumber":341,"author":{"gitId":"misterpuffin"},"content":"    margin-right: auto;","lastModifiedDate":"2022-10-28"},{"lineNumber":342,"author":{"gitId":"misterpuffin"},"content":"    margin-left: auto;","lastModifiedDate":"2022-10-28"},{"lineNumber":343,"author":{"gitId":"misterpuffin"},"content":"    padding-right: 15px;","lastModifiedDate":"2022-10-28"},{"lineNumber":344,"author":{"gitId":"misterpuffin"},"content":"    padding-left: 15px;","lastModifiedDate":"2022-10-28"},{"lineNumber":345,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":346,"author":{"gitId":"misterpuffin"},"content":"@media screen and (min-width: 800px) {","lastModifiedDate":"2022-10-28"},{"lineNumber":347,"author":{"gitId":"misterpuffin"},"content":"    .wrapper {","lastModifiedDate":"2022-10-28"},{"lineNumber":348,"author":{"gitId":"misterpuffin"},"content":"        max-width: calc(800px - (30px * 2));","lastModifiedDate":"2022-10-28"},{"lineNumber":349,"author":{"gitId":"misterpuffin"},"content":"        padding-right: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":350,"author":{"gitId":"misterpuffin"},"content":"        padding-left: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":351,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":352,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":353,"author":{"gitId":"misterpuffin"},"content":".wrapper:after {","lastModifiedDate":"2022-10-28"},{"lineNumber":354,"author":{"gitId":"misterpuffin"},"content":"    content: \"\";","lastModifiedDate":"2022-10-28"},{"lineNumber":355,"author":{"gitId":"misterpuffin"},"content":"    display: table;","lastModifiedDate":"2022-10-28"},{"lineNumber":356,"author":{"gitId":"misterpuffin"},"content":"    clear: both;","lastModifiedDate":"2022-10-28"},{"lineNumber":357,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":358,"author":{"gitId":"misterpuffin"},"content":".orange {","lastModifiedDate":"2022-10-28"},{"lineNumber":359,"author":{"gitId":"misterpuffin"},"content":"    color: #f66a0a;","lastModifiedDate":"2022-10-28"},{"lineNumber":360,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":361,"author":{"gitId":"misterpuffin"},"content":".grey {","lastModifiedDate":"2022-10-28"},{"lineNumber":362,"author":{"gitId":"misterpuffin"},"content":"    color: #828282;","lastModifiedDate":"2022-10-28"},{"lineNumber":363,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":364,"author":{"gitId":"misterpuffin"},"content":"table {","lastModifiedDate":"2022-10-28"},{"lineNumber":365,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":366,"author":{"gitId":"misterpuffin"},"content":"    width: 100%;","lastModifiedDate":"2022-10-28"},{"lineNumber":367,"author":{"gitId":"misterpuffin"},"content":"    text-align: left;","lastModifiedDate":"2022-10-28"},{"lineNumber":368,"author":{"gitId":"misterpuffin"},"content":"    color: #3f3f3f;","lastModifiedDate":"2022-10-28"},{"lineNumber":369,"author":{"gitId":"misterpuffin"},"content":"    border-collapse: collapse;","lastModifiedDate":"2022-10-28"},{"lineNumber":370,"author":{"gitId":"misterpuffin"},"content":"    border: 1px solid #e8e8e8;","lastModifiedDate":"2022-10-28"},{"lineNumber":371,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":372,"author":{"gitId":"misterpuffin"},"content":"table tr:nth-child(even) {","lastModifiedDate":"2022-10-28"},{"lineNumber":373,"author":{"gitId":"misterpuffin"},"content":"    background-color: #f7f7f7;","lastModifiedDate":"2022-10-28"},{"lineNumber":374,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":375,"author":{"gitId":"misterpuffin"},"content":"table th,","lastModifiedDate":"2022-10-28"},{"lineNumber":376,"author":{"gitId":"misterpuffin"},"content":"table td {","lastModifiedDate":"2022-10-28"},{"lineNumber":377,"author":{"gitId":"misterpuffin"},"content":"    padding: 10px 15px;","lastModifiedDate":"2022-10-28"},{"lineNumber":378,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":379,"author":{"gitId":"misterpuffin"},"content":"table th {","lastModifiedDate":"2022-10-28"},{"lineNumber":380,"author":{"gitId":"misterpuffin"},"content":"    background-color: #f0f0f0;","lastModifiedDate":"2022-10-28"},{"lineNumber":381,"author":{"gitId":"misterpuffin"},"content":"    border: 1px solid #dedede;","lastModifiedDate":"2022-10-28"},{"lineNumber":382,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":383,"author":{"gitId":"misterpuffin"},"content":"table td {","lastModifiedDate":"2022-10-28"},{"lineNumber":384,"author":{"gitId":"misterpuffin"},"content":"    border: 1px solid #e8e8e8;","lastModifiedDate":"2022-10-28"},{"lineNumber":385,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":386,"author":{"gitId":"misterpuffin"},"content":"@media screen and (max-width: 800px) {","lastModifiedDate":"2022-10-28"},{"lineNumber":387,"author":{"gitId":"misterpuffin"},"content":"    table {","lastModifiedDate":"2022-10-28"},{"lineNumber":388,"author":{"gitId":"misterpuffin"},"content":"        display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":389,"author":{"gitId":"misterpuffin"},"content":"        overflow-x: auto;","lastModifiedDate":"2022-10-28"},{"lineNumber":390,"author":{"gitId":"misterpuffin"},"content":"        -webkit-overflow-scrolling: touch;","lastModifiedDate":"2022-10-28"},{"lineNumber":391,"author":{"gitId":"misterpuffin"},"content":"        -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2022-10-28"},{"lineNumber":392,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":393,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":394,"author":{"gitId":"misterpuffin"},"content":"@media print {","lastModifiedDate":"2022-10-28"},{"lineNumber":395,"author":{"gitId":"misterpuffin"},"content":"    body {","lastModifiedDate":"2022-10-28"},{"lineNumber":396,"author":{"gitId":"misterpuffin"},"content":"        display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":397,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":398,"author":{"gitId":"misterpuffin"},"content":"    .site-header .wrapper {","lastModifiedDate":"2022-10-28"},{"lineNumber":399,"author":{"gitId":"misterpuffin"},"content":"        display: none;","lastModifiedDate":"2022-10-28"},{"lineNumber":400,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":401,"author":{"gitId":"misterpuffin"},"content":"    .site-header {","lastModifiedDate":"2022-10-28"},{"lineNumber":402,"author":{"gitId":"misterpuffin"},"content":"        text-align: center;","lastModifiedDate":"2022-10-28"},{"lineNumber":403,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":404,"author":{"gitId":"misterpuffin"},"content":"    .site-header:before {","lastModifiedDate":"2022-10-28"},{"lineNumber":405,"author":{"gitId":"misterpuffin"},"content":"        content: \"Condonery\";","lastModifiedDate":"2022-10-28"},{"lineNumber":406,"author":{"gitId":"misterpuffin"},"content":"        font-size: 32px;","lastModifiedDate":"2022-10-28"},{"lineNumber":407,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":408,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":409,"author":{"gitId":"misterpuffin"},"content":".site-header {","lastModifiedDate":"2022-10-28"},{"lineNumber":410,"author":{"gitId":"misterpuffin"},"content":"    border-top: 5px solid #424242;","lastModifiedDate":"2022-10-28"},{"lineNumber":411,"author":{"gitId":"misterpuffin"},"content":"    border-bottom: 1px solid #e8e8e8;","lastModifiedDate":"2022-10-28"},{"lineNumber":412,"author":{"gitId":"misterpuffin"},"content":"    min-height: 55.95px;","lastModifiedDate":"2022-10-28"},{"lineNumber":413,"author":{"gitId":"misterpuffin"},"content":"    line-height: 54px;","lastModifiedDate":"2022-10-28"},{"lineNumber":414,"author":{"gitId":"misterpuffin"},"content":"    position: relative;","lastModifiedDate":"2022-10-28"},{"lineNumber":415,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":416,"author":{"gitId":"misterpuffin"},"content":".site-title {","lastModifiedDate":"2022-10-28"},{"lineNumber":417,"author":{"gitId":"misterpuffin"},"content":"    font-size: 1.625rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":418,"author":{"gitId":"misterpuffin"},"content":"    font-weight: 300;","lastModifiedDate":"2022-10-28"},{"lineNumber":419,"author":{"gitId":"misterpuffin"},"content":"    letter-spacing: -1px;","lastModifiedDate":"2022-10-28"},{"lineNumber":420,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":421,"author":{"gitId":"misterpuffin"},"content":"    float: left;","lastModifiedDate":"2022-10-28"},{"lineNumber":422,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":423,"author":{"gitId":"misterpuffin"},"content":"@media screen and (max-width: 600px) {","lastModifiedDate":"2022-10-28"},{"lineNumber":424,"author":{"gitId":"misterpuffin"},"content":"    .site-title {","lastModifiedDate":"2022-10-28"},{"lineNumber":425,"author":{"gitId":"misterpuffin"},"content":"        padding-right: 45px;","lastModifiedDate":"2022-10-28"},{"lineNumber":426,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":427,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":428,"author":{"gitId":"misterpuffin"},"content":".site-title,","lastModifiedDate":"2022-10-28"},{"lineNumber":429,"author":{"gitId":"misterpuffin"},"content":".site-title:visited {","lastModifiedDate":"2022-10-28"},{"lineNumber":430,"author":{"gitId":"misterpuffin"},"content":"    color: #424242;","lastModifiedDate":"2022-10-28"},{"lineNumber":431,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":432,"author":{"gitId":"misterpuffin"},"content":".site-nav {","lastModifiedDate":"2022-10-28"},{"lineNumber":433,"author":{"gitId":"misterpuffin"},"content":"    position: absolute;","lastModifiedDate":"2022-10-28"},{"lineNumber":434,"author":{"gitId":"misterpuffin"},"content":"    top: 9px;","lastModifiedDate":"2022-10-28"},{"lineNumber":435,"author":{"gitId":"misterpuffin"},"content":"    right: 15px;","lastModifiedDate":"2022-10-28"},{"lineNumber":436,"author":{"gitId":"misterpuffin"},"content":"    background-color: #fdfdfd;","lastModifiedDate":"2022-10-28"},{"lineNumber":437,"author":{"gitId":"misterpuffin"},"content":"    border: 1px solid #e8e8e8;","lastModifiedDate":"2022-10-28"},{"lineNumber":438,"author":{"gitId":"misterpuffin"},"content":"    border-radius: 5px;","lastModifiedDate":"2022-10-28"},{"lineNumber":439,"author":{"gitId":"misterpuffin"},"content":"    text-align: right;","lastModifiedDate":"2022-10-28"},{"lineNumber":440,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":441,"author":{"gitId":"misterpuffin"},"content":".site-nav .nav-trigger {","lastModifiedDate":"2022-10-28"},{"lineNumber":442,"author":{"gitId":"misterpuffin"},"content":"    display: none;","lastModifiedDate":"2022-10-28"},{"lineNumber":443,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":444,"author":{"gitId":"misterpuffin"},"content":".site-nav .menu-icon {","lastModifiedDate":"2022-10-28"},{"lineNumber":445,"author":{"gitId":"misterpuffin"},"content":"    float: right;","lastModifiedDate":"2022-10-28"},{"lineNumber":446,"author":{"gitId":"misterpuffin"},"content":"    width: 36px;","lastModifiedDate":"2022-10-28"},{"lineNumber":447,"author":{"gitId":"misterpuffin"},"content":"    height: 26px;","lastModifiedDate":"2022-10-28"},{"lineNumber":448,"author":{"gitId":"misterpuffin"},"content":"    line-height: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":449,"author":{"gitId":"misterpuffin"},"content":"    padding-top: 10px;","lastModifiedDate":"2022-10-28"},{"lineNumber":450,"author":{"gitId":"misterpuffin"},"content":"    text-align: center;","lastModifiedDate":"2022-10-28"},{"lineNumber":451,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":452,"author":{"gitId":"misterpuffin"},"content":".site-nav .menu-icon \u003e svg path {","lastModifiedDate":"2022-10-28"},{"lineNumber":453,"author":{"gitId":"misterpuffin"},"content":"    fill: #424242;","lastModifiedDate":"2022-10-28"},{"lineNumber":454,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":455,"author":{"gitId":"misterpuffin"},"content":".site-nav label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2022-10-28"},{"lineNumber":456,"author":{"gitId":"misterpuffin"},"content":"    display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":457,"author":{"gitId":"misterpuffin"},"content":"    float: right;","lastModifiedDate":"2022-10-28"},{"lineNumber":458,"author":{"gitId":"misterpuffin"},"content":"    width: 36px;","lastModifiedDate":"2022-10-28"},{"lineNumber":459,"author":{"gitId":"misterpuffin"},"content":"    height: 36px;","lastModifiedDate":"2022-10-28"},{"lineNumber":460,"author":{"gitId":"misterpuffin"},"content":"    z-index: 2;","lastModifiedDate":"2022-10-28"},{"lineNumber":461,"author":{"gitId":"misterpuffin"},"content":"    cursor: pointer;","lastModifiedDate":"2022-10-28"},{"lineNumber":462,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":463,"author":{"gitId":"misterpuffin"},"content":".site-nav input ~ .trigger {","lastModifiedDate":"2022-10-28"},{"lineNumber":464,"author":{"gitId":"misterpuffin"},"content":"    clear: both;","lastModifiedDate":"2022-10-28"},{"lineNumber":465,"author":{"gitId":"misterpuffin"},"content":"    display: none;","lastModifiedDate":"2022-10-28"},{"lineNumber":466,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":467,"author":{"gitId":"misterpuffin"},"content":".site-nav input:checked ~ .trigger {","lastModifiedDate":"2022-10-28"},{"lineNumber":468,"author":{"gitId":"misterpuffin"},"content":"    display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":469,"author":{"gitId":"misterpuffin"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2022-10-28"},{"lineNumber":470,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":471,"author":{"gitId":"misterpuffin"},"content":".site-nav .page-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":472,"author":{"gitId":"misterpuffin"},"content":"    color: #111;","lastModifiedDate":"2022-10-28"},{"lineNumber":473,"author":{"gitId":"misterpuffin"},"content":"    line-height: 1.5;","lastModifiedDate":"2022-10-28"},{"lineNumber":474,"author":{"gitId":"misterpuffin"},"content":"    display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":475,"author":{"gitId":"misterpuffin"},"content":"    padding: 5px 10px;","lastModifiedDate":"2022-10-28"},{"lineNumber":476,"author":{"gitId":"misterpuffin"},"content":"    margin-left: 20px;","lastModifiedDate":"2022-10-28"},{"lineNumber":477,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":478,"author":{"gitId":"misterpuffin"},"content":".site-nav .page-link:not(:last-child) {","lastModifiedDate":"2022-10-28"},{"lineNumber":479,"author":{"gitId":"misterpuffin"},"content":"    margin-right: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":480,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":481,"author":{"gitId":"misterpuffin"},"content":"@media screen and (min-width: 600px) {","lastModifiedDate":"2022-10-28"},{"lineNumber":482,"author":{"gitId":"misterpuffin"},"content":"    .site-nav {","lastModifiedDate":"2022-10-28"},{"lineNumber":483,"author":{"gitId":"misterpuffin"},"content":"        position: static;","lastModifiedDate":"2022-10-28"},{"lineNumber":484,"author":{"gitId":"misterpuffin"},"content":"        float: right;","lastModifiedDate":"2022-10-28"},{"lineNumber":485,"author":{"gitId":"misterpuffin"},"content":"        border: none;","lastModifiedDate":"2022-10-28"},{"lineNumber":486,"author":{"gitId":"misterpuffin"},"content":"        background-color: inherit;","lastModifiedDate":"2022-10-28"},{"lineNumber":487,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":488,"author":{"gitId":"misterpuffin"},"content":"    .site-nav label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2022-10-28"},{"lineNumber":489,"author":{"gitId":"misterpuffin"},"content":"        display: none;","lastModifiedDate":"2022-10-28"},{"lineNumber":490,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":491,"author":{"gitId":"misterpuffin"},"content":"    .site-nav .menu-icon {","lastModifiedDate":"2022-10-28"},{"lineNumber":492,"author":{"gitId":"misterpuffin"},"content":"        display: none;","lastModifiedDate":"2022-10-28"},{"lineNumber":493,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":494,"author":{"gitId":"misterpuffin"},"content":"    .site-nav input ~ .trigger {","lastModifiedDate":"2022-10-28"},{"lineNumber":495,"author":{"gitId":"misterpuffin"},"content":"        display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":496,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":497,"author":{"gitId":"misterpuffin"},"content":"    .site-nav .page-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":498,"author":{"gitId":"misterpuffin"},"content":"        display: inline;","lastModifiedDate":"2022-10-28"},{"lineNumber":499,"author":{"gitId":"misterpuffin"},"content":"        padding: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":500,"author":{"gitId":"misterpuffin"},"content":"        margin-left: auto;","lastModifiedDate":"2022-10-28"},{"lineNumber":501,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":502,"author":{"gitId":"misterpuffin"},"content":"    .site-nav .page-link:not(:last-child) {","lastModifiedDate":"2022-10-28"},{"lineNumber":503,"author":{"gitId":"misterpuffin"},"content":"        margin-right: 20px;","lastModifiedDate":"2022-10-28"},{"lineNumber":504,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":505,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":506,"author":{"gitId":"misterpuffin"},"content":".page-content {","lastModifiedDate":"2022-10-28"},{"lineNumber":507,"author":{"gitId":"misterpuffin"},"content":"    padding: 30px 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":508,"author":{"gitId":"misterpuffin"},"content":"    flex: 1 0 auto;","lastModifiedDate":"2022-10-28"},{"lineNumber":509,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":510,"author":{"gitId":"misterpuffin"},"content":".page-heading {","lastModifiedDate":"2022-10-28"},{"lineNumber":511,"author":{"gitId":"misterpuffin"},"content":"    font-size: 2rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":512,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":513,"author":{"gitId":"misterpuffin"},"content":".post-list-heading {","lastModifiedDate":"2022-10-28"},{"lineNumber":514,"author":{"gitId":"misterpuffin"},"content":"    font-size: 1.75rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":515,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":516,"author":{"gitId":"misterpuffin"},"content":".post-list {","lastModifiedDate":"2022-10-28"},{"lineNumber":517,"author":{"gitId":"misterpuffin"},"content":"    margin-left: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":518,"author":{"gitId":"misterpuffin"},"content":"    list-style: none;","lastModifiedDate":"2022-10-28"},{"lineNumber":519,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":520,"author":{"gitId":"misterpuffin"},"content":".post-list \u003e li {","lastModifiedDate":"2022-10-28"},{"lineNumber":521,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":522,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":523,"author":{"gitId":"misterpuffin"},"content":".post-meta {","lastModifiedDate":"2022-10-28"},{"lineNumber":524,"author":{"gitId":"misterpuffin"},"content":"    font-size: 14px;","lastModifiedDate":"2022-10-28"},{"lineNumber":525,"author":{"gitId":"misterpuffin"},"content":"    color: #828282;","lastModifiedDate":"2022-10-28"},{"lineNumber":526,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":527,"author":{"gitId":"misterpuffin"},"content":".post-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":528,"author":{"gitId":"misterpuffin"},"content":"    display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":529,"author":{"gitId":"misterpuffin"},"content":"    font-size: 1.5rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":530,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":531,"author":{"gitId":"misterpuffin"},"content":".post-header {","lastModifiedDate":"2022-10-28"},{"lineNumber":532,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":533,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":534,"author":{"gitId":"misterpuffin"},"content":".post-title,","lastModifiedDate":"2022-10-28"},{"lineNumber":535,"author":{"gitId":"misterpuffin"},"content":".post-content h1 {","lastModifiedDate":"2022-10-28"},{"lineNumber":536,"author":{"gitId":"misterpuffin"},"content":"    font-size: 2.625rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":537,"author":{"gitId":"misterpuffin"},"content":"    letter-spacing: -1px;","lastModifiedDate":"2022-10-28"},{"lineNumber":538,"author":{"gitId":"misterpuffin"},"content":"    line-height: 1.15;","lastModifiedDate":"2022-10-28"},{"lineNumber":539,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":540,"author":{"gitId":"misterpuffin"},"content":"@media screen and (min-width: 800px) {","lastModifiedDate":"2022-10-28"},{"lineNumber":541,"author":{"gitId":"misterpuffin"},"content":"    .post-title,","lastModifiedDate":"2022-10-28"},{"lineNumber":542,"author":{"gitId":"misterpuffin"},"content":"    .post-content h1 {","lastModifiedDate":"2022-10-28"},{"lineNumber":543,"author":{"gitId":"misterpuffin"},"content":"        font-size: 2.625rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":544,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":545,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":546,"author":{"gitId":"misterpuffin"},"content":".post-content {","lastModifiedDate":"2022-10-28"},{"lineNumber":547,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":548,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":549,"author":{"gitId":"misterpuffin"},"content":".post-content h1,","lastModifiedDate":"2022-10-28"},{"lineNumber":550,"author":{"gitId":"misterpuffin"},"content":".post-content h2,","lastModifiedDate":"2022-10-28"},{"lineNumber":551,"author":{"gitId":"misterpuffin"},"content":".post-content h3 {","lastModifiedDate":"2022-10-28"},{"lineNumber":552,"author":{"gitId":"misterpuffin"},"content":"    margin-top: 60px;","lastModifiedDate":"2022-10-28"},{"lineNumber":553,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":554,"author":{"gitId":"misterpuffin"},"content":".post-content h4,","lastModifiedDate":"2022-10-28"},{"lineNumber":555,"author":{"gitId":"misterpuffin"},"content":".post-content h5,","lastModifiedDate":"2022-10-28"},{"lineNumber":556,"author":{"gitId":"misterpuffin"},"content":".post-content h6 {","lastModifiedDate":"2022-10-28"},{"lineNumber":557,"author":{"gitId":"misterpuffin"},"content":"    margin-top: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":558,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":559,"author":{"gitId":"misterpuffin"},"content":".post-content h2 {","lastModifiedDate":"2022-10-28"},{"lineNumber":560,"author":{"gitId":"misterpuffin"},"content":"    font-size: 1.75rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":561,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":562,"author":{"gitId":"misterpuffin"},"content":"@media screen and (min-width: 800px) {","lastModifiedDate":"2022-10-28"},{"lineNumber":563,"author":{"gitId":"misterpuffin"},"content":"    .post-content h2 {","lastModifiedDate":"2022-10-28"},{"lineNumber":564,"author":{"gitId":"misterpuffin"},"content":"        font-size: 2rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":565,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":566,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":567,"author":{"gitId":"misterpuffin"},"content":".post-content h3 {","lastModifiedDate":"2022-10-28"},{"lineNumber":568,"author":{"gitId":"misterpuffin"},"content":"    font-size: 1.375rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":569,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":570,"author":{"gitId":"misterpuffin"},"content":"@media screen and (min-width: 800px) {","lastModifiedDate":"2022-10-28"},{"lineNumber":571,"author":{"gitId":"misterpuffin"},"content":"    .post-content h3 {","lastModifiedDate":"2022-10-28"},{"lineNumber":572,"author":{"gitId":"misterpuffin"},"content":"        font-size: 1.625rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":573,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":574,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":575,"author":{"gitId":"misterpuffin"},"content":".post-content h4 {","lastModifiedDate":"2022-10-28"},{"lineNumber":576,"author":{"gitId":"misterpuffin"},"content":"    font-size: 1.25rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":577,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":578,"author":{"gitId":"misterpuffin"},"content":".post-content h5 {","lastModifiedDate":"2022-10-28"},{"lineNumber":579,"author":{"gitId":"misterpuffin"},"content":"    font-size: 1.125rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":580,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":581,"author":{"gitId":"misterpuffin"},"content":".post-content h6 {","lastModifiedDate":"2022-10-28"},{"lineNumber":582,"author":{"gitId":"misterpuffin"},"content":"    font-size: 1.0625rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":583,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":584,"author":{"gitId":"misterpuffin"},"content":".social-media-list,","lastModifiedDate":"2022-10-28"},{"lineNumber":585,"author":{"gitId":"misterpuffin"},"content":".pagination {","lastModifiedDate":"2022-10-28"},{"lineNumber":586,"author":{"gitId":"misterpuffin"},"content":"    display: table;","lastModifiedDate":"2022-10-28"},{"lineNumber":587,"author":{"gitId":"misterpuffin"},"content":"    margin: 0 auto;","lastModifiedDate":"2022-10-28"},{"lineNumber":588,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":589,"author":{"gitId":"misterpuffin"},"content":".social-media-list li,","lastModifiedDate":"2022-10-28"},{"lineNumber":590,"author":{"gitId":"misterpuffin"},"content":".pagination li {","lastModifiedDate":"2022-10-28"},{"lineNumber":591,"author":{"gitId":"misterpuffin"},"content":"    float: left;","lastModifiedDate":"2022-10-28"},{"lineNumber":592,"author":{"gitId":"misterpuffin"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":593,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":594,"author":{"gitId":"misterpuffin"},"content":".social-media-list li:last-of-type,","lastModifiedDate":"2022-10-28"},{"lineNumber":595,"author":{"gitId":"misterpuffin"},"content":".pagination li:last-of-type {","lastModifiedDate":"2022-10-28"},{"lineNumber":596,"author":{"gitId":"misterpuffin"},"content":"    margin-right: 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":597,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":598,"author":{"gitId":"misterpuffin"},"content":".social-media-list li a,","lastModifiedDate":"2022-10-28"},{"lineNumber":599,"author":{"gitId":"misterpuffin"},"content":".pagination li a {","lastModifiedDate":"2022-10-28"},{"lineNumber":600,"author":{"gitId":"misterpuffin"},"content":"    display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":601,"author":{"gitId":"misterpuffin"},"content":"    padding: 7.5px;","lastModifiedDate":"2022-10-28"},{"lineNumber":602,"author":{"gitId":"misterpuffin"},"content":"    border: 1px solid #e8e8e8;","lastModifiedDate":"2022-10-28"},{"lineNumber":603,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":604,"author":{"gitId":"misterpuffin"},"content":".social-media-list li a:hover,","lastModifiedDate":"2022-10-28"},{"lineNumber":605,"author":{"gitId":"misterpuffin"},"content":".pagination li a:hover {","lastModifiedDate":"2022-10-28"},{"lineNumber":606,"author":{"gitId":"misterpuffin"},"content":"    border-color: #cfcfcf;","lastModifiedDate":"2022-10-28"},{"lineNumber":607,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":608,"author":{"gitId":"misterpuffin"},"content":".pagination {","lastModifiedDate":"2022-10-28"},{"lineNumber":609,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 30px;","lastModifiedDate":"2022-10-28"},{"lineNumber":610,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":611,"author":{"gitId":"misterpuffin"},"content":".pagination li a,","lastModifiedDate":"2022-10-28"},{"lineNumber":612,"author":{"gitId":"misterpuffin"},"content":".pagination li div {","lastModifiedDate":"2022-10-28"},{"lineNumber":613,"author":{"gitId":"misterpuffin"},"content":"    min-width: 41px;","lastModifiedDate":"2022-10-28"},{"lineNumber":614,"author":{"gitId":"misterpuffin"},"content":"    text-align: center;","lastModifiedDate":"2022-10-28"},{"lineNumber":615,"author":{"gitId":"misterpuffin"},"content":"    box-sizing: border-box;","lastModifiedDate":"2022-10-28"},{"lineNumber":616,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":617,"author":{"gitId":"misterpuffin"},"content":".pagination li div {","lastModifiedDate":"2022-10-28"},{"lineNumber":618,"author":{"gitId":"misterpuffin"},"content":"    display: block;","lastModifiedDate":"2022-10-28"},{"lineNumber":619,"author":{"gitId":"misterpuffin"},"content":"    padding: 7.5px;","lastModifiedDate":"2022-10-28"},{"lineNumber":620,"author":{"gitId":"misterpuffin"},"content":"    border: 1px solid transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":621,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":622,"author":{"gitId":"misterpuffin"},"content":".pagination li div.pager-edge {","lastModifiedDate":"2022-10-28"},{"lineNumber":623,"author":{"gitId":"misterpuffin"},"content":"    color: #dbdbdb;","lastModifiedDate":"2022-10-28"},{"lineNumber":624,"author":{"gitId":"misterpuffin"},"content":"    border: 1px dashed;","lastModifiedDate":"2022-10-28"},{"lineNumber":625,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":626,"author":{"gitId":"misterpuffin"},"content":"@media screen and (min-width: 800px) {","lastModifiedDate":"2022-10-28"},{"lineNumber":627,"author":{"gitId":"misterpuffin"},"content":"    .one-half {","lastModifiedDate":"2022-10-28"},{"lineNumber":628,"author":{"gitId":"misterpuffin"},"content":"        width: calc(50% - (30px / 2));","lastModifiedDate":"2022-10-28"},{"lineNumber":629,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":630,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":631,"author":{"gitId":"misterpuffin"},"content":"h2,","lastModifiedDate":"2022-10-28"},{"lineNumber":632,"author":{"gitId":"misterpuffin"},"content":"h3,","lastModifiedDate":"2022-10-28"},{"lineNumber":633,"author":{"gitId":"misterpuffin"},"content":"h4,","lastModifiedDate":"2022-10-28"},{"lineNumber":634,"author":{"gitId":"misterpuffin"},"content":"h5,","lastModifiedDate":"2022-10-28"},{"lineNumber":635,"author":{"gitId":"misterpuffin"},"content":"h6 {","lastModifiedDate":"2022-10-28"},{"lineNumber":636,"author":{"gitId":"misterpuffin"},"content":"    color: #e46c0a;","lastModifiedDate":"2022-10-28"},{"lineNumber":637,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":638,"author":{"gitId":"misterpuffin"},"content":".alert {","lastModifiedDate":"2022-10-28"},{"lineNumber":639,"author":{"gitId":"misterpuffin"},"content":"    position: relative;","lastModifiedDate":"2022-10-28"},{"lineNumber":640,"author":{"gitId":"misterpuffin"},"content":"    padding: 0.75rem 1.25rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":641,"author":{"gitId":"misterpuffin"},"content":"    margin-bottom: 1rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":642,"author":{"gitId":"misterpuffin"},"content":"    border: 1px solid transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":643,"author":{"gitId":"misterpuffin"},"content":"    order-radius: 0.25rem;","lastModifiedDate":"2022-10-28"},{"lineNumber":644,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":645,"author":{"gitId":"misterpuffin"},"content":".alert-heading {","lastModifiedDate":"2022-10-28"},{"lineNumber":646,"author":{"gitId":"misterpuffin"},"content":"    color: inherit;","lastModifiedDate":"2022-10-28"},{"lineNumber":647,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":648,"author":{"gitId":"misterpuffin"},"content":".alert-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":649,"author":{"gitId":"misterpuffin"},"content":"    font-weight: 700;","lastModifiedDate":"2022-10-28"},{"lineNumber":650,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":651,"author":{"gitId":"misterpuffin"},"content":".alert-primary {","lastModifiedDate":"2022-10-28"},{"lineNumber":652,"author":{"gitId":"misterpuffin"},"content":"    color: #073984;","lastModifiedDate":"2022-10-28"},{"lineNumber":653,"author":{"gitId":"misterpuffin"},"content":"    background-image: linear-gradient(180deg, #d6e6ff, #cfe2ff);","lastModifiedDate":"2022-10-28"},{"lineNumber":654,"author":{"gitId":"misterpuffin"},"content":"    border-color: #bbd6fe;","lastModifiedDate":"2022-10-28"},{"lineNumber":655,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":656,"author":{"gitId":"misterpuffin"},"content":".alert-primary .alert-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":657,"author":{"gitId":"misterpuffin"},"content":"    color: #042454;","lastModifiedDate":"2022-10-28"},{"lineNumber":658,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":659,"author":{"gitId":"misterpuffin"},"content":".alert-secondary {","lastModifiedDate":"2022-10-28"},{"lineNumber":660,"author":{"gitId":"misterpuffin"},"content":"    color: #383d41;","lastModifiedDate":"2022-10-28"},{"lineNumber":661,"author":{"gitId":"misterpuffin"},"content":"    background-image: linear-gradient(180deg, #e6e7e9, #e2e3e5);","lastModifiedDate":"2022-10-28"},{"lineNumber":662,"author":{"gitId":"misterpuffin"},"content":"    border-color: #d6d8db;","lastModifiedDate":"2022-10-28"},{"lineNumber":663,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":664,"author":{"gitId":"misterpuffin"},"content":".alert-secondary .alert-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":665,"author":{"gitId":"misterpuffin"},"content":"    color: #202326;","lastModifiedDate":"2022-10-28"},{"lineNumber":666,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":667,"author":{"gitId":"misterpuffin"},"content":".alert-success {","lastModifiedDate":"2022-10-28"},{"lineNumber":668,"author":{"gitId":"misterpuffin"},"content":"    color: #155724;","lastModifiedDate":"2022-10-28"},{"lineNumber":669,"author":{"gitId":"misterpuffin"},"content":"    background-image: linear-gradient(180deg, #daf0e0, #d4edda);","lastModifiedDate":"2022-10-28"},{"lineNumber":670,"author":{"gitId":"misterpuffin"},"content":"    border-color: #c3e6cb;","lastModifiedDate":"2022-10-28"},{"lineNumber":671,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":672,"author":{"gitId":"misterpuffin"},"content":".alert-success .alert-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":673,"author":{"gitId":"misterpuffin"},"content":"    color: #0b2e13;","lastModifiedDate":"2022-10-28"},{"lineNumber":674,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":675,"author":{"gitId":"misterpuffin"},"content":".alert-info {","lastModifiedDate":"2022-10-28"},{"lineNumber":676,"author":{"gitId":"misterpuffin"},"content":"    color: #0c5460;","lastModifiedDate":"2022-10-28"},{"lineNumber":677,"author":{"gitId":"misterpuffin"},"content":"    background-image: linear-gradient(180deg, #d8eff3, #d1ecf1);","lastModifiedDate":"2022-10-28"},{"lineNumber":678,"author":{"gitId":"misterpuffin"},"content":"    border-color: #bee5eb;","lastModifiedDate":"2022-10-28"},{"lineNumber":679,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":680,"author":{"gitId":"misterpuffin"},"content":".alert-info .alert-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":681,"author":{"gitId":"misterpuffin"},"content":"    color: #062c33;","lastModifiedDate":"2022-10-28"},{"lineNumber":682,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":683,"author":{"gitId":"misterpuffin"},"content":".alert-warning {","lastModifiedDate":"2022-10-28"},{"lineNumber":684,"author":{"gitId":"misterpuffin"},"content":"    color: #856404;","lastModifiedDate":"2022-10-28"},{"lineNumber":685,"author":{"gitId":"misterpuffin"},"content":"    background-image: linear-gradient(180deg, #fff5d5, #fff3cd);","lastModifiedDate":"2022-10-28"},{"lineNumber":686,"author":{"gitId":"misterpuffin"},"content":"    border-color: #ffeeba;","lastModifiedDate":"2022-10-28"},{"lineNumber":687,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":688,"author":{"gitId":"misterpuffin"},"content":".alert-warning .alert-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":689,"author":{"gitId":"misterpuffin"},"content":"    color: #533f03;","lastModifiedDate":"2022-10-28"},{"lineNumber":690,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":691,"author":{"gitId":"misterpuffin"},"content":".alert-danger {","lastModifiedDate":"2022-10-28"},{"lineNumber":692,"author":{"gitId":"misterpuffin"},"content":"    color: #721c24;","lastModifiedDate":"2022-10-28"},{"lineNumber":693,"author":{"gitId":"misterpuffin"},"content":"    background-image: linear-gradient(180deg, #f9dde0, #f8d7da);","lastModifiedDate":"2022-10-28"},{"lineNumber":694,"author":{"gitId":"misterpuffin"},"content":"    border-color: #f5c6cb;","lastModifiedDate":"2022-10-28"},{"lineNumber":695,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":696,"author":{"gitId":"misterpuffin"},"content":".alert-danger .alert-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":697,"author":{"gitId":"misterpuffin"},"content":"    color: #491217;","lastModifiedDate":"2022-10-28"},{"lineNumber":698,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":699,"author":{"gitId":"misterpuffin"},"content":".alert-light {","lastModifiedDate":"2022-10-28"},{"lineNumber":700,"author":{"gitId":"misterpuffin"},"content":"    color: #818182;","lastModifiedDate":"2022-10-28"},{"lineNumber":701,"author":{"gitId":"misterpuffin"},"content":"    background-image: linear-gradient(180deg, #fefefe, #fefefe);","lastModifiedDate":"2022-10-28"},{"lineNumber":702,"author":{"gitId":"misterpuffin"},"content":"    border-color: #fdfdfe;","lastModifiedDate":"2022-10-28"},{"lineNumber":703,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":704,"author":{"gitId":"misterpuffin"},"content":".alert-light .alert-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":705,"author":{"gitId":"misterpuffin"},"content":"    color: #686868;","lastModifiedDate":"2022-10-28"},{"lineNumber":706,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":707,"author":{"gitId":"misterpuffin"},"content":".alert-dark {","lastModifiedDate":"2022-10-28"},{"lineNumber":708,"author":{"gitId":"misterpuffin"},"content":"    color: #1b1e21;","lastModifiedDate":"2022-10-28"},{"lineNumber":709,"author":{"gitId":"misterpuffin"},"content":"    background-image: linear-gradient(180deg, #dcdedf, #d6d8d9);","lastModifiedDate":"2022-10-28"},{"lineNumber":710,"author":{"gitId":"misterpuffin"},"content":"    border-color: #c6c8ca;","lastModifiedDate":"2022-10-28"},{"lineNumber":711,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":712,"author":{"gitId":"misterpuffin"},"content":".alert-dark .alert-link {","lastModifiedDate":"2022-10-28"},{"lineNumber":713,"author":{"gitId":"misterpuffin"},"content":"    color: #040505;","lastModifiedDate":"2022-10-28"},{"lineNumber":714,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":715,"author":{"gitId":"misterpuffin"},"content":".icon {","lastModifiedDate":"2022-10-28"},{"lineNumber":716,"author":{"gitId":"misterpuffin"},"content":"    height: 21px;","lastModifiedDate":"2022-10-28"},{"lineNumber":717,"author":{"gitId":"misterpuffin"},"content":"    width: 21px;","lastModifiedDate":"2022-10-28"},{"lineNumber":718,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"misterpuffin":718}},{"path":"src/main/resources/view/ClientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"        \u003cInsets top\u003d\"20\" right\u003d\"20\" left\u003d\"20\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":8,"-":34}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"  \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":1,"-":7}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"\u003c?import javafx.scene.web.WebView?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"\u003cfx:root resizable\u003d\"true\" title\u003d\"Help\"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"              \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                  \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                  \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"              \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"        \u003cWebView fx:id\u003d\"webView\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"                 prefHeight\u003d\"667.0\" prefWidth\u003d\"928.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"misterpuffin":8,"-":45}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"         title\u003d\"Condonery\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"          \u003cVBox fx:id\u003d\"propertyList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"            \u003cStackPane fx:id\u003d\"propertyListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"          \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"            \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yuehernkang":1,"lkwlkww":1,"misterpuffin":11,"-":58}},{"path":"src/main/resources/view/PropertyListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"        \u003cInsets top\u003d\"20\" right\u003d\"20\" left\u003d\"20\" /\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"          \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"        \u003cLabel fx:id\u003d\"price\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$price\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"  \u003cVBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"    \u003cLabel fx:id\u003d\"propertyType\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$propertyType\" textAlignment\u003d\"RIGHT\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"    \u003cLabel fx:id\u003d\"propertyStatus\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$propertyStatus\" textAlignment\u003d\"RIGHT\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lkwlkww":34,"yuehernkang":4,"zacchaeuschok":1,"misterpuffin":8}},{"path":"src/main/resources/view/PropertyListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"  \u003cListView fx:id\u003d\"propertyListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"lkwlkww":8}},{"path":"src/test/java/seedu/condonery/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"        private final Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"misterpuffin":2,"-":56}},{"path":"src/test/java/seedu/condonery/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"misterpuffin":1,"-":26}},{"path":"src/test/java/seedu/condonery/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":2,"-":133}},{"path":"src/test/java/seedu/condonery/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.core.index;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"misterpuffin":2,"-":58}},{"path":"src/test/java/seedu/condonery/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"misterpuffin":2,"-":34}},{"path":"src/test/java/seedu/condonery/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"misterpuffin":3,"-":105}},{"path":"src/test/java/seedu/condonery/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.Config;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"misterpuffin":4,"-":112}},{"path":"src/test/java/seedu/condonery/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":2,"-":21}},{"path":"src/test/java/seedu/condonery/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.TestUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":3,"-":42}},{"path":"src/test/java/seedu/condonery/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"zacchaeuschok"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase((String) null, \"abc\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"zacchaeuschok":1,"misterpuffin":2,"-":140}},{"path":"src/test/java/seedu/condonery/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_ADDRESS_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_NAME_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_PRICE_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_STATUS_DESC_SCOTTS;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_TAGS_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_TYPE_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalProperties.SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.AddPropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.property.ListPropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.storage.JsonClientDirectoryStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.JsonPropertyDirectoryStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.storage.StorageManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        JsonPropertyDirectoryStorage propertyDirectoryStorage \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"            new JsonPropertyDirectoryStorage(temporaryFolder.resolve(\"propertyDirectory.json\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"zacchaeuschok"},"content":"        JsonClientDirectoryStorage clientDirectoryStorage \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"zacchaeuschok"},"content":"            new JsonClientDirectoryStorage(temporaryFolder.resolve(\"clientDirectory.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"zacchaeuschok"},"content":"        StorageManager storage \u003d new StorageManager(propertyDirectoryStorage, clientDirectoryStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"zacchaeuschok"},"content":"        String deleteCommand \u003d \"delete -p 9\";","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"        String listCommand \u003d ListPropertyCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"        assertCommandSuccess(listCommand, ListPropertyCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        // Setup LogicManager with JsonPropertyDirectoryIoExceptionThrowingStub","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"        JsonPropertyDirectoryStorage propertyDirectoryStorage \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"            new JsonPropertyDirectoryIoExceptionThrowingStub(","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"                temporaryFolder.resolve(\"ioExceptionPropertyDirectory.json\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"zacchaeuschok"},"content":"        JsonClientDirectoryStorage clientDirectoryStorage \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"zacchaeuschok"},"content":"                new JsonClientDirectoryIoExceptionThrowingStub(","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"zacchaeuschok"},"content":"                        temporaryFolder.resolve(\"ioExceptionClientDirectory.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"zacchaeuschok"},"content":"        StorageManager storage \u003d new StorageManager(propertyDirectoryStorage, clientDirectoryStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"yuehernkang"},"content":"        String addCommand \u003d AddPropertyCommand.COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_NAME_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_ADDRESS_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_PRICE_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_TAGS_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_STATUS_DESC_SCOTTS","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_TYPE_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"yuehernkang"},"content":"        Property expectedProperty \u003d new PropertyBuilder(SCOTTS).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"        expectedModel.addProperty(expectedProperty);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"zacchaeuschok"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPropertyList().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"zacchaeuschok"},"content":"        Model expectedModel \u003d new ModelManager(model.getPropertyDirectory(),","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"zacchaeuschok"},"content":"                model.getClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"misterpuffin"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"misterpuffin"},"content":"    private static class JsonPropertyDirectoryIoExceptionThrowingStub extends JsonPropertyDirectoryStorage {","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"misterpuffin"},"content":"        private JsonPropertyDirectoryIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"misterpuffin"},"content":"        public void savePropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory, Path filePath)","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"misterpuffin"},"content":"                throws IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"zacchaeuschok"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"zacchaeuschok"},"content":"    private static class JsonClientDirectoryIoExceptionThrowingStub extends JsonClientDirectoryStorage {","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"zacchaeuschok"},"content":"        private JsonClientDirectoryIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"zacchaeuschok"},"content":"            super(filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"zacchaeuschok"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"zacchaeuschok"},"content":"        public void saveClientDirectory(ReadOnlyClientDirectory clientDirectory, Path filePath)","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"zacchaeuschok"},"content":"                throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"zacchaeuschok"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"zacchaeuschok"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yuehernkang":15,"lkwlkww":1,"zacchaeuschok":32,"misterpuffin":33,"-":118}},{"path":"src/test/java/seedu/condonery/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.property.AddPropertyCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    private Model model;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"        model \u003d new ModelManager(getTypicalPropertyDirectory(), getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"    public void execute_newProperty_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"        Property validProperty \u003d new PropertyBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"                model.getPropertyDirectory(), model.getClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"        expectedModel.addProperty(validProperty);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(new AddPropertyCommand(validProperty), model,","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"            String.format(AddPropertyCommand.MESSAGE_SUCCESS + \". No rejected client names.\",","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"                validProperty), expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"    public void execute_duplicateProperty_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"        Property propertyInList \u003d model.getPropertyDirectory().getPropertyList().get(0);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandFailure(","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"zacchaeuschok"},"content":"                new AddPropertyCommand(propertyInList), model, AddPropertyCommand.MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"zacchaeuschok":2,"misterpuffin":46}},{"path":"src/test/java/seedu/condonery/logic/commands/ClearPropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.ClearPropertyCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"public class ClearPropertyCommandTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"    public void execute_emptyPropertyDirectory_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearPropertyCommand(), model,","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"                ClearPropertyCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    public void execute_nonEmptyPropertyDirectory_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"        Model model \u003d new ModelManager(getTypicalPropertyDirectory(), getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"                getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"        expectedModel.setPropertyDirectory(new PropertyDirectory());","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearPropertyCommand(), model,","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"                ClearPropertyCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"lkwlkww":1,"zacchaeuschok":10,"misterpuffin":25}},{"path":"src/test/java/seedu/condonery/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"misterpuffin":1,"-":53}},{"path":"src/test/java/seedu/condonery/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PROPERTY_STATUS;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PROPERTY_TYPE;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.client.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.client.ClientNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.property.PropertyNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"    public static final String CLIENT_VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"    public static final String CLIENT_VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"    public static final String CLIENT_VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"    public static final String CLIENT_VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"    public static final String CLIENT_VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"    public static final String CLIENT_VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"    public static final String CLIENT_VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"    public static final String CLIENT_VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String VALID_PRICE_AMY \u003d \"100000\";","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String VALID_PRICE_BOB \u003d \"100000\";","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"    public static final String CLIENT_VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"    public static final String CLIENT_VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_NAME_SCOTTS \u003d \"SCOTTS SQUARE\";","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_NAME_WHISTLER \u003d \"Whistler Grand\";","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_ADDRESS_SCOTTS \u003d \"8 Scotts Rd, Singapore 228238\";","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_ADDRESS_WHISTLER \u003d \"105 W Coast Vale, Singapore 126757\";","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_TAG_SCOTTS \u003d \"City\";","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_TAG_WHISTLER \u003d \"Central\";","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_PRICE_SCOTTS \u003d \"100000\";","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_PRICE_WHISTLER \u003d \"200000\";","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_STATUS \u003d \"AVAILABLE\";","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_TYPE_SCOTTS \u003d \"HDB\";","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_VALID_TYPE_WHISTLER \u003d \"CONDO\";","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_NAME_DESC_SCOTTS \u003d \" \" + PREFIX_NAME + PROPERTY_VALID_NAME_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_ADDRESS_DESC_SCOTTS \u003d \" \" + PREFIX_ADDRESS + PROPERTY_VALID_ADDRESS_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_TAGS_DESC_SCOTTS \u003d \" \" + PREFIX_TAG + PROPERTY_VALID_TAG_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_PRICE_DESC_SCOTTS \u003d \" \" + PREFIX_PRICE + PROPERTY_VALID_PRICE_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_TYPE_DESC_SCOTTS \u003d \" \" + PREFIX_PROPERTY_TYPE + PROPERTY_VALID_TYPE_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_STATUS_DESC_SCOTTS \u003d \" \" + PREFIX_PROPERTY_STATUS + PROPERTY_VALID_STATUS;","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_NAME_DESC_WHISTLER \u003d \" \" + PREFIX_NAME + PROPERTY_VALID_NAME_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_ADDRESS_DESC_WHISTLER \u003d \" \" + PREFIX_ADDRESS + PROPERTY_VALID_ADDRESS_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_TAGS_DESC_WHISTLER \u003d \" \" + PREFIX_TAG + PROPERTY_VALID_TAG_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_PRICE_DESC_WHISTLER \u003d \" \" + PREFIX_PRICE + PROPERTY_VALID_PRICE_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_TYPE_DESC_WHISTLER \u003d \" \" + PREFIX_PROPERTY_TYPE + PROPERTY_VALID_TYPE_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"yuehernkang"},"content":"    public static final String PROPERTY_STATUS_DESC_WHISTLER \u003d \" \" + PREFIX_PROPERTY_STATUS + PROPERTY_VALID_STATUS;","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"yuehernkang"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + CLIENT_VALID_NAME_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"yuehernkang"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + CLIENT_VALID_NAME_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"yuehernkang"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + CLIENT_VALID_PHONE_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + CLIENT_VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"yuehernkang"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + CLIENT_VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"yuehernkang"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + CLIENT_VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String PRICE_DESC_AMY \u003d \" \" + PREFIX_PRICE + VALID_PRICE_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String PRICE_DESC_BOB \u003d \" \" + PREFIX_PRICE + VALID_PRICE_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"yuehernkang"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + CLIENT_VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"yuehernkang"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + CLIENT_VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String INVALID_PRICE_DESC \u003d \" \" + PREFIX_PRICE; // empty string not allowed for price","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"yuehernkang"},"content":"    public static final EditPropertyDescriptor PROPERTY_DESC_SCOTTS;","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"yuehernkang"},"content":"    public static final EditPropertyDescriptor PROPERTY_DESC_WHISTLER;","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"yuehernkang"},"content":"    public static final EditClientDescriptor CLIENT_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"yuehernkang"},"content":"    public static final EditClientDescriptor CLIENT_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"yuehernkang"},"content":"        PROPERTY_DESC_SCOTTS \u003d new EditPropertyDescriptorBuilder()","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"yuehernkang"},"content":"                .withName(PROPERTY_VALID_NAME_SCOTTS)","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"yuehernkang"},"content":"                .withAddress(PROPERTY_VALID_ADDRESS_SCOTTS)","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"yuehernkang"},"content":"                .withPrice(PROPERTY_VALID_PRICE_SCOTTS)","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"yuehernkang"},"content":"                .withPropertyTypeEnum(PROPERTY_VALID_TYPE_SCOTTS)","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"yuehernkang"},"content":"                .withTags(PROPERTY_VALID_TAG_SCOTTS)","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"yuehernkang"},"content":"                .build();","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"yuehernkang"},"content":"        PROPERTY_DESC_WHISTLER \u003d new EditPropertyDescriptorBuilder()","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"yuehernkang"},"content":"                .withName(PROPERTY_VALID_NAME_WHISTLER)","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"yuehernkang"},"content":"                .withAddress(PROPERTY_VALID_ADDRESS_WHISTLER)","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"yuehernkang"},"content":"                .withPrice(PROPERTY_VALID_PRICE_WHISTLER)","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"yuehernkang"},"content":"                .withPropertyTypeEnum(PROPERTY_VALID_TYPE_WHISTLER)","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"yuehernkang"},"content":"                .withTags(PROPERTY_VALID_TAG_WHISTLER).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"yuehernkang"},"content":"        CLIENT_DESC_AMY \u003d new EditClientDescriptorBuilder()","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"yuehernkang"},"content":"                .withName(CLIENT_VALID_NAME_AMY)","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"yuehernkang"},"content":"                .withAddress(CLIENT_VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"yuehernkang"},"content":"                .withTags(CLIENT_VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"yuehernkang"},"content":"        CLIENT_DESC_BOB \u003d new EditClientDescriptorBuilder()","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"yuehernkang"},"content":"                .withName(CLIENT_VALID_NAME_BOB)","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"yuehernkang"},"content":"                .withAddress(CLIENT_VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"yuehernkang"},"content":"                .withTags(CLIENT_VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"yuehernkang"},"content":"        PropertyDirectory expectedPropertyDirectory \u003d new PropertyDirectory(actualModel.getPropertyDirectory(),","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"yuehernkang"},"content":"                actualModel.getPropertyDirectoryFilePath());","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"misterpuffin"},"content":"        List\u003cProperty\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPropertyList());","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":163,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(expectedPropertyDirectory, actualModel.getPropertyDirectory());","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"zacchaeuschok"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPropertyList());","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"yuehernkang"},"content":"     * Updates {@code model}\u0027s filtered list to show only the {@code Property} at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"misterpuffin"},"content":"    public static void showPropertyAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-09"},{"lineNumber":172,"author":{"gitId":"zacchaeuschok"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPropertyList().size());","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"misterpuffin"},"content":"        Property person \u003d model.getFilteredPropertyList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"yuehernkang"},"content":"        model.updateFilteredPropertyList(new PropertyNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":178,"author":{"gitId":"zacchaeuschok"},"content":"        assertEquals(1, model.getFilteredPropertyList().size());","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":182,"author":{"gitId":"yuehernkang"},"content":"     * Updates {@code model}\u0027s filtered list to show only the {@code Client} at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-19"},{"lineNumber":183,"author":{"gitId":"yuehernkang"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-19"},{"lineNumber":184,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"yuehernkang"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-19"},{"lineNumber":186,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2022-10-19"},{"lineNumber":187,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":188,"author":{"gitId":"yuehernkang"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":189,"author":{"gitId":"yuehernkang"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"yuehernkang"},"content":"        model.updateFilteredClientList(new ClientNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":192,"author":{"gitId":"yuehernkang"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2022-10-19"},{"lineNumber":193,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yuehernkang":96,"lkwlkww":1,"zacchaeuschok":9,"misterpuffin":15,"-":74}},{"path":"src/test/java/seedu/condonery/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"misterpuffin":19}},{"path":"src/test/java/seedu/condonery/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"    public void execute_help_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"misterpuffin":19}},{"path":"src/test/java/seedu/condonery/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.property.ListPropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"        model \u003d new ModelManager(getTypicalPropertyDirectory(), getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"        expectedModel \u003d new ModelManager(model.getPropertyDirectory(), model.getClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"        CommandTestUtil.assertCommandSuccess(new ListPropertyCommand(), model,","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"                ListPropertyCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showPropertyAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"        CommandTestUtil.assertCommandSuccess(new ListPropertyCommand(), model,","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"                ListPropertyCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yuehernkang":2,"zacchaeuschok":4,"misterpuffin":9,"-":26}},{"path":"src/test/java/seedu/condonery/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.ClientDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.TypicalProperties;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for UndoCommandTest.","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"public class UndoCommandTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    private final Model model \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"    public void execute_undoEditedProperty_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"        Property originalProperty \u003d TypicalProperties.PINNACLE;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"        Property editedProperty \u003d new PropertyBuilder(originalProperty).withName(\"Bob\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder(editedProperty).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"        EditPropertyCommand editCommand \u003d new EditPropertyCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"        Path imageDirectoryPath \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"        Model expectedEditModel \u003d new ModelManager(","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(model.getPropertyDirectory(), imageDirectoryPath),","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"            new ClientDirectory(model.getClientDirectory(), imageDirectoryPath),","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"            new UserPrefs()","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"        Model expectedUndoModel \u003d new ModelManager(","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(model.getPropertyDirectory(), imageDirectoryPath),","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"            new ClientDirectory(model.getClientDirectory(), imageDirectoryPath),","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"            new UserPrefs()","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"        String expectedEditMessage \u003d String.format(EditPropertyCommand.MESSAGE_EDIT_PROPERTY_SUCCESS, editedProperty);","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"        String expectedUndoMessage \u003d UndoCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        expectedEditModel.setProperty(model.getFilteredPropertyList().get(0), editedProperty);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedEditMessage, expectedEditModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"        model.addCommand(editCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(undoCommand, model, expectedUndoMessage, expectedUndoModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"lkwlkww":1,"misterpuffin":61}},{"path":"src/test/java/seedu/condonery/logic/commands/client/DeleteClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"public class DeleteClientCommandTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"    private final Model model \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"        DeleteClientCommand deleteCommand \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"        String expectedMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPropertyDirectory(),","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"                model.getClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"        DeleteClientCommand deleteCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"yuehernkang"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"        DeleteClientCommand deleteCommand \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"        String expectedMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"        Model expectedModel \u003d new ModelManager(model.getPropertyDirectory(),","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"                model.getClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"        showNoClient(expectedModel);","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getClientDirectory().getClientList().size());","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"yuehernkang"},"content":"        DeleteClientCommand deleteCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"    public void equals() {","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"yuehernkang"},"content":"        DeleteClientCommand deleteFirstCommand \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"yuehernkang"},"content":"        DeleteClientCommand deleteSecondCommand \u003d new DeleteClientCommand(INDEX_SECOND);","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"yuehernkang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"yuehernkang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"yuehernkang"},"content":"        DeleteClientCommand deleteFirstCommandCopy \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"yuehernkang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"yuehernkang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"yuehernkang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"yuehernkang"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"yuehernkang"},"content":"    private void showNoClient(Model model) {","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"yuehernkang"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yuehernkang":107,"zacchaeuschok":2}},{"path":"src/test/java/seedu/condonery/logic/commands/client/EditClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.client.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.ClearPropertyCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.ClientDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.testutil.ClientBuilder;","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditClientCommand.","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"public class EditClientCommandTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"    private final Model model \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"        EditClientCommand editCommand \u003d new EditClientCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"        Path userImageDirectory \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(model.getPropertyDirectory(), userImageDirectory),","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"            new ClientDirectory(model.getClientDirectory(), userImageDirectory),","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"            new UserPrefs()","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"        ClientBuilder personInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"        Client editedPerson \u003d personInList.withName(CommandTestUtil.CLIENT_VALID_NAME_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"                .withTags(CommandTestUtil.CLIENT_VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder()","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"                .withName(CommandTestUtil.CLIENT_VALID_NAME_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"                .withTags(CommandTestUtil.CLIENT_VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"                .build();","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"        EditClientCommand editCommand \u003d new EditClientCommand(indexLastClient, descriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"yuehernkang"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"        Path userImageDirectory \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(model.getPropertyDirectory(), userImageDirectory),","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"            new ClientDirectory(model.getClientDirectory(), userImageDirectory),","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"            new UserPrefs()","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"yuehernkang"},"content":"        expectedModel.setClient(lastClient, editedPerson);","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"yuehernkang"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"yuehernkang"},"content":"        EditClientCommand editCommand \u003d new EditClientCommand(INDEX_FIRST, new EditClientDescriptor());","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"yuehernkang"},"content":"        Client editedPerson \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"yuehernkang"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"        Path userImageDirectory \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(model.getPropertyDirectory(), model.getUserPrefs().getUserImageDirectoryPath()),","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"            new ClientDirectory(model.getClientDirectory(), userImageDirectory),","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"            new UserPrefs()","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"yuehernkang"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showPropertyAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"yuehernkang"},"content":"        Client personInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"yuehernkang"},"content":"        Client editedPerson \u003d new ClientBuilder(personInFilteredList)","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"yuehernkang"},"content":"                .withName(CommandTestUtil.CLIENT_VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"yuehernkang"},"content":"        EditClientCommand editCommand \u003d new EditClientCommand(INDEX_FIRST,","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"yuehernkang"},"content":"                new EditClientDescriptorBuilder().withName(CommandTestUtil.CLIENT_VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"yuehernkang"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"        Path userImageDirectory \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-22"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(model.getPropertyDirectory(), model.getUserPrefs().getUserImageDirectoryPath()),","lastModifiedDate":"2022-10-22"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"            new ClientDirectory(model.getClientDirectory(), userImageDirectory),","lastModifiedDate":"2022-10-22"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"            new UserPrefs()","lastModifiedDate":"2022-10-22"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-22"},{"lineNumber":119,"author":{"gitId":"yuehernkang"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedPerson);","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"yuehernkang"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"yuehernkang"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"yuehernkang"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"yuehernkang"},"content":"        EditClientCommand editCommand \u003d new EditClientCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":130,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"yuehernkang"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showPropertyAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"yuehernkang"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"yuehernkang"},"content":"        Client clientInList \u003d model.getClientDirectory().getClientList()","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"yuehernkang"},"content":"                .get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":140,"author":{"gitId":"yuehernkang"},"content":"        EditClientCommand editCommand \u003d new EditClientCommand(INDEX_FIRST,","lastModifiedDate":"2022-10-19"},{"lineNumber":141,"author":{"gitId":"yuehernkang"},"content":"                new EditClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":145,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":146,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"yuehernkang"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"yuehernkang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPropertyList().size() + 1);","lastModifiedDate":"2022-10-19"},{"lineNumber":149,"author":{"gitId":"yuehernkang"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder()","lastModifiedDate":"2022-10-19"},{"lineNumber":150,"author":{"gitId":"yuehernkang"},"content":"                .withName(CommandTestUtil.CLIENT_VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":151,"author":{"gitId":"yuehernkang"},"content":"        EditClientCommand editCommand \u003d new EditClientCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":152,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":153,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-19"},{"lineNumber":154,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"yuehernkang"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"yuehernkang"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"yuehernkang"},"content":"    public void execute_invalidClientIndexFilteredList_failure() {","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showPropertyAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"yuehernkang"},"content":"        Index outOfBoundIndex \u003d Index.fromZeroBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"yuehernkang"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-19"},{"lineNumber":165,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getClientDirectory().getClientList().size() + 1);","lastModifiedDate":"2022-10-19"},{"lineNumber":166,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":167,"author":{"gitId":"yuehernkang"},"content":"        EditClientCommand editCommand \u003d new EditClientCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-19"},{"lineNumber":168,"author":{"gitId":"yuehernkang"},"content":"                new EditClientDescriptorBuilder().withName(CommandTestUtil.CLIENT_VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-19"},{"lineNumber":169,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":174,"author":{"gitId":"yuehernkang"},"content":"    public void equals() {","lastModifiedDate":"2022-10-19"},{"lineNumber":175,"author":{"gitId":"yuehernkang"},"content":"        final EditClientCommand standardCommand \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":176,"author":{"gitId":"yuehernkang"},"content":"                new EditClientCommand(INDEX_FIRST, CLIENT_DESC_AMY);","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":178,"author":{"gitId":"yuehernkang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":179,"author":{"gitId":"yuehernkang"},"content":"        EditClientDescriptor copyDescriptor \u003d new EditClientDescriptor(CLIENT_DESC_AMY);","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"yuehernkang"},"content":"        EditClientCommand commandWithSameValues \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"yuehernkang"},"content":"                new EditClientCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":182,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(standardCommand.getEditClientDescriptor()","lastModifiedDate":"2022-10-19"},{"lineNumber":183,"author":{"gitId":"yuehernkang"},"content":"                .equals(commandWithSameValues.getEditClientDescriptor()));","lastModifiedDate":"2022-10-19"},{"lineNumber":184,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"yuehernkang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":186,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-19"},{"lineNumber":187,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":188,"author":{"gitId":"yuehernkang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":189,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"yuehernkang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":192,"author":{"gitId":"zacchaeuschok"},"content":"        assertFalse(standardCommand.equals(new ClearPropertyCommand()));","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"yuehernkang"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":195,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(standardCommand.equals(new EditClientCommand(INDEX_SECOND, CLIENT_DESC_AMY)));","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"yuehernkang"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":198,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(standardCommand.equals(new EditClientCommand(INDEX_FIRST, CLIENT_DESC_BOB)));","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":200,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":201,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yuehernkang":169,"lkwlkww":1,"zacchaeuschok":4,"misterpuffin":27}},{"path":"src/test/java/seedu/condonery/logic/commands/client/FindClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.client;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalClients.CARL_CLIENT;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalClients.ELLE_CLIENT;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalClients.FIONA_CLIENT;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.client.ClientNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"public class FindClientCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"    private final Model model \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"        ClientNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"                new ClientNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"        ClientNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"                new ClientNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"zacchaeuschok"},"content":"        FindClientCommand findFirstCommand \u003d new FindClientCommand(firstPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"        FindClientCommand findSecondCommand \u003d new FindClientCommand(secondPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"zacchaeuschok"},"content":"        FindClientCommand findFirstCommandCopy \u003d new FindClientCommand(firstPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    public void execute_zeroKeywords_noPropertyFound() {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"zacchaeuschok"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"zacchaeuschok"},"content":"        ClientNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"zacchaeuschok"},"content":"        FindClientCommand command \u003d new FindClientCommand(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"zacchaeuschok"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"zacchaeuschok"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"zacchaeuschok"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"zacchaeuschok"},"content":"        ClientNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"zacchaeuschok"},"content":"        FindClientCommand command \u003d new FindClientCommand(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"zacchaeuschok"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"zacchaeuschok"},"content":"        assertEquals(Arrays.asList(CARL_CLIENT, ELLE_CLIENT, FIONA_CLIENT), model.getFilteredClientList());","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"zacchaeuschok"},"content":"    private ClientNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"zacchaeuschok"},"content":"        return new ClientNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zacchaeuschok":32,"misterpuffin":7,"-":47}},{"path":"src/test/java/seedu/condonery/logic/commands/property/AddPropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.CommandQueue;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.ReadOnlyClientDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"public class AddPropertyCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public void constructor_nullProperty_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPropertyCommand(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"        ModelStubAcceptingPropertyAdded modelStub \u003d new ModelStubAcceptingPropertyAdded();","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"        Property validProperty \u003d new PropertyBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"        CommandResult commandResult \u003d new AddPropertyCommand(validProperty).execute(modelStub);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"            String.format(AddPropertyCommand.MESSAGE_SUCCESS + \". No rejected client names.\", validProperty),","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(Arrays.asList(validProperty), modelStub.propertiesAdded);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"    public void execute_duplicateProperty_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"        Property validProperty \u003d new PropertyBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        AddPropertyCommand addCommand \u003d new AddPropertyCommand(validProperty);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        ModelStub modelStub \u003d new ModelStubWithProperty(validProperty);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"                AddPropertyCommand.MESSAGE_DUPLICATE_PROPERTY, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"        Property alice \u003d new PropertyBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"        Property bob \u003d new PropertyBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"        AddPropertyCommand addAliceCommand \u003d new AddPropertyCommand(alice);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"        AddPropertyCommand addBobCommand \u003d new AddPropertyCommand(bob);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"        AddPropertyCommand addAliceCommandCopy \u003d new AddPropertyCommand(alice);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"        public Path getPropertyDirectoryFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"        public void setPropertyDirectoryFilePath(Path propertyDirectoryFilePath) {","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"misterpuffin"},"content":"        public void addProperty(Property property) {","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"misterpuffin"},"content":"        public void setPropertyDirectory(ReadOnlyPropertyDirectory newData) {","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"misterpuffin"},"content":"        public void resetPropertyDirectory() {","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"misterpuffin"},"content":"        public ReadOnlyPropertyDirectory getPropertyDirectory() {","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"misterpuffin"},"content":"        public boolean hasProperty(Property person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"misterpuffin"},"content":"        public void deleteProperty(Property target) {","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"misterpuffin"},"content":"        public void setProperty(Property target, Property editedPerson) {","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"misterpuffin"},"content":"        public ObservableList\u003cProperty\u003e getFilteredPropertyList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"misterpuffin"},"content":"        public void updateFilteredPropertyList(Predicate\u003cProperty\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"misterpuffin"},"content":"        public Path getClientDirectoryFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"misterpuffin"},"content":"        public void setClientDirectoryFilePath(Path propertyDirectoryFilePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"misterpuffin"},"content":"        public void addClient(Client property) {","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"misterpuffin"},"content":"        public void setClientDirectory(ReadOnlyClientDirectory newData) {","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":186,"author":{"gitId":"misterpuffin"},"content":"        public void resetClientDirectory() {","lastModifiedDate":"2022-10-19"},{"lineNumber":187,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":188,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":189,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"misterpuffin"},"content":"        public ReadOnlyClientDirectory getClientDirectory() {","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"misterpuffin"},"content":"        public boolean hasClient(Client person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"misterpuffin"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"misterpuffin"},"content":"        public void setClient(Client target, Client editedPerson) {","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":211,"author":{"gitId":"misterpuffin"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"misterpuffin"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":217,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"misterpuffin"},"content":"        public void addCommand(Command cmd) {","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"misterpuffin"},"content":"        public CommandQueue getCommandQueue() {","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":230,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":231,"author":{"gitId":"misterpuffin"},"content":"        public boolean hasClientName(String clientName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":232,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":233,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":235,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":236,"author":{"gitId":"misterpuffin"},"content":"        public boolean hasUniqueClientName(String clientName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":237,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":240,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"misterpuffin"},"content":"        public Client getUniqueClientByName(String clientName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"lkwlkww"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"lkwlkww"},"content":"        public boolean hasPropertyName(String propertyName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"lkwlkww"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":248,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":249,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":250,"author":{"gitId":"lkwlkww"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":251,"author":{"gitId":"lkwlkww"},"content":"        public boolean hasUniquePropertyName(String propertyName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":252,"author":{"gitId":"lkwlkww"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":253,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":254,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":255,"author":{"gitId":"lkwlkww"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":256,"author":{"gitId":"lkwlkww"},"content":"        public Property getUniquePropertyByName(String propertyName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":257,"author":{"gitId":"lkwlkww"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"misterpuffin"},"content":"    private class ModelStubWithProperty extends ModelStub {","lastModifiedDate":"2022-10-09"},{"lineNumber":265,"author":{"gitId":"misterpuffin"},"content":"        private final Property property;","lastModifiedDate":"2022-10-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":267,"author":{"gitId":"misterpuffin"},"content":"        ModelStubWithProperty(Property property) {","lastModifiedDate":"2022-10-09"},{"lineNumber":268,"author":{"gitId":"misterpuffin"},"content":"            requireNonNull(property);","lastModifiedDate":"2022-10-09"},{"lineNumber":269,"author":{"gitId":"misterpuffin"},"content":"            this.property \u003d property;","lastModifiedDate":"2022-10-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"misterpuffin"},"content":"        public boolean hasProperty(Property property) {","lastModifiedDate":"2022-10-09"},{"lineNumber":274,"author":{"gitId":"misterpuffin"},"content":"            requireNonNull(property);","lastModifiedDate":"2022-10-09"},{"lineNumber":275,"author":{"gitId":"misterpuffin"},"content":"            return this.property.isSameProperty(property);","lastModifiedDate":"2022-10-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"misterpuffin"},"content":"    private class ModelStubAcceptingPropertyAdded extends ModelStub {","lastModifiedDate":"2022-10-09"},{"lineNumber":283,"author":{"gitId":"misterpuffin"},"content":"        final ArrayList\u003cProperty\u003e propertiesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":286,"author":{"gitId":"misterpuffin"},"content":"        public boolean hasProperty(Property property) {","lastModifiedDate":"2022-10-09"},{"lineNumber":287,"author":{"gitId":"misterpuffin"},"content":"            requireNonNull(property);","lastModifiedDate":"2022-10-09"},{"lineNumber":288,"author":{"gitId":"misterpuffin"},"content":"            return propertiesAdded.stream().anyMatch(property::isSameProperty);","lastModifiedDate":"2022-10-09"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":292,"author":{"gitId":"misterpuffin"},"content":"        public void addProperty(Property property) {","lastModifiedDate":"2022-10-09"},{"lineNumber":293,"author":{"gitId":"misterpuffin"},"content":"            requireNonNull(property);","lastModifiedDate":"2022-10-09"},{"lineNumber":294,"author":{"gitId":"misterpuffin"},"content":"            propertiesAdded.add(property);","lastModifiedDate":"2022-10-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":298,"author":{"gitId":"misterpuffin"},"content":"        public ReadOnlyPropertyDirectory getPropertyDirectory() {","lastModifiedDate":"2022-10-04"},{"lineNumber":299,"author":{"gitId":"misterpuffin"},"content":"            return new PropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":301,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":302,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":303,"author":{"gitId":"misterpuffin"},"content":"        public UserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-15"},{"lineNumber":304,"author":{"gitId":"misterpuffin"},"content":"            return new UserPrefs();","lastModifiedDate":"2022-10-15"},{"lineNumber":305,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"lkwlkww":17,"zacchaeuschok":2,"misterpuffin":151,"-":138}},{"path":"src/test/java/seedu/condonery/logic/commands/property/DeletePropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"public class DeletePropertyCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"    private final Model model \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"        Property propertyToDelete \u003d model.getFilteredPropertyList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PROPERTY_SUCCESS, propertyToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPropertyDirectory(),","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"                model.getClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"        expectedModel.deleteProperty(propertyToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"zacchaeuschok"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPropertyList().size() + 1);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showPropertyAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"        Property propertyToDelete \u003d model.getFilteredPropertyList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PROPERTY_SUCCESS, propertyToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"zacchaeuschok"},"content":"        Model expectedModel \u003d new ModelManager(model.getPropertyDirectory(),","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"zacchaeuschok"},"content":"                model.getClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"        expectedModel.deleteProperty(propertyToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"        showNoProperty(expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showPropertyAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"yuehernkang"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPropertyDirectory().getPropertyList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"yuehernkang"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"yuehernkang"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND);","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"yuehernkang"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"    private void showNoProperty(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"        model.updateFilteredPropertyList(p -\u003e false);","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"zacchaeuschok"},"content":"        assertTrue(model.getFilteredPropertyList().isEmpty());","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yuehernkang":13,"zacchaeuschok":12,"misterpuffin":19,"-":68}},{"path":"src/test/java/seedu/condonery/logic/commands/property/EditPropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.ClientDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPropertyCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"public class EditPropertyCommandTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"    private final Model model \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"        Property editedProperty \u003d new PropertyBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder(editedProperty).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand editCommand \u003d new EditPropertyCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"        String expectedMessage \u003d String.format(EditPropertyCommand.MESSAGE_EDIT_PROPERTY_SUCCESS, editedProperty);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"        Path imageDirectoryPath \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(model.getPropertyDirectory(), imageDirectoryPath),","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"            new ClientDirectory(model.getClientDirectory(), imageDirectoryPath), new UserPrefs()","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"        expectedModel.setProperty(model.getFilteredPropertyList().get(0), editedProperty);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        Index indexLastProperty \u003d Index.fromOneBased(model.getFilteredPropertyList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        Property lastProperty \u003d model.getFilteredPropertyList().get(indexLastProperty.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"        PropertyBuilder personInList \u003d new PropertyBuilder(lastProperty);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"        Property editedPerson \u003d personInList.withName(CommandTestUtil.CLIENT_VALID_NAME_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"            .withTags(CommandTestUtil.CLIENT_VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyDescriptor descriptor \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"                new EditPropertyDescriptorBuilder()","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"                        .withName(CommandTestUtil.CLIENT_VALID_NAME_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"                        .withTags(CommandTestUtil.CLIENT_VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"                        .build();","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand editCommand \u003d new EditPropertyCommand(indexLastProperty, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"        String expectedMessage \u003d String.format(EditPropertyCommand.MESSAGE_EDIT_PROPERTY_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"        Path userImageDirectory \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(model.getPropertyDirectory(), userImageDirectory),","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"            new ClientDirectory(model.getClientDirectory(), userImageDirectory), new UserPrefs()","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"        expectedModel.setProperty(lastProperty, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand editCommand \u003d new EditPropertyCommand(INDEX_FIRST, new EditPropertyDescriptor());","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"yuehernkang"},"content":"        Property editedPerson \u003d model.getFilteredPropertyList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"yuehernkang"},"content":"        String expectedMessage \u003d String.format(EditPropertyCommand.MESSAGE_EDIT_PROPERTY_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"        Path userImageDirectory \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(model.getPropertyDirectory(), userImageDirectory),","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"            new ClientDirectory(model.getClientDirectory(), userImageDirectory), new UserPrefs()","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showPropertyAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"yuehernkang"},"content":"        Property personInFilteredList \u003d model.getFilteredPropertyList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"        Property editedPerson \u003d new PropertyBuilder(personInFilteredList)","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"yuehernkang"},"content":"                .withName(CommandTestUtil.CLIENT_VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand editCommand \u003d new EditPropertyCommand(INDEX_FIRST,","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"yuehernkang"},"content":"            new EditPropertyDescriptorBuilder().withName(CommandTestUtil.CLIENT_VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"yuehernkang"},"content":"        String expectedMessage \u003d String.format(EditPropertyCommand.MESSAGE_EDIT_PROPERTY_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"        Path userImageDirectory \u003d model.getUserPrefs().getUserImageDirectoryPath();","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(model.getPropertyDirectory(), userImageDirectory),","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"            new ClientDirectory(model.getClientDirectory(), userImageDirectory), new UserPrefs()","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"        expectedModel.setProperty(model.getFilteredPropertyList().get(0), editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"yuehernkang"},"content":"        Property firstPerson \u003d model.getFilteredPropertyList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand editCommand \u003d new EditPropertyCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditPropertyCommand.MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showPropertyAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"misterpuffin"},"content":"        Property propertyInList \u003d model.getPropertyDirectory().getPropertyList()","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"yuehernkang"},"content":"                .get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand editCommand \u003d new EditPropertyCommand(INDEX_FIRST,","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"misterpuffin"},"content":"            new EditPropertyDescriptorBuilder(propertyInList).build());","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditPropertyCommand.MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"zacchaeuschok"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPropertyList().size() + 1);","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"misterpuffin"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"yuehernkang"},"content":"                .withName(CommandTestUtil.CLIENT_VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":146,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand editCommand \u003d new EditPropertyCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"yuehernkang"},"content":"        CommandTestUtil.showPropertyAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"yuehernkang"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"misterpuffin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPropertyDirectory().getPropertyList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand editCommand \u003d new EditPropertyCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"yuehernkang"},"content":"            new EditPropertyDescriptorBuilder().withName(CommandTestUtil.CLIENT_VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"yuehernkang"},"content":"        final EditPropertyCommand standardCommand \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"yuehernkang"},"content":"                new EditPropertyCommand(INDEX_FIRST, CommandTestUtil.PROPERTY_DESC_SCOTTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyDescriptor copyDescriptor \u003d new EditPropertyDescriptor(CommandTestUtil.PROPERTY_DESC_SCOTTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":175,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand commandWithSameValues \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"yuehernkang"},"content":"                new EditPropertyCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":177,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(standardCommand.getEditPropertyDescriptor()","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"yuehernkang"},"content":"                .equals(commandWithSameValues.getEditPropertyDescriptor()));","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"zacchaeuschok"},"content":"        assertFalse(standardCommand.equals(new ClearPropertyCommand()));","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(standardCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"yuehernkang"},"content":"                .equals(new EditPropertyCommand(INDEX_SECOND, CommandTestUtil.PROPERTY_DESC_SCOTTS)));","lastModifiedDate":"2022-10-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(standardCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":195,"author":{"gitId":"yuehernkang"},"content":"                .equals(new EditPropertyCommand(INDEX_FIRST, CommandTestUtil.PROPERTY_DESC_WHISTLER)));","lastModifiedDate":"2022-10-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"yuehernkang":49,"lkwlkww":1,"zacchaeuschok":11,"misterpuffin":48,"-":89}},{"path":"src/test/java/seedu/condonery/logic/commands/property/EditPropertyDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_DESC_SCOTTS;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_DESC_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_ADDRESS_WHISTLER;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_NAME_WHISTLER;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_TAG_WHISTLER;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"public class EditPropertyDescriptorTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyDescriptor descriptorWithSameValues \u003d new EditPropertyDescriptor(PROPERTY_DESC_SCOTTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(PROPERTY_DESC_SCOTTS.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(PROPERTY_DESC_SCOTTS.equals(PROPERTY_DESC_SCOTTS));","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(PROPERTY_DESC_SCOTTS.equals(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(PROPERTY_DESC_SCOTTS.equals(5));","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(PROPERTY_DESC_SCOTTS.equals(PROPERTY_DESC_WHISTLER));","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyDescriptor editedScottsProperty \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"                new EditPropertyDescriptorBuilder(PROPERTY_DESC_SCOTTS)","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"                        .withName(PROPERTY_VALID_NAME_WHISTLER)","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"                        .build();","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(PROPERTY_DESC_SCOTTS.equals(editedScottsProperty));","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"        editedScottsProperty \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"                new EditPropertyDescriptorBuilder(PROPERTY_DESC_SCOTTS)","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"                        .withAddress(PROPERTY_VALID_ADDRESS_WHISTLER)","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"                        .build();","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(PROPERTY_DESC_SCOTTS.equals(editedScottsProperty));","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"        editedScottsProperty \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"                new EditPropertyDescriptorBuilder(PROPERTY_DESC_SCOTTS)","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"                .withTags(PROPERTY_VALID_TAG_WHISTLER)","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"                .build();","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(PROPERTY_DESC_SCOTTS.equals(editedScottsProperty));","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yuehernkang":28,"zacchaeuschok":1,"misterpuffin":2,"-":26}},{"path":"src/test/java/seedu/condonery/logic/commands/property/FindPropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_PROPERTIES_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.CARL;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.ELLE;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.FIONA;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"public class FindPropertyCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"    private final Model model \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"        PropertyNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"            new PropertyNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"        PropertyNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"            new PropertyNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"zacchaeuschok"},"content":"        FindPropertyCommand findFirstCommand \u003d new FindPropertyCommand(firstPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"        FindPropertyCommand findSecondCommand \u003d new FindPropertyCommand(secondPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"zacchaeuschok"},"content":"        FindPropertyCommand findFirstCommandCopy \u003d new FindPropertyCommand(firstPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    public void execute_zeroKeywords_noPropertyFound() {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROPERTIES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"zacchaeuschok"},"content":"        PropertyNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"zacchaeuschok"},"content":"        FindPropertyCommand command \u003d new FindPropertyCommand(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"        expectedModel.updateFilteredPropertyList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"zacchaeuschok"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPropertyList());","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROPERTIES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"zacchaeuschok"},"content":"        PropertyNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"zacchaeuschok"},"content":"        FindPropertyCommand command \u003d new FindPropertyCommand(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"        expectedModel.updateFilteredPropertyList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"zacchaeuschok"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPropertyList());","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"zacchaeuschok"},"content":"    private PropertyNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"zacchaeuschok"},"content":"        return new PropertyNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zacchaeuschok":24,"misterpuffin":15,"-":47}},{"path":"src/test/java/seedu/condonery/logic/commands/property/RangePropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.commands.property;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_PROPERTIES_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalClients.getTypicalClientDirectory;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalProperties.CARL;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalProperties.OASIS;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalProperties.PINNACLE;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyPriceWithinRangePredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"public class RangePropertyCommandTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"    private final Model model \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalPropertyDirectory(),","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"            getTypicalClientDirectory(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"zacchaeuschok"},"content":"    public void equals() {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"        PropertyPriceWithinRangePredicate firstPredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"                new PropertyPriceWithinRangePredicate(1000000, 1999999);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"        PropertyPriceWithinRangePredicate secondPredicate \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"                new PropertyPriceWithinRangePredicate(2000000, 2999999);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"        RangePropertyCommand rangeFirstCommand \u003d new RangePropertyCommand(firstPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"zacchaeuschok"},"content":"        RangePropertyCommand rangeSecondCommand \u003d new RangePropertyCommand(secondPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"        assertTrue(rangeFirstCommand.equals(rangeFirstCommand));","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"zacchaeuschok"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"zacchaeuschok"},"content":"        RangePropertyCommand rangeFirstCommandCopy \u003d new RangePropertyCommand(firstPredicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"zacchaeuschok"},"content":"        assertTrue(rangeFirstCommand.equals(rangeFirstCommandCopy));","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"zacchaeuschok"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"zacchaeuschok"},"content":"        assertFalse(rangeFirstCommand.equals(1));","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"zacchaeuschok"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"zacchaeuschok"},"content":"        assertFalse(rangeFirstCommand.equals(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"zacchaeuschok"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"zacchaeuschok"},"content":"        assertFalse(rangeFirstCommand.equals(rangeSecondCommand));","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"zacchaeuschok"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"zacchaeuschok"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"zacchaeuschok"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROPERTIES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"zacchaeuschok"},"content":"        PropertyPriceWithinRangePredicate predicate \u003d preparePredicate(1000000, 3000000);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"zacchaeuschok"},"content":"        RangePropertyCommand command \u003d new RangePropertyCommand(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"zacchaeuschok"},"content":"        expectedModel.updateFilteredPropertyList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"zacchaeuschok"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"zacchaeuschok"},"content":"        assertEquals(Arrays.asList(PINNACLE, OASIS, CARL), model.getFilteredPropertyList());","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"zacchaeuschok"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"zacchaeuschok"},"content":"    private PropertyPriceWithinRangePredicate preparePredicate(int lower, int upper) {","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"zacchaeuschok"},"content":"        return new PropertyPriceWithinRangePredicate(lower, upper);","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"zacchaeuschok"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"zacchaeuschok":75}},{"path":"src/test/java/seedu/condonery/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"misterpuffin":1,"-":149}},{"path":"src/test/java/seedu/condonery/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"            System.out.println(command);","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"            System.out.println(expectedCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"            System.out.println(command.equals(expectedCommand));","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"yuehernkang":3,"misterpuffin":3,"-":36}},{"path":"src/test/java/seedu/condonery/logic/parser/CondoneryParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.client.FindClientCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.property.AddPropertyCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.ClearPropertyCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.DeletePropertyCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.FindPropertyCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.ListPropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.client.ClientNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PropertyUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"public class CondoneryParserTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    private final CondoneryParser parser \u003d new CondoneryParser();","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"    public void parseCommand_addProperty() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"        Property property \u003d new PropertyBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"        AddPropertyCommand command \u003d (AddPropertyCommand) parser.parseCommand(PropertyUtil.getAddCommand(property));","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(new AddPropertyCommand(property), command);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"zacchaeuschok"},"content":"        assertTrue(parser.parseCommand(ClearPropertyCommand.COMMAND_WORD) instanceof ClearPropertyCommand);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"zacchaeuschok"},"content":"        assertTrue(parser.parseCommand(ClearPropertyCommand.COMMAND_WORD + \" 3\") instanceof ClearPropertyCommand);","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"zacchaeuschok"},"content":"    public void parseCommand_deleteProperty() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"zacchaeuschok"},"content":"        DeletePropertyCommand command \u003d (DeletePropertyCommand) parser.parseCommand(","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"            DeletePropertyCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"        assertEquals(new DeletePropertyCommand(INDEX_FIRST), command);","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"zacchaeuschok"},"content":"    public void parseCommand_editProperty() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"        Property property \u003d new PropertyBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder(property).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand command \u003d (EditPropertyCommand) parser.parseCommand(EditPropertyCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"            + INDEX_FIRST.getOneBased() + \" \" + PropertyUtil.getEditPropertyDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"        assertEquals(new EditPropertyCommand(INDEX_FIRST, descriptor).getEditPropertyDescriptor(),","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"                command.getEditPropertyDescriptor());","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"zacchaeuschok"},"content":"    public void parseCommand_findProperty() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"zacchaeuschok"},"content":"        FindPropertyCommand command \u003d (FindPropertyCommand) parser.parseCommand(","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"zacchaeuschok"},"content":"            FindPropertyCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"zacchaeuschok"},"content":"        assertEquals(new FindPropertyCommand(new PropertyNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"zacchaeuschok"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"zacchaeuschok"},"content":"    public void parseCommand_findClient() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"zacchaeuschok"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"zacchaeuschok"},"content":"        FindClientCommand command \u003d (FindClientCommand) parser.parseCommand(","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"zacchaeuschok"},"content":"                FindClientCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"zacchaeuschok"},"content":"        assertEquals(new FindClientCommand(new ClientNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"zacchaeuschok"},"content":"    public void parseCommand_listProperty() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"        assertTrue(parser.parseCommand(ListPropertyCommand.COMMAND_WORD) instanceof ListPropertyCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"        assertTrue(parser.parseCommand(ListPropertyCommand.COMMAND_WORD + \" 3\") instanceof ListPropertyCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yuehernkang":10,"zacchaeuschok":25,"misterpuffin":21,"-":56}},{"path":"src/test/java/seedu/condonery/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    private static final String INVALID_NAME \u003d \"R*chel\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"yuehernkang"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"yuehernkang":3,"zacchaeuschok":3,"misterpuffin":7,"-":131}},{"path":"src/test/java/seedu/condonery/logic/parser/client/FindClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.client;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.client.FindClientCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.client.ClientNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"public class FindClientCommandParserTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"    private final FindClientCommandParser parser \u003d new FindClientCommandParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"                FindClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"        FindClientCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"                new FindClientCommand(new ClientNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"zacchaeuschok":9,"misterpuffin":3,"-":23}},{"path":"src/test/java/seedu/condonery/logic/parser/property/AddPropertyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_NAME_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PRICE_DESC_BOB;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_ADDRESS_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_ADDRESS_DESC_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_NAME_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_NAME_DESC_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_PRICE_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_PRICE_DESC_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_STATUS_DESC_SCOTTS;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_TAGS_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_TAGS_DESC_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_TYPE_DESC_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_TYPE_DESC_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_TAG_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_TAG_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.VALID_PRICE_BOB;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalProperties.SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalProperties.WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.AddPropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"public class AddPropertyCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"    private final AddPropertyCommandParser parser \u003d new AddPropertyCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"        Property expectedProperty \u003d new PropertyBuilder(SCOTTS).withTags(PROPERTY_VALID_TAG_SCOTTS).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"yuehernkang"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PROPERTY_NAME_DESC_SCOTTS + PROPERTY_PRICE_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"            + PROPERTY_ADDRESS_DESC_SCOTTS + PROPERTY_TAGS_DESC_SCOTTS + PROPERTY_TYPE_DESC_SCOTTS","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_STATUS_DESC_SCOTTS,","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"                new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"        assertParseSuccess(parser, PROPERTY_NAME_DESC_SCOTTS + PROPERTY_NAME_DESC_WHISTLER","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_NAME_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_PRICE_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_ADDRESS_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_TAGS_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_STATUS_DESC_SCOTTS","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_TYPE_DESC_SCOTTS, new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"        assertParseSuccess(parser, PROPERTY_NAME_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_ADDRESS_DESC_WHISTLER","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_ADDRESS_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_TAGS_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_PRICE_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_TYPE_DESC_SCOTTS","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_STATUS_DESC_SCOTTS, new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"yuehernkang"},"content":"        Property expectedPropertyMultipleTags \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"yuehernkang"},"content":"                new PropertyBuilder(WHISTLER).withTags(PROPERTY_VALID_TAG_WHISTLER, PROPERTY_VALID_TAG_SCOTTS).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"yuehernkang"},"content":"        assertParseSuccess(parser, PROPERTY_NAME_DESC_WHISTLER","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_ADDRESS_DESC_WHISTLER","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_PRICE_DESC_WHISTLER","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_TAGS_DESC_WHISTLER","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_TYPE_DESC_WHISTLER","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_TAGS_DESC_SCOTTS","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_STATUS_DESC_SCOTTS, new AddPropertyCommand(expectedPropertyMultipleTags));","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"        // zero tags","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"yuehernkang"},"content":"        Property expectedProperty \u003d new PropertyBuilder(SCOTTS).withTags().build();","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"yuehernkang"},"content":"        assertParseSuccess(parser, PROPERTY_NAME_DESC_SCOTTS + PROPERTY_ADDRESS_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"yuehernkang"},"content":"                        + PROPERTY_PRICE_DESC_SCOTTS + PROPERTY_TYPE_DESC_SCOTTS","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"yuehernkang"},"content":"                        + PROPERTY_STATUS_DESC_SCOTTS,","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"zacchaeuschok"},"content":"            new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"zacchaeuschok"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPropertyCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"        // missing name prefix","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"zacchaeuschok"},"content":"        assertParseFailure(parser, CLIENT_VALID_NAME_BOB + ADDRESS_DESC_BOB + PRICE_DESC_BOB,","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"            expectedMessage);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"        // missing address prefix","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"zacchaeuschok"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CLIENT_VALID_ADDRESS_BOB + PRICE_DESC_BOB,","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"zacchaeuschok"},"content":"            expectedMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"zacchaeuschok"},"content":"        // missing price prefix","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"zacchaeuschok"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ADDRESS_DESC_BOB + VALID_PRICE_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"        // all prefixes missing","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"zacchaeuschok"},"content":"        assertParseFailure(parser, CLIENT_VALID_NAME_BOB + CLIENT_VALID_ADDRESS_BOB + VALID_PRICE_BOB,","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"            expectedMessage);","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":"        // invalid name","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"yuehernkang"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PROPERTY_ADDRESS_DESC_SCOTTS + PROPERTY_PRICE_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"yuehernkang"},"content":"            + PROPERTY_TAGS_DESC_SCOTTS + PROPERTY_TYPE_DESC_SCOTTS, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"        // invalid address","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"yuehernkang"},"content":"        assertParseFailure(parser, PROPERTY_NAME_DESC_SCOTTS + INVALID_ADDRESS_DESC + PROPERTY_PRICE_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"yuehernkang"},"content":"            + PROPERTY_TAGS_DESC_SCOTTS + PROPERTY_TYPE_DESC_SCOTTS, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"misterpuffin"},"content":"        // invalid tag","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"yuehernkang"},"content":"        assertParseFailure(parser, PROPERTY_NAME_DESC_SCOTTS + PROPERTY_ADDRESS_DESC_SCOTTS + PROPERTY_PRICE_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"yuehernkang"},"content":"            + INVALID_TAG_DESC + PROPERTY_TYPE_DESC_SCOTTS, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"misterpuffin"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"yuehernkang"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_ADDRESS_DESC + PROPERTY_PRICE_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"yuehernkang"},"content":"                        + PROPERTY_TAGS_DESC_SCOTTS + PROPERTY_TYPE_DESC_SCOTTS,","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"misterpuffin"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"misterpuffin"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"yuehernkang"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + PROPERTY_NAME_DESC_SCOTTS","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"yuehernkang"},"content":"                + PROPERTY_ADDRESS_DESC_SCOTTS + PROPERTY_PRICE_DESC_SCOTTS + PROPERTY_TAGS_DESC_SCOTTS,","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"zacchaeuschok"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"yuehernkang":59,"zacchaeuschok":25,"misterpuffin":56}},{"path":"src/test/java/seedu/condonery/logic/parser/property/DeletePropertyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.parser.DeleteCommandParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"public class DeletePropertyCommandParserTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"    private final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST));","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"yuehernkang":2,"zacchaeuschok":3,"misterpuffin":5,"-":23}},{"path":"src/test/java/seedu/condonery/logic/parser/property/EditPropertyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_NAME_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_NAME_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"public class EditPropertyCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPropertyCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"    private final EditPropertyCommandParser parser \u003d new EditPropertyCommandParser();","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"        assertParseFailure(parser, CLIENT_VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"        assertParseFailure(parser, \"1\", EditPropertyCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"zacchaeuschok"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"yuehernkang"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"zacchaeuschok"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"zacchaeuschok"},"content":"                + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder().withName(CLIENT_VALID_NAME_AMY)","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"yuehernkang"},"content":"            .withAddress(CLIENT_VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"yuehernkang"},"content":"            .withTags(CLIENT_VALID_TAG_HUSBAND, CLIENT_VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"yuehernkang"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"zacchaeuschok"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder().withName(CLIENT_VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"yuehernkang"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":119,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder().withName(CLIENT_VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"yuehernkang"},"content":"        descriptor \u003d new EditPropertyDescriptorBuilder().withAddress(CLIENT_VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"yuehernkang"},"content":"        expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"yuehernkang"},"content":"        descriptor \u003d new EditPropertyDescriptorBuilder().withTags(CLIENT_VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"yuehernkang"},"content":"        expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"yuehernkang"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"zacchaeuschok"},"content":"        String userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"zacchaeuschok"},"content":"            + TAG_DESC_FRIEND + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"zacchaeuschok"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"misterpuffin"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"yuehernkang"},"content":"            .withAddress(CLIENT_VALID_ADDRESS_BOB).withTags(CLIENT_VALID_TAG_FRIEND, CLIENT_VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"yuehernkang"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"zacchaeuschok"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC + NAME_DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder().withName(CLIENT_VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"zacchaeuschok"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC + ADDRESS_DESC_BOB + NAME_DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"yuehernkang"},"content":"        descriptor \u003d new EditPropertyDescriptorBuilder().withName(CLIENT_VALID_NAME_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"yuehernkang"},"content":"            .withAddress(CLIENT_VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"yuehernkang"},"content":"        expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"yuehernkang"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"misterpuffin"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"yuehernkang"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"yuehernkang":41,"zacchaeuschok":22,"misterpuffin":10,"-":104}},{"path":"src/test/java/seedu/condonery/logic/parser/property/FindPropertyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zacchaeuschok"},"content":"package seedu.condonery.logic.parser.property;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.logic.commands.property.FindPropertyCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"public class FindPropertyCommandParserTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"zacchaeuschok"},"content":"    private final FindPropertyCommandParser parser \u003d new FindPropertyCommandParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"                FindPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"zacchaeuschok"},"content":"        FindPropertyCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"            new FindPropertyCommand(new PropertyNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"zacchaeuschok":9,"misterpuffin":3,"-":23}},{"path":"src/test/java/seedu/condonery/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.OASIS;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.PINNACLE;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.ClientDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.PropertyNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PropertyDirectoryBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(),","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectory(","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"                modelManager.getPropertyDirectory(),","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"                modelManager.getUserPrefs().getUserImageDirectoryPath()","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"            )","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"        userPrefs.setPropertyDirectoryFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        userPrefs.setPropertyDirectoryFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"    public void setPropertyDirectoryFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPropertyDirectoryFilePath(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"    public void setPropertyDirectoryFilePath_validPath_setsPropertyDirectoryFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        modelManager.setPropertyDirectoryFilePath(path);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(path, modelManager.getPropertyDirectoryFilePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"    public void hasProperty_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasProperty(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"    public void hasProperty_propertyNotInPropertyDirectory_returnsFalse() {","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"        assertFalse(modelManager.hasProperty(PINNACLE));","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"    public void hasProperty_propertyInPropertyDirectory_returnsTrue() {","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"        modelManager.addProperty(PINNACLE);","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"        assertTrue(modelManager.hasProperty(PINNACLE));","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"    public void getFilteredPropertyList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"zacchaeuschok"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPropertyList().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectory propertyDirectory \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"            new PropertyDirectoryBuilder().withProperty(PINNACLE).withProperty(OASIS).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"zacchaeuschok"},"content":"        ClientDirectory clientDirectory \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"zacchaeuschok"},"content":"            new ClientDirectory(); // to create new ClientDirectoryBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectory differentPropertyDirectory \u003d new PropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"zacchaeuschok"},"content":"        modelManager \u003d new ModelManager(propertyDirectory, clientDirectory, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"zacchaeuschok"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(propertyDirectory, clientDirectory, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"misterpuffin"},"content":"        // different propertyDirectory -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"zacchaeuschok"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPropertyDirectory, clientDirectory, userPrefs)));","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"misterpuffin"},"content":"        String[] keywords \u003d PINNACLE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"zacchaeuschok"},"content":"        modelManager.updateFilteredPropertyList(new PropertyNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"zacchaeuschok"},"content":"        assertFalse(modelManager.equals(new ModelManager(propertyDirectory, clientDirectory, userPrefs)));","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"misterpuffin"},"content":"        modelManager.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"misterpuffin"},"content":"        differentUserPrefs.setPropertyDirectoryFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"zacchaeuschok"},"content":"        assertFalse(modelManager.equals(new ModelManager(propertyDirectory, clientDirectory, differentUserPrefs)));","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"lkwlkww":1,"zacchaeuschok":10,"misterpuffin":37,"-":95}},{"path":"src/test/java/seedu/condonery/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"    public void setPropertyDirectoryFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPropertyDirectoryFilePath(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"misterpuffin":4,"-":17}},{"path":"src/test/java/seedu/condonery/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.model.client;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_NAME_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalClients.ALICE_CLIENT;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.TypicalClients.BOB_CLIENT;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.testutil.ClientBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"public class ClientTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Client(null, null, null, null));","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"    public void isSameClient() {","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(ALICE_CLIENT.isSameClient(ALICE_CLIENT));","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(ALICE_CLIENT.isSameClient(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"        Client editedAlice \u003d new ClientBuilder().withName(\"Alice\")","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"                .withAddress(CLIENT_VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"                .withTags(\"tag1\", \"tag2\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(ALICE_CLIENT.isSameClient(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"        editedAlice \u003d new ClientBuilder().withName(CLIENT_VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(ALICE_CLIENT.isSameClient(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"        Client editedBob \u003d new ClientBuilder().withName(CLIENT_VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(BOB_CLIENT.isSameClient(editedBob));","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"        String nameWithTrailingSpaces \u003d CLIENT_VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"        editedBob \u003d new ClientBuilder(BOB_CLIENT).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(BOB_CLIENT.isSameClient(editedBob));","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"yuehernkang":49,"lkwlkww":1}},{"path":"src/test/java/seedu/condonery/model/fields/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.model.fields;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"public class AddressTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new seedu.condonery.model.person.Address(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.condonery.model.person.Address(invalidAddress));","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"    public void isValidAddress() {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"        // null address","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.condonery.model.person.Address.isValidAddress(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(seedu.condonery.model.person.Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(seedu.condonery.model.person.Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"        // valid addresses","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(seedu.condonery.model.person.Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(seedu.condonery.model.person.Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"yuehernkang":38}},{"path":"src/test/java/seedu/condonery/model/fields/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.model.fields;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"public class NameTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new seedu.condonery.model.person.Name(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.condonery.model.person.Name(invalidName));","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"        // null name","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.condonery.model.person.Name.isValidName(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"        // invalid name","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(seedu.condonery.model.person.Name.isValidName(\"\")); // empty string","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(seedu.condonery.model.person.Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(seedu.condonery.model.person.Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"        assertFalse(seedu.condonery.model.person.Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"        // valid name","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(seedu.condonery.model.person.Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(seedu.condonery.model.person.Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(seedu.condonery.model.person.Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(seedu.condonery.model.person.Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"yuehernkang":42}},{"path":"src/test/java/seedu/condonery/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"misterpuffin":2,"-":66}},{"path":"src/test/java/seedu/condonery/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PersonBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"misterpuffin":2,"-":73}},{"path":"src/test/java/seedu/condonery/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_NAME_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_PHONE_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PersonBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"                new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"                        .withPhone(CLIENT_VALID_PHONE_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"                        .withEmail(CLIENT_VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"                        .withAddress(CLIENT_VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"                        .withTags(CLIENT_VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"                        .build();","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(CLIENT_VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(CLIENT_VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"        String nameWithTrailingSpaces \u003d CLIENT_VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(CLIENT_VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"yuehernkang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(CLIENT_VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"yuehernkang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(CLIENT_VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"yuehernkang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(CLIENT_VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"yuehernkang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(CLIENT_VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yuehernkang":20,"misterpuffin":5,"-":71}},{"path":"src/test/java/seedu/condonery/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"misterpuffin":2,"-":38}},{"path":"src/test/java/seedu/condonery/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PersonBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"                new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"                        .withAddress(CLIENT_VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"                        .withTags(CLIENT_VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"yuehernkang"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"yuehernkang"},"content":"                new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"yuehernkang"},"content":"                        .withAddress(CLIENT_VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"yuehernkang"},"content":"                        .withTags(CLIENT_VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yuehernkang":10,"misterpuffin":7,"-":159}},{"path":"src/test/java/seedu/condonery/model/property/PropertyDirectoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.PINNACLE;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.exceptions.DuplicatePropertyException;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"public class PropertyDirectoryTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    private final PropertyDirectory propertyDirectory \u003d new PropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(Collections.emptyList(), propertyDirectory.getPropertyList());","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e propertyDirectory.resetData(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    public void resetData_withValidReadOnlyPropertyDirectory_replacesData() {","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectory newData \u003d getTypicalPropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"        propertyDirectory.resetData(newData);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(newData, propertyDirectory);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"zacchaeuschok"},"content":"    public void resetData_withDuplicateProperties_throwsDuplicatePropertyException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"        Property editedPinnacle \u003d new PropertyBuilder(PINNACLE)","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"                .withAddress(CLIENT_VALID_ADDRESS_BOB).withTags(CLIENT_VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"            .build();","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"        List\u003cProperty\u003e newProperties \u003d Arrays.asList(PINNACLE, editedPinnacle);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectoryStub newData \u003d new PropertyDirectoryStub(newProperties);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"zacchaeuschok"},"content":"        assertThrows(DuplicatePropertyException.class, () -\u003e propertyDirectory.resetData(newData));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e propertyDirectory.hasProperty(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"    public void hasPerson_personNotInPropertyDirectory_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"        assertFalse(propertyDirectory.hasProperty(PINNACLE));","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"    public void hasPerson_personInPropertyDirectory_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"        propertyDirectory.addProperty(PINNACLE);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"        assertTrue(propertyDirectory.hasProperty(PINNACLE));","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"    public void hasPerson_personWithSameIdentityFieldsInPropertyDirectory_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"        propertyDirectory.addProperty(PINNACLE);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"        Property editedPinnacle \u003d new PropertyBuilder(PINNACLE)","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"                .withAddress(CLIENT_VALID_ADDRESS_BOB).withTags(CLIENT_VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"            .build();","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        assertTrue(propertyDirectory.hasProperty(editedPinnacle));","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e propertyDirectory.getPropertyList().remove(0));","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"     * A stub ReadOnlyPropertyDirectory whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"    private static class PropertyDirectoryStub implements ReadOnlyPropertyDirectory {","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"        private final ObservableList\u003cProperty\u003e properties \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectoryStub(Collection\u003cProperty\u003e properties) {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"            this.properties.setAll(properties);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"        public ObservableList\u003cProperty\u003e getPropertyList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"            return properties;","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"yuehernkang":4,"zacchaeuschok":3,"misterpuffin":96}},{"path":"src/test/java/seedu/condonery/model/property/PropertyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.model.property;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"public class PropertyTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Property(","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"                null,","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"                null,","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":"                null,","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":"                null,","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"                null,","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"                null,","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"                null)","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"        );","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"yuehernkang":23}},{"path":"src/test/java/seedu/condonery/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.model.tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"misterpuffin":2,"-":24}},{"path":"src/test/java/seedu/condonery/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"misterpuffin":9,"-":101}},{"path":"src/test/java/seedu/condonery/storage/JsonPropertyDirectoryStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.HOON;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.IDA;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.PINNACLE;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"public class JsonPropertyDirectoryStorageTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonPropertyDirectoryStorageTest\");","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    @TempDir","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"    public void readPropertyDirectory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPropertyDirectory(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    private java.util.Optional\u003cReadOnlyPropertyDirectory\u003e readPropertyDirectory(String filePath) throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"        return new JsonPropertyDirectoryStorage(Paths.get(filePath)).readPropertyDirectory(","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"                addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"                : null;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"        assertFalse(readPropertyDirectory(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"                DataConversionException.class,","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"                //CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"                () -\u003e readPropertyDirectory(\"notJsonFormatPropertyDirectory.json\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        //CHECKSTYLE.ON","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"zacchaeuschok"},"content":"    public void readPropertyDirectory_invalidPropertyDirectory_throwDataConversionException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"zacchaeuschok"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPropertyDirectory(\"invalidPropertyDirectory.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"zacchaeuschok"},"content":"    public void readPropertyDirectory_invalidAndValidPropertyDirectory_throwDataConversionException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"                DataConversionException.class,","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"                //CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"zacchaeuschok"},"content":"                () -\u003e readPropertyDirectory(\"invalidAndValidPropertyDirectory.json\")","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"        //CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"        );","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"    public void readAndSavePropertyDirectory_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"        Path filePath \u003d testFolder.resolve(\"TempPropertyDirectory.json\");","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectory original \u003d getTypicalPropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"        JsonPropertyDirectoryStorage jsonPropertyDirectoryStorage \u003d new JsonPropertyDirectoryStorage(filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"misterpuffin"},"content":"        jsonPropertyDirectoryStorage.savePropertyDirectory(original, filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"misterpuffin"},"content":"        ReadOnlyPropertyDirectory readBack \u003d jsonPropertyDirectoryStorage.readPropertyDirectory(filePath).get();","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(original, new PropertyDirectory(readBack, testFolder.resolve(\"images\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"misterpuffin"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"misterpuffin"},"content":"        original.addProperty(HOON);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"misterpuffin"},"content":"        original.removeProperty(PINNACLE);","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"misterpuffin"},"content":"        jsonPropertyDirectoryStorage.savePropertyDirectory(original, filePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"        readBack \u003d jsonPropertyDirectoryStorage.readPropertyDirectory(filePath).get();","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(original, new PropertyDirectory(readBack, testFolder.resolve(\"images\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"        original.addProperty(IDA);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"        jsonPropertyDirectoryStorage.savePropertyDirectory(original); // file path not specified","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"        readBack \u003d jsonPropertyDirectoryStorage.readPropertyDirectory().get(); // file path not specified","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(original, new PropertyDirectory(readBack, testFolder.resolve(\"images\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"    public void savePropertyDirectory_nullPropertyDirectory_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePropertyDirectory(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"     * Saves {@code propertyDirectory} at the specified {@code filePath}.","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"misterpuffin"},"content":"    private void savePropertyDirectory(ReadOnlyPropertyDirectory propertyDirectory, String filePath) {","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"            new JsonPropertyDirectoryStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"                    .savePropertyDirectory(propertyDirectory, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"misterpuffin"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"misterpuffin"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"misterpuffin"},"content":"    public void savePropertyDirectory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePropertyDirectory(new PropertyDirectory(), null));","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"lkwlkww":2,"zacchaeuschok":4,"misterpuffin":114}},{"path":"src/test/java/seedu/condonery/storage/JsonSerializablePropertyDirectoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.util.JsonUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.testutil.TypicalProperties;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"public class JsonSerializablePropertyDirectoryTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"        Paths.get(\"src\", \"test\", \"data\", \"JsonSerializablePropertyDirectoryTest\");","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"zacchaeuschok"},"content":"    private static final Path TYPICAL_PROPERTY_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPropertyDirectory.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"    private static final Path INVALID_PROPERTY_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPropertyDirectory.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"zacchaeuschok"},"content":"    private static final Path DUPLICATE_PROPERTY_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePropertyDirectory.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"    public void toModelType_typicalPropertyFile_success() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"        JsonSerializablePropertyDirectory dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PROPERTY_FILE,","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"            JsonSerializablePropertyDirectory.class).get();","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectory propertyDirectoryFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"        PropertyDirectory typicalPropertyDirectory \u003d TypicalProperties.getTypicalPropertyDirectory();","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"        assertEquals(propertyDirectoryFromFile, typicalPropertyDirectory);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"    public void toModelType_invalidPropertyFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"        JsonSerializablePropertyDirectory dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PROPERTY_FILE,","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"            JsonSerializablePropertyDirectory.class).get();","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"zacchaeuschok"},"content":"    public void toModelType_duplicateProperties_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"zacchaeuschok"},"content":"        JsonSerializablePropertyDirectory dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PROPERTY_FILE,","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"            JsonSerializablePropertyDirectory.class).get();","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePropertyDirectory.MESSAGE_DUPLICATE_PROPERTY,","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"lkwlkww":1,"zacchaeuschok":11,"misterpuffin":36}},{"path":"src/test/java/seedu/condonery/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"        userPrefs.setPropertyDirectoryFilePath(Paths.get(\"propertyDirectory.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"misterpuffin":6,"-":117}},{"path":"src/test/java/seedu/condonery/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.TypicalProperties.getTypicalPropertyDirectory;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.ReadOnlyPropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"        JsonPropertyDirectoryStorage propertyDirectoryStorage \u003d new JsonPropertyDirectoryStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"zacchaeuschok"},"content":"        JsonClientDirectoryStorage clientDirectoryStorage \u003d new JsonClientDirectoryStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"zacchaeuschok"},"content":"        storageManager \u003d new StorageManager(propertyDirectoryStorage, clientDirectoryStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"    public void propertyDirectoryReadSave() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"         * {@link JsonPropertyDirectoryStorage} class.","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPropertyDirectoryStorageTest} class.","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectory original \u003d getTypicalPropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"        storageManager.savePropertyDirectory(original);","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"        ReadOnlyPropertyDirectory retrieved \u003d storageManager.readPropertyDirectory().get();","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"        assertEquals(original, new PropertyDirectory(retrieved, testFolder.resolve(\"images\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"    public void getPropertyDirectoryFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"        assertNotNull(storageManager.getPropertyDirectoryFilePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lkwlkww":2,"zacchaeuschok":2,"misterpuffin":14,"-":51}},{"path":"src/test/java/seedu/condonery/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                    Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"misterpuffin":1,"-":33}},{"path":"src/test/java/seedu/condonery/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"public class ClientBuilder {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    private Name name;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"    private Address address;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"    private Set\u003cProperty\u003e interestedProperties;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    public ClientBuilder() {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"        interestedProperties \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"        address \u003d clientToCopy.getAddress();","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"        tags \u003d new HashSet\u003c\u003e(clientToCopy.getTags());","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"        interestedProperties \u003d new HashSet\u003c\u003e(clientToCopy.getInterestedProperties());","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"    public ClientBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"misterpuffin"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    public ClientBuilder withAddress(String address) {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"    public Client build() {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"        return new Client(name, address, tags, interestedProperties);","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"lkwlkww":15,"zacchaeuschok":2,"misterpuffin":59}},{"path":"src/test/java/seedu/condonery/testutil/EditClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuehernkang"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.client.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"yuehernkang"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuehernkang"},"content":" * A utility class to help with building EditClientDescriptor objects.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuehernkang"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":"public class EditClientDescriptorBuilder {","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"    private final EditClientDescriptor descriptor;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuehernkang"},"content":"    public EditClientDescriptorBuilder() {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"    public EditClientDescriptorBuilder(EditClientDescriptor descriptor) {","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"        this.descriptor \u003d new EditClientDescriptor(descriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"    public EditClientDescriptorBuilder(Client client) {","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setName(client.getName());","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setAddress(client.getAddress());","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setTags(client.getTags());","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"    public EditClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"yuehernkang"},"content":"        return this;","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"yuehernkang"},"content":"    public EditClientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"        return this;","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"     * that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"    public EditClientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"        return this;","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"yuehernkang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"yuehernkang"},"content":"        return Objects.hash(descriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"yuehernkang"},"content":"    public EditClientDescriptor build() {","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"yuehernkang"},"content":"        return descriptor;","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"yuehernkang"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yuehernkang":75}},{"path":"src/test/java/seedu/condonery/testutil/EditPropertyDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.Price;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"yuehernkang"},"content":" * A utility class to help with building EditPropertyDescriptor objects.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"public class EditPropertyDescriptorBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    private final EditPropertyDescriptor descriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    public EditPropertyDescriptorBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"        descriptor \u003d new EditPropertyDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"    public EditPropertyDescriptorBuilder(EditPropertyDescriptor descriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"        this.descriptor \u003d new EditPropertyDescriptor(descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"     * Returns an {@code EditPropertyDescriptor} with fields containing {@code property}\u0027s details","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"    public EditPropertyDescriptorBuilder(Property property) {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"        descriptor \u003d new EditPropertyDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setName(property.getName());","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setAddress(property.getAddress());","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"zacchaeuschok"},"content":"        descriptor.setPrice(property.getPrice());","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setTags(property.getTags());","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setPropertyTypeEnum(property.getPropertyTypeEnum());","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"yuehernkang"},"content":"     * Sets the {@code Name} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    public EditPropertyDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"     * Sets the {@code Address} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    public EditPropertyDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"zacchaeuschok"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"zacchaeuschok"},"content":"    public EditPropertyDescriptorBuilder withPrice(String price) {","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"zacchaeuschok"},"content":"        descriptor.setPrice(new Price(price));","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"zacchaeuschok"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"     * that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"    public EditPropertyDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"yuehernkang"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"yuehernkang"},"content":"     * that we are building.","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"yuehernkang"},"content":"    public EditPropertyDescriptorBuilder withPropertyTypeEnum(String propertyTypeEnum) {","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"yuehernkang"},"content":"        descriptor.setPropertyTypeEnum(PropertyTypeEnum.valueOf(propertyTypeEnum));","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"yuehernkang"},"content":"        return this;","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"yuehernkang"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"yuehernkang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"yuehernkang"},"content":"        return Objects.hash(descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"    public EditPropertyDescriptor build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"        return descriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"yuehernkang":28,"zacchaeuschok":10,"misterpuffin":58}},{"path":"src/test/java/seedu/condonery/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Person;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"misterpuffin":8,"-":88}},{"path":"src/test/java/seedu/condonery/testutil/PropertyBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.fields.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"import seedu.condonery.model.property.Price;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.PropertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"public class PropertyBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String DEFAULT_NAME \u003d \"Bishan\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"zacchaeuschok"},"content":"    public static final String DEFAULT_PRICE \u003d \"100000\";","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"yuehernkang"},"content":"    public static final Set\u003cTag\u003e DEFAULT_TAGS \u003d new HashSet\u003cTag\u003e() {{","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"        }};","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"    public static final PropertyTypeEnum DEFAULT_PROPERTY_TYPE \u003d PropertyTypeEnum.CONDO;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"    public static final PropertyStatusEnum DEFAULT_PROPERTY_STATUS \u003d PropertyStatusEnum.AVAILABLE;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"    public static final Set\u003cClient\u003e DEFAULT_CLIENTS \u003d new HashSet\u003cClient\u003e() {{","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"yuehernkang"},"content":"        }};","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"    private Name name;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    private Address address;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"    private Price price;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"    private Set\u003cClient\u003e clients;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"yuehernkang"},"content":"    private PropertyTypeEnum propertyTypeEnum;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"    private PropertyStatusEnum propertyStatusEnum;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"     * Creates a {@code PropertyBuilder} with the default details.","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    public PropertyBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"        price \u003d new Price(DEFAULT_PRICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"yuehernkang"},"content":"        tags \u003d DEFAULT_TAGS;","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"        clients \u003d DEFAULT_CLIENTS;","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"        propertyTypeEnum \u003d DEFAULT_PROPERTY_TYPE;","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"        propertyStatusEnum \u003d DEFAULT_PROPERTY_STATUS;","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"zacchaeuschok"},"content":"     * Initializes the PersonBuilder with the data of {@code propertyToCopy}.","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"    public PropertyBuilder(Property propertyToCopy) {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        name \u003d propertyToCopy.getName();","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        address \u003d propertyToCopy.getAddress();","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"zacchaeuschok"},"content":"        price \u003d propertyToCopy.getPrice();","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"        tags \u003d new HashSet\u003c\u003e(propertyToCopy.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"        clients \u003d new HashSet\u003c\u003e(propertyToCopy.getInterestedClients());","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"        propertyTypeEnum \u003d propertyToCopy.getPropertyTypeEnum();","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"        propertyStatusEnum \u003d propertyToCopy.getPropertyStatusEnum();","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"zacchaeuschok"},"content":"     * Sets the {@code Name} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    public PropertyBuilder withName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"zacchaeuschok"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Property} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"misterpuffin"},"content":"    public PropertyBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"misterpuffin"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"misterpuffin"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"yuehernkang"},"content":"     * Parses the {@code clients} into a {@code Set\u003cClient\u003e} and set it to the {@code Property} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"yuehernkang"},"content":"    public PropertyBuilder withClients(Client... clients) {","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"yuehernkang"},"content":"        this.clients \u003d SampleDataUtil.getClientSet(clients);","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"yuehernkang"},"content":"        return this;","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"zacchaeuschok"},"content":"     * Sets the {@code Address} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"    public PropertyBuilder withAddress(String address) {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"zacchaeuschok"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"zacchaeuschok"},"content":"     * Sets the {@code Price} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"zacchaeuschok"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"zacchaeuschok"},"content":"    public PropertyBuilder withPrice(String price) {","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"zacchaeuschok"},"content":"        this.price \u003d new Price(price);","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"zacchaeuschok"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"zacchaeuschok"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"yuehernkang"},"content":"     * Sets the {@code PropertyType} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"yuehernkang"},"content":"    public PropertyBuilder withPropertyType(String propertyType) {","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"yuehernkang"},"content":"        this.propertyTypeEnum \u003d PropertyTypeEnum.valueOf(propertyType);","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"yuehernkang"},"content":"        return this;","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"yuehernkang"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"yuehernkang"},"content":"     * Sets the {@code PropertyStatus} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"yuehernkang"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"yuehernkang"},"content":"    public PropertyBuilder withPropertyStatus(String propertyStatus) {","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"yuehernkang"},"content":"        this.propertyStatusEnum \u003d PropertyStatusEnum.valueOf(propertyStatus);","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"yuehernkang"},"content":"        return this;","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"yuehernkang"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"misterpuffin"},"content":"    public Property build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"yuehernkang"},"content":"        return new Property(name, address, price, tags, clients, propertyTypeEnum, propertyStatusEnum);","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"yuehernkang":44,"zacchaeuschok":19,"misterpuffin":61}},{"path":"src/test/java/seedu/condonery/testutil/PropertyDirectoryBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"misterpuffin"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":" * {@code PropertyDirectory ab \u003d new PropertyDirectoryBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"misterpuffin"},"content":"public class PropertyDirectoryBuilder {","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"    private final PropertyDirectory propertyDirectory;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"    public PropertyDirectoryBuilder() {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"        propertyDirectory \u003d new PropertyDirectory();","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"    public PropertyDirectoryBuilder(PropertyDirectory propertyDirectory) {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"        this.propertyDirectory \u003d propertyDirectory;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"     * Adds a new {@code Person} to the {@code PropertyDirectory} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"    public PropertyDirectoryBuilder withProperty(Property property) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"        propertyDirectory.addProperty(property);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"    public PropertyDirectory build() {","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"        return propertyDirectory;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"lkwlkww":1,"misterpuffin":33}},{"path":"src/test/java/seedu/condonery/testutil/PropertyUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PROPERTY_STATUS;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_PROPERTY_TYPE;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"zacchaeuschok"},"content":"import static seedu.condonery.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.AddPropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.logic.commands.property.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":" * A utility class for Property.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"public class PropertyUtil {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":"     * Returns an add command string for adding the {@code property}.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"zacchaeuschok"},"content":"    public static String getAddCommand(Property property) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"zacchaeuschok"},"content":"        return AddPropertyCommand.COMMAND_WORD + \" \" + getPropertyDetails(property);","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"     * Returns the part of command string for the given {@code property}\u0027s details.","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"zacchaeuschok"},"content":"    public static String getPropertyDetails(Property property) {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"zacchaeuschok"},"content":"        sb.append(PREFIX_NAME + property.getName().fullName + \" \");","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"        sb.append(PREFIX_ADDRESS + property.getAddress().value + \" \");","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"zacchaeuschok"},"content":"        sb.append(PREFIX_PRICE + property.getPrice().value + \" \");","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"zacchaeuschok"},"content":"        property.getTags().stream().forEach(","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"        sb.append(PREFIX_PROPERTY_TYPE + property.getPropertyTypeEnum().toString() + \" \");","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"        sb.append(PREFIX_PROPERTY_STATUS + property.getPropertyStatusEnum().toString() + \" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"yuehernkang"},"content":"     * Returns the part of command string for the given {@code EditPropertyDescriptor}\u0027s details.","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    public static String getEditPropertyDescriptorDetails(EditPropertyDescriptor descriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"        descriptor.getPropertyTypeEnum()","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"                .ifPresent(propertyType -\u003e sb.append(PREFIX_PROPERTY_TYPE).append(propertyType).append(\" \"));","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"        descriptor.getPrice().ifPresent(price -\u003e sb.append(PREFIX_PRICE).append(price.value).append(\" \"));","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"        System.out.println(sb.toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yuehernkang":15,"zacchaeuschok":12,"misterpuffin":5,"-":34}},{"path":"src/test/java/seedu/condonery/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"misterpuffin":1,"-":71}},{"path":"src/test/java/seedu/condonery/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"        return Index.fromOneBased(model.getFilteredPropertyList().size() / 2);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"zacchaeuschok"},"content":"        return Index.fromOneBased(model.getFilteredPropertyList().size());","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"    public static Property getProperty(Model model, Index index) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"zacchaeuschok"},"content":"        return model.getFilteredPropertyList().get(index.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zacchaeuschok":3,"misterpuffin":5,"-":47}},{"path":"src/test/java/seedu/condonery/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.Client;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.client.ClientDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import seedu.condonery.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"public class TypicalClients {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"yuehernkang"},"content":"    public static final Client ALICE_CLIENT \u003d new ClientBuilder().withName(\"Alice\")","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"yuehernkang"},"content":"    public static final Client BOB_CLIENT \u003d new ClientBuilder().withName(\"Bob\")","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"yuehernkang"},"content":"    public static final Client CARL_CLIENT \u003d new ClientBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"yuehernkang"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"yuehernkang"},"content":"    public static final Client DANIEL_CLIENT \u003d new ClientBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"            .withName(\"Daniel Meier\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"    public static final Client ELLE_CLIENT \u003d new ClientBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"yuehernkang"},"content":"    public static final Client FIONA_CLIENT \u003d new ClientBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"yuehernkang"},"content":"    public static final Client GEORGE_CLIENT \u003d new ClientBuilder().withName(\"George Best\")","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"    public static final Set\u003cTag\u003e TYPICAL_CLIENT_TAG \u003d new HashSet\u003cTag\u003e() { {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"            add(new Tag(\"tag1\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"yuehernkang"},"content":"            add(new Tag(\"tag2\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"yuehernkang"},"content":"            add(new Tag(\"tag3\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"        }};","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    private TypicalClients() {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"     * Returns an {@code PropertyDirectory} with all the typical persons.","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    public static ClientDirectory getTypicalClientDirectory() {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"misterpuffin"},"content":"        ClientDirectory cd \u003d new ClientDirectory();","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"misterpuffin"},"content":"        for (Client property: getTypicalClients()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"misterpuffin"},"content":"            cd.addClient(property);","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"        return cd;","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"misterpuffin"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_CLIENT, BOB_CLIENT, CARL_CLIENT, DANIEL_CLIENT,","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"                ELLE_CLIENT, FIONA_CLIENT, GEORGE_CLIENT));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"yuehernkang":21,"misterpuffin":42}},{"path":"src/test/java/seedu/condonery/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"yuehernkang":3,"misterpuffin":2,"-":7}},{"path":"src/test/java/seedu/condonery/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_NAME_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_NAME_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_PHONE_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_PHONE_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.CLIENT_VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.person.Person;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"misterpuffin"},"content":"public class TypicalPersons {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"        .withTags(\"friends\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"misterpuffin"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"misterpuffin"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"misterpuffin"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"        .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"misterpuffin"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"misterpuffin"},"content":"        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"misterpuffin"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"misterpuffin"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"misterpuffin"},"content":"        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"misterpuffin"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"misterpuffin"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"misterpuffin"},"content":"    // Manually added","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"misterpuffin"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"misterpuffin"},"content":"        .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"misterpuffin"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"misterpuffin"},"content":"        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"misterpuffin"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"yuehernkang"},"content":"    public static final Person AMY \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"yuehernkang"},"content":"            new PersonBuilder().withName(CLIENT_VALID_NAME_AMY)","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"                    .withPhone(CLIENT_VALID_PHONE_AMY)","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"                    .withEmail(CLIENT_VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"                    .withAddress(CLIENT_VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"yuehernkang"},"content":"                    .withTags(CLIENT_VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"yuehernkang"},"content":"    public static final Person BOB \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"            new PersonBuilder().withName(CLIENT_VALID_NAME_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"                    .withPhone(CLIENT_VALID_PHONE_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"                    .withEmail(CLIENT_VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"yuehernkang"},"content":"                    .withAddress(CLIENT_VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"yuehernkang"},"content":"                    .withTags(CLIENT_VALID_TAG_HUSBAND, CLIENT_VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"misterpuffin"},"content":"                    .build();","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"misterpuffin"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    private TypicalPersons() {","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"misterpuffin"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"yuehernkang":22,"misterpuffin":51}},{"path":"src/test/java/seedu/condonery/testutil/TypicalProperties.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_ADDRESS_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_ADDRESS_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_NAME_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_NAME_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_PRICE_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_PRICE_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_STATUS;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_TAG_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_TAG_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_TYPE_SCOTTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"yuehernkang"},"content":"import static seedu.condonery.logic.commands.CommandTestUtil.PROPERTY_VALID_TYPE_WHISTLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"zacchaeuschok"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"misterpuffin"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"misterpuffin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"import seedu.condonery.model.property.PropertyDirectory;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"misterpuffin"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"yuehernkang"},"content":" * A utility class containing a list of {@code Property} objects to be used in tests.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"misterpuffin"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"misterpuffin"},"content":"public class TypicalProperties {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"misterpuffin"},"content":"    public static final Property PINNACLE \u003d new PropertyBuilder().withName(\"Pinnacle@Duxton\")","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"misterpuffin"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"zacchaeuschok"},"content":"            .withPrice(\"1,000,000\")","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyType(\"CONDO\")","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyStatus(\"AVAILABLE\")","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"misterpuffin"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"misterpuffin"},"content":"    public static final Property OASIS \u003d new PropertyBuilder().withName(\"Oasis\")","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"misterpuffin"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"zacchaeuschok"},"content":"            .withPrice(\"2,000,000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyType(\"CONDO\")","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyStatus(\"PENDING\")","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"misterpuffin"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"zacchaeuschok"},"content":"    public static final Property CARL \u003d new PropertyBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyType(\"CONDO\")","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"yuehernkang"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyStatus(\"PENDING\")","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"zacchaeuschok"},"content":"            .withPrice(\"3,000,000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"zacchaeuschok"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"zacchaeuschok"},"content":"    public static final Property DANIEL \u003d new PropertyBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"zacchaeuschok"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyType(\"CONDO\")","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyStatus(\"PENDING\")","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"zacchaeuschok"},"content":"            .withPrice(\"4,000,000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"zacchaeuschok"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"misterpuffin"},"content":"    public static final Property ELLE \u003d new PropertyBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"zacchaeuschok"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyType(\"CONDO\")","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyStatus(\"PENDING\")","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"yuehernkang"},"content":"            .withPrice(\"5,000,000\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"misterpuffin"},"content":"    public static final Property FIONA \u003d new PropertyBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"zacchaeuschok"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyType(\"CONDO\")","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyStatus(\"SOLD\")","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"yuehernkang"},"content":"            .withPrice(\"6,000,000\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"misterpuffin"},"content":"    public static final Property GEORGE \u003d new PropertyBuilder().withName(\"George Best\")","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"zacchaeuschok"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyType(\"CONDO\")","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyStatus(\"SOLD\")","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"yuehernkang"},"content":"            .withPrice(\"7,000,000\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"misterpuffin"},"content":"    // Manually added","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"misterpuffin"},"content":"    public static final Property HOON \u003d new PropertyBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"zacchaeuschok"},"content":"            .withAddress(\"little india\").withPrice(\"1000000\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"misterpuffin"},"content":"    public static final Property IDA \u003d new PropertyBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"zacchaeuschok"},"content":"            .withAddress(\"chicago ave\").withPrice(\"1000000\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"yuehernkang"},"content":"    // Manually added - Property\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"yuehernkang"},"content":"    public static final Property SCOTTS \u003d new PropertyBuilder()","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"yuehernkang"},"content":"            .withName(PROPERTY_VALID_NAME_SCOTTS)","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"yuehernkang"},"content":"            .withAddress(PROPERTY_VALID_ADDRESS_SCOTTS)","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"yuehernkang"},"content":"            .withTags(PROPERTY_VALID_TAG_SCOTTS)","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"yuehernkang"},"content":"            .withPrice(PROPERTY_VALID_PRICE_SCOTTS)","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyType(PROPERTY_VALID_TYPE_SCOTTS)","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyStatus(PROPERTY_VALID_STATUS)","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"yuehernkang"},"content":"            .build();","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"yuehernkang"},"content":"    public static final Property WHISTLER \u003d new PropertyBuilder()","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"yuehernkang"},"content":"            .withName(PROPERTY_VALID_NAME_WHISTLER)","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"yuehernkang"},"content":"            .withAddress(PROPERTY_VALID_ADDRESS_WHISTLER)","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"yuehernkang"},"content":"            .withTags(PROPERTY_VALID_TAG_WHISTLER)","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"yuehernkang"},"content":"            .withPrice(PROPERTY_VALID_PRICE_WHISTLER)","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyType(PROPERTY_VALID_TYPE_WHISTLER)","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"yuehernkang"},"content":"            .withPropertyStatus(PROPERTY_VALID_STATUS)","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"yuehernkang"},"content":"            .build();","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"misterpuffin"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"misterpuffin"},"content":"    private TypicalProperties() {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"misterpuffin"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"misterpuffin"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"misterpuffin"},"content":"     * Returns an {@code PropertyDirectory} with all the typical persons.","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"misterpuffin"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"misterpuffin"},"content":"    public static PropertyDirectory getTypicalPropertyDirectory() {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"misterpuffin"},"content":"        PropertyDirectory pd \u003d new PropertyDirectory();","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"zacchaeuschok"},"content":"        for (Property property: getTypicalProperties()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"misterpuffin"},"content":"            pd.addProperty(property);","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"misterpuffin"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"misterpuffin"},"content":"        return pd;","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"misterpuffin"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"zacchaeuschok"},"content":"    public static List\u003cProperty\u003e getTypicalProperties() {","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"misterpuffin"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(PINNACLE, OASIS, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"misterpuffin"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"yuehernkang":47,"lkwlkww":1,"zacchaeuschok":17,"misterpuffin":45}},{"path":"src/test/java/seedu/condonery/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"misterpuffin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"misterpuffin":3,"-":33}},{"path":"src/test/java/seedu/condonery/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"misterpuffin"},"content":"package seedu.condonery.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"misterpuffin"},"content":"import static seedu.condonery.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"misterpuffin"},"content":"import seedu.condonery.MainApp;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"misterpuffin":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"\u003c?import seedu.condonery.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"misterpuffin":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"misterpuffin"},"content":"\u003c?import seedu.condonery.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"misterpuffin"},"content":"\u003cfx:root type\u003d\"seedu.condonery.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"misterpuffin":2,"-":5}}]
