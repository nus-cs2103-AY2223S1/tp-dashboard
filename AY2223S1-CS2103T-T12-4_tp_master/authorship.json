[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"# UniNurse","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T12-4/tp/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2223S1-CS2103T-T12-4/tp)","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T12-4/tp/actions)","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"## About The Project","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"* UniNurse is **a desktop app designed for private nurses to manage their patient contacts**, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, UniNurse can get your patient management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"* The project simulates an ongoing software project, for the **CS2103T Software Engineering module** offered by the National University of Singapore.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"* For the detailed documentation of this project, see the **[UniNurse Product Website](https://ay2223s1-cs2103t-t12-4.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"## Acknowledgments","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"  * For the detailed documentation of the AddressBook-Level3 project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"  * If you would like to contribute code to the AddressBook-Level3 project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"rama-pang":15,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"mainClassName \u003d \u0027seedu.uninurse.Main\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"run {","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"    archiveFileName \u003d \u0027uninurse.jar\u0027","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"BlopApple":1,"izzahaj":5,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"### \u0027Izzah Bte Abdul Jalil","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"\u003cimg src\u003d\"images/izzahaj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"[[github](https://github.com/izzahaj)]","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"[[portfolio](team/izzahaj.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"* Responsibilities: Deliverables and deadlines, Scheduling and tracking","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"### Lau Jun Jie","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"\u003cimg src\u003d\"images/blopapple.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"[[github](http://github.com/blopapple)]","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"[[portfolio](team/blopapple.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"### Shaugn Tan Sean Hon","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"\u003cimg src\u003d\"images/shogun187.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"[[github](http://github.com/shogun187)]","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"[[portfolio](team/shogun187.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"### Rama Aryasuta Pangestu","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"\u003cimg src\u003d\"images/rama-pang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"[[github](https://github.com/rama-pang)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"[[portfolio](team/rama-pang.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"Ramanathan0908"},"content":"### Ramanathan Kumarappan","lastModifiedDate":"2022-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Ramanathan0908"},"content":"\u003cimg src\u003d\"images/ramanathan0908.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Ramanathan0908"},"content":"[[github](https://github.com/Ramanathan0908)]","lastModifiedDate":"2022-09-24"},{"lineNumber":57,"author":{"gitId":"Ramanathan0908"},"content":"[[portfolio](team/ramanathan0908.md)]","lastModifiedDate":"2022-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Ramanathan0908"},"content":"* Responsibilities: Integration","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"BlopApple":5,"rama-pang":5,"Ramanathan0908":5,"shogun187":5,"izzahaj":6,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"izzahaj"},"content":"Step 3. The user executes `add n/David …` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"izzahaj"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2022-09-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"BlopApple"},"content":"This product is for private nurses to help manage the details and needs of their patients.","lastModifiedDate":"2022-09-27"},{"lineNumber":261,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":262,"author":{"gitId":"BlopApple"},"content":"* has a need to manage a significant number of patient contacts","lastModifiedDate":"2022-09-27"},{"lineNumber":263,"author":{"gitId":"BlopApple"},"content":"* wants to be able to view patient\u0027s needs at a glance","lastModifiedDate":"2022-09-27"},{"lineNumber":264,"author":{"gitId":"BlopApple"},"content":"* prefer to have quick access to details of patient\u0027s contacts and their needs","lastModifiedDate":"2022-09-27"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"BlopApple"},"content":"**Value proposition**: Allows private nurses to manage different detail-sensitive tasks for specific patients in a more organized manner.","lastModifiedDate":"2022-09-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"izzahaj"},"content":"| Priority | As a …                                     | I want to …                                                      | So that I can…                                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":277,"author":{"gitId":"BlopApple"},"content":"| -------- | ------------------------------------------ | ---------------------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2022-09-27"},{"lineNumber":278,"author":{"gitId":"BlopApple"},"content":"| `* * *`  | user                                       | add a person                                                     |                                                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                                                  | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"BlopApple"},"content":"| `* * *`  | private nurse                              | be able to edit a patient\u0027s details                              | update their information if there are any changes                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":281,"author":{"gitId":"BlopApple"},"content":"| `* * *`  | private nurse with many patients           | search a patient by name                                         | locate a patient easily                                                |","lastModifiedDate":"2022-09-28"},{"lineNumber":282,"author":{"gitId":"BlopApple"},"content":"| `* * *`  | user                                       | add a task to a patient                                          | know what task I need to do for the patient                            |","lastModifiedDate":"2022-09-28"},{"lineNumber":283,"author":{"gitId":"BlopApple"},"content":"| `* * *`  | private nurse                              | delete a task associated with a patient                          | remove tasks that I no longer need                                     |","lastModifiedDate":"2022-09-27"},{"lineNumber":284,"author":{"gitId":"BlopApple"},"content":"| `* * *`  | private nurse                              | edit a task associated with a patient                            | update the task if there are any changes                               |","lastModifiedDate":"2022-09-27"},{"lineNumber":285,"author":{"gitId":"BlopApple"},"content":"| `* * *`  | private nurse                              | know what tasks I need to do                                     | prepare for them beforehand                                            |","lastModifiedDate":"2022-09-28"},{"lineNumber":286,"author":{"gitId":"BlopApple"},"content":"| `* * *`  | private nurse                              | view all tasks associated with a patient                         |                                                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":287,"author":{"gitId":"BlopApple"},"content":"| `* * *`  | private nurse                              | know the patient\u0027s family member\u0027s details                       | contact them in case of emergency                                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":288,"author":{"gitId":"BlopApple"},"content":"| `* *`    | user                                       | see my list of patients for the day                              | know my schedule                                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":289,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse with many patients and tasks | search a patient by name and task                                | locate a patient with a specific task or name easily                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":290,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse with many patients           | view all tasks for a particular day                              | easily see the more urgent tasks I have for the day                    |","lastModifiedDate":"2022-09-28"},{"lineNumber":291,"author":{"gitId":"BlopApple"},"content":"| `* *`    | busy nurse with short attention span       | customise what information I can see at a glance                 | waste less time looking through long chunks of text to find what I want|","lastModifiedDate":"2022-09-27"},{"lineNumber":292,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | know the exact location of my patient (i.e floor no and room no) | quickly navigate to their side when needed                             |","lastModifiedDate":"2022-09-27"},{"lineNumber":293,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | know the type of ward (i.e. contagious, non-contagious)          | know if I need to don PPE before attending to them                     |","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"BlopApple"},"content":"| `* *`    | member of the hospital                     | update the room location of the patient                          | know if the patient is moved for any reasons, everyone involved will be aware of the change|","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | know which doctors are assigned to my patients                   | report any irregularities to them                                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":296,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | know the doctors (and their contact) assigned to the patients    | know who to contact in case of emergency                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":297,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | add a recurring task associated with a patient                   | keep track of tasks that I have to do repeatedly (e.g. weekly visits)  |","lastModifiedDate":"2022-09-28"},{"lineNumber":298,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | delete a recurring task associated with a patient                | remove any tasks that I no longer need                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":299,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | edit a recurring task associated with a patient                  | update the task to reflect any changes                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":300,"author":{"gitId":"BlopApple"},"content":"| `* *`    | doctor                                     | key in additional notes about the patients                       | let anyone attending to them know more about the patients              |","lastModifiedDate":"2022-09-28"},{"lineNumber":301,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | know additional notes the doctor made about the patient          | better care for the patients                                           |","lastModifiedDate":"2022-09-28"},{"lineNumber":302,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | delete a note about a patient                                    | remove notes that I no longer need                                     |","lastModifiedDate":"2022-09-27"},{"lineNumber":303,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | edit a note about a patient                                      | update it to reflect any changes                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":304,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | view all notes about a patient                                   |                                                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":305,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | add a medical condition to a patient                             | take note of the conditions they have                                  |","lastModifiedDate":"2022-09-28"},{"lineNumber":306,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | delete a medical condition from a patient                        | remove conditions a patient may have recovered from                    |","lastModifiedDate":"2022-09-27"},{"lineNumber":307,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | edit a medical condition of a patient                            | update any changes (e.g. severity of condition, etc.)                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":308,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | view all medical conditions of a patient                         | have better overview of the needs and type of care the patient needs   |","lastModifiedDate":"2022-09-27"},{"lineNumber":309,"author":{"gitId":"BlopApple"},"content":"| `* *`    | doctor                                     | update the medication type and dosage                            | progressively monitor the patient and update the info accordingly      |","lastModifiedDate":"2022-09-27"},{"lineNumber":310,"author":{"gitId":"BlopApple"},"content":"| `* *`    | doctor                                     | key in medication types and dosage                               | let nurses administer the appropriate type and amount                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":311,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | know what medication my patient needs                            | prepare the dosages accordingly                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":312,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | know what type of medication my patient is allergic to           | avoid any potential mistake administering medication                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":313,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | be able to undo/redo recent commands I made in case of a mistake |                                                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":314,"author":{"gitId":"BlopApple"},"content":"| `* *`    | private nurse                              | archive former patient details (e.g., patient is cured)          | more easily keep track of only active patients and also still able to recall a patient\u0027s details if needed in the future (e.g., patient gets another disease, don\u0027t have to ask them for contact details again)|","lastModifiedDate":"2022-09-27"},{"lineNumber":315,"author":{"gitId":"BlopApple"},"content":"| `*`      | doctor in charge of the patient,           | control who has edit or read access                              | ensure no unqualified person can change the patients medicine requirements|","lastModifiedDate":"2022-09-27"},{"lineNumber":316,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"izzahaj"},"content":"(For all use cases below, the **System** is the `UniNurse` application and the **Actor** is the `user`,","lastModifiedDate":"2022-10-08"},{"lineNumber":323,"author":{"gitId":"izzahaj"},"content":"unless specified otherwise)","lastModifiedDate":"2022-10-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":325,"author":{"gitId":"BlopApple"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"izzahaj"},"content":"**Use case: UC01 - View the list of all patients**","lastModifiedDate":"2022-10-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":331,"author":{"gitId":"izzahaj"},"content":"1. User requests to list patients.","lastModifiedDate":"2022-09-30"},{"lineNumber":332,"author":{"gitId":"izzahaj"},"content":"2. UniNurse shows a list of patients.","lastModifiedDate":"2022-09-30"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":336,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":338,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":340,"author":{"gitId":"izzahaj"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":341,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":342,"author":{"gitId":"izzahaj"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":343,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":344,"author":{"gitId":"izzahaj"},"content":"**Use case: UC02 - Add a patient**","lastModifiedDate":"2022-10-08"},{"lineNumber":345,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":346,"author":{"gitId":"Ramanathan0908"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":347,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":348,"author":{"gitId":"izzahaj"},"content":"1. User adds a patient to patient list with patient details.","lastModifiedDate":"2022-10-01"},{"lineNumber":349,"author":{"gitId":"izzahaj"},"content":"2. UniNurse shows the list of patients with the newly added patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":350,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":351,"author":{"gitId":"Ramanathan0908"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":352,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":353,"author":{"gitId":"Ramanathan0908"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":354,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":355,"author":{"gitId":"izzahaj"},"content":"* 1a. The given details are invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":356,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":357,"author":{"gitId":"Ramanathan0908"},"content":"    * 1a1. UniNurse shows an error message.","lastModifiedDate":"2022-09-28"},{"lineNumber":358,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":359,"author":{"gitId":"izzahaj"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":360,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":361,"author":{"gitId":"Ramanathan0908"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":362,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":363,"author":{"gitId":"izzahaj"},"content":"**Use case: UC03 - Edit a patient**","lastModifiedDate":"2022-10-08"},{"lineNumber":364,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":365,"author":{"gitId":"Ramanathan0908"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":366,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":367,"author":{"gitId":"izzahaj"},"content":"1. User requests to \u003cu\u003eview the list patients (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-10-08"},{"lineNumber":368,"author":{"gitId":"izzahaj"},"content":"2. User requests to edit a patient profile with the information that they want to change.","lastModifiedDate":"2022-10-08"},{"lineNumber":369,"author":{"gitId":"izzahaj"},"content":"3. UniNurse edits the patient.","lastModifiedDate":"2022-10-08"},{"lineNumber":370,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":371,"author":{"gitId":"Ramanathan0908"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":372,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":373,"author":{"gitId":"Ramanathan0908"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":374,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":375,"author":{"gitId":"izzahaj"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":376,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":377,"author":{"gitId":"izzahaj"},"content":"    * 2a1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":378,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":379,"author":{"gitId":"Ramanathan0908"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-28"},{"lineNumber":380,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":381,"author":{"gitId":"izzahaj"},"content":"* 2b. The given details to edit are invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":382,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":383,"author":{"gitId":"izzahaj"},"content":"    * 2b1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":384,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":385,"author":{"gitId":"Ramanathan0908"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-28"},{"lineNumber":386,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":387,"author":{"gitId":"izzahaj"},"content":"* 2c. The new details to be updated are invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":388,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":389,"author":{"gitId":"izzahaj"},"content":"    * 2b1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":390,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":391,"author":{"gitId":"Ramanathan0908"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-28"},{"lineNumber":392,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":393,"author":{"gitId":"Ramanathan0908"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":394,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":395,"author":{"gitId":"izzahaj"},"content":"**Use case: UC04 - Delete a patient**","lastModifiedDate":"2022-10-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"izzahaj"},"content":"1. User requests to \u003cu\u003eview the list patients (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-10-08"},{"lineNumber":400,"author":{"gitId":"izzahaj"},"content":"2. User requests to delete a specific patient in the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":401,"author":{"gitId":"izzahaj"},"content":"3. UniNurse deletes the patient.","lastModifiedDate":"2022-10-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"izzahaj"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"izzahaj"},"content":"    * 2a1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"BlopApple"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":414,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":415,"author":{"gitId":"izzahaj"},"content":"**Use case: UC05 - Find patients with keywords**","lastModifiedDate":"2022-10-08"},{"lineNumber":416,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":417,"author":{"gitId":"shogun187"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":418,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":419,"author":{"gitId":"izzahaj"},"content":"1. User requests to find patients whose names have specified keywords.","lastModifiedDate":"2022-10-01"},{"lineNumber":420,"author":{"gitId":"izzahaj"},"content":"2. UniNurse shows a list of patients whose names have specified keywords.","lastModifiedDate":"2022-10-01"},{"lineNumber":421,"author":{"gitId":"shogun187"},"content":"   ","lastModifiedDate":"2022-09-30"},{"lineNumber":422,"author":{"gitId":"shogun187"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":423,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":424,"author":{"gitId":"shogun187"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":425,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":426,"author":{"gitId":"izzahaj"},"content":"* 1a. No keywords are given.","lastModifiedDate":"2022-10-01"},{"lineNumber":427,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":428,"author":{"gitId":"izzahaj"},"content":"   * 1a1. UniNurse shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":429,"author":{"gitId":"BlopApple"},"content":"  ","lastModifiedDate":"2022-09-28"},{"lineNumber":430,"author":{"gitId":"shogun187"},"content":"     Use case ends. ","lastModifiedDate":"2022-09-30"},{"lineNumber":431,"author":{"gitId":"shogun187"},"content":"   ","lastModifiedDate":"2022-09-30"},{"lineNumber":432,"author":{"gitId":"shogun187"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":433,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":434,"author":{"gitId":"izzahaj"},"content":"**Use case: UC06 - Add a task to a specified patient**","lastModifiedDate":"2022-10-08"},{"lineNumber":435,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":436,"author":{"gitId":"rama-pang"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":437,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":438,"author":{"gitId":"izzahaj"},"content":"1. User requests to \u003cu\u003eview the list patients (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-10-08"},{"lineNumber":439,"author":{"gitId":"izzahaj"},"content":"2. User requests to add a task with its description to a specific patient.","lastModifiedDate":"2022-10-08"},{"lineNumber":440,"author":{"gitId":"izzahaj"},"content":"3. UniNurse adds the task to a patient.","lastModifiedDate":"2022-10-08"},{"lineNumber":441,"author":{"gitId":"rama-pang"},"content":"   ","lastModifiedDate":"2022-09-29"},{"lineNumber":442,"author":{"gitId":"rama-pang"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":443,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":444,"author":{"gitId":"rama-pang"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":445,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":446,"author":{"gitId":"izzahaj"},"content":"* 2a. The given patient index is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":447,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":448,"author":{"gitId":"izzahaj"},"content":"    * 2a1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":449,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":450,"author":{"gitId":"rama-pang"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":451,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":452,"author":{"gitId":"izzahaj"},"content":"* 2b. The given task details is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":453,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":454,"author":{"gitId":"izzahaj"},"content":"    * 2b1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":455,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":456,"author":{"gitId":"rama-pang"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":457,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":458,"author":{"gitId":"rama-pang"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":459,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":460,"author":{"gitId":"izzahaj"},"content":"**Use case: UC07 - Edit a task associated with a specified patient**","lastModifiedDate":"2022-10-08"},{"lineNumber":461,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":462,"author":{"gitId":"rama-pang"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":464,"author":{"gitId":"izzahaj"},"content":"1. User requests to \u003cu\u003eview the list patients (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-10-08"},{"lineNumber":465,"author":{"gitId":"izzahaj"},"content":"2. User requests to edit a task with its description they want to change, by specifying the specific patient and specific task.","lastModifiedDate":"2022-10-08"},{"lineNumber":466,"author":{"gitId":"izzahaj"},"content":"3. UniNurse edits the task description of the chosen task of the specified patient.","lastModifiedDate":"2022-10-08"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":468,"author":{"gitId":"rama-pang"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":469,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":470,"author":{"gitId":"rama-pang"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":471,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":472,"author":{"gitId":"izzahaj"},"content":"* 2a. The given patient index is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":473,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":474,"author":{"gitId":"izzahaj"},"content":"    * 2a1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":475,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":476,"author":{"gitId":"rama-pang"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":477,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":478,"author":{"gitId":"izzahaj"},"content":"* 2b. The given task index of the specified patient is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":479,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":480,"author":{"gitId":"izzahaj"},"content":"    * 2b1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":481,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":482,"author":{"gitId":"rama-pang"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":483,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":484,"author":{"gitId":"izzahaj"},"content":"* 2c. The given task details is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":485,"author":{"gitId":"rama-pang"},"content":"  ","lastModifiedDate":"2022-09-29"},{"lineNumber":486,"author":{"gitId":"izzahaj"},"content":"    * 2c1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":487,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":488,"author":{"gitId":"rama-pang"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":489,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":490,"author":{"gitId":"rama-pang"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":491,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":492,"author":{"gitId":"izzahaj"},"content":"**Use case: UC08 - Delete a task associated with a specified patient**","lastModifiedDate":"2022-10-08"},{"lineNumber":493,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":494,"author":{"gitId":"izzahaj"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":495,"author":{"gitId":"izzahaj"},"content":"1. User requests to \u003cu\u003eview the list patients (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-10-08"},{"lineNumber":496,"author":{"gitId":"izzahaj"},"content":"2. User requests to delete a task by specifying the specific patient and specific task.","lastModifiedDate":"2022-10-08"},{"lineNumber":497,"author":{"gitId":"izzahaj"},"content":"3. UniNurse deletes the task of the specified patient.","lastModifiedDate":"2022-10-08"},{"lineNumber":498,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":499,"author":{"gitId":"izzahaj"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":500,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":501,"author":{"gitId":"izzahaj"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":502,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":503,"author":{"gitId":"izzahaj"},"content":"* 2a. The given patient index is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":504,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":505,"author":{"gitId":"izzahaj"},"content":"  * 2a1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":506,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":507,"author":{"gitId":"izzahaj"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":508,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":509,"author":{"gitId":"izzahaj"},"content":"* 2b. The given task index of the specified patient is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":510,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":511,"author":{"gitId":"izzahaj"},"content":"    * 2b1. UniNurse shows an error message.","lastModifiedDate":"2022-10-08"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":514,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":515,"author":{"gitId":"izzahaj"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":516,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":517,"author":{"gitId":"izzahaj"},"content":"**Use case: UC09 - See the list of tasks to be completed**","lastModifiedDate":"2022-10-08"},{"lineNumber":518,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":519,"author":{"gitId":"BlopApple"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":520,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":521,"author":{"gitId":"izzahaj"},"content":"1.  User requests to list tasks.","lastModifiedDate":"2022-10-01"},{"lineNumber":522,"author":{"gitId":"izzahaj"},"content":"2.  UniNurse shows a list of tasks together with patient name.","lastModifiedDate":"2022-10-01"},{"lineNumber":523,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":524,"author":{"gitId":"BlopApple"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":525,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":526,"author":{"gitId":"BlopApple"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":527,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":528,"author":{"gitId":"BlopApple"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":529,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":530,"author":{"gitId":"BlopApple"},"content":"  Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":531,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":532,"author":{"gitId":"BlopApple"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":533,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":534,"author":{"gitId":"izzahaj"},"content":"**Use case: UC10 - See the list of tasks associated with a specific patient**","lastModifiedDate":"2022-10-08"},{"lineNumber":535,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":536,"author":{"gitId":"BlopApple"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":537,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":538,"author":{"gitId":"izzahaj"},"content":"1.  User requests to list tasks for patient at a specified index.","lastModifiedDate":"2022-10-01"},{"lineNumber":539,"author":{"gitId":"izzahaj"},"content":"2.  UniNurse shows a list of tasks for the specified patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":540,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":541,"author":{"gitId":"BlopApple"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":542,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":543,"author":{"gitId":"BlopApple"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":544,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":545,"author":{"gitId":"BlopApple"},"content":"* 1a. The given index is invalid or out of range.","lastModifiedDate":"2022-09-28"},{"lineNumber":546,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":547,"author":{"gitId":"BlopApple"},"content":"    * 1a1. UniNurse shows an error message.","lastModifiedDate":"2022-09-28"},{"lineNumber":548,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":549,"author":{"gitId":"BlopApple"},"content":"      Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":550,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":551,"author":{"gitId":"BlopApple"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":552,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":553,"author":{"gitId":"BlopApple"},"content":"  Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":554,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":555,"author":{"gitId":"Ramanathan0908"},"content":"---","lastModifiedDate":"2022-10-19"},{"lineNumber":556,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":557,"author":{"gitId":"Ramanathan0908"},"content":"**Use case: UC11 - See the list of patients with tasks on current day**","lastModifiedDate":"2022-10-19"},{"lineNumber":558,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":559,"author":{"gitId":"Ramanathan0908"},"content":"**MSS**","lastModifiedDate":"2022-10-19"},{"lineNumber":560,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":561,"author":{"gitId":"Ramanathan0908"},"content":"1. User requests to list patients with tasks for the current day.","lastModifiedDate":"2022-10-19"},{"lineNumber":562,"author":{"gitId":"Ramanathan0908"},"content":"2. UniNurse shows a list of patients with tasks for that day.","lastModifiedDate":"2022-10-19"},{"lineNumber":563,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":564,"author":{"gitId":"Ramanathan0908"},"content":"   Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":565,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":566,"author":{"gitId":"Ramanathan0908"},"content":"**Extensions**","lastModifiedDate":"2022-10-19"},{"lineNumber":567,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":568,"author":{"gitId":"Ramanathan0908"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-19"},{"lineNumber":569,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":570,"author":{"gitId":"Ramanathan0908"},"content":"  Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":571,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":572,"author":{"gitId":"Ramanathan0908"},"content":"---","lastModifiedDate":"2022-10-19"},{"lineNumber":573,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":574,"author":{"gitId":"Ramanathan0908"},"content":"**Use case: UC12 - See the list of tasks on a particular day**","lastModifiedDate":"2022-10-19"},{"lineNumber":575,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":576,"author":{"gitId":"Ramanathan0908"},"content":"**MSS**","lastModifiedDate":"2022-10-19"},{"lineNumber":577,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":578,"author":{"gitId":"Ramanathan0908"},"content":"1. User requests to list tasks on a particular day.","lastModifiedDate":"2022-10-19"},{"lineNumber":579,"author":{"gitId":"Ramanathan0908"},"content":"2. UniNurse shows the list of tasks on that particular day.","lastModifiedDate":"2022-10-19"},{"lineNumber":580,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":581,"author":{"gitId":"Ramanathan0908"},"content":"   Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":582,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":583,"author":{"gitId":"Ramanathan0908"},"content":"**Extensions**","lastModifiedDate":"2022-10-19"},{"lineNumber":584,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":585,"author":{"gitId":"Ramanathan0908"},"content":"* 1a. The given date is invalid or wrong format.","lastModifiedDate":"2022-10-19"},{"lineNumber":586,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":587,"author":{"gitId":"Ramanathan0908"},"content":"    * 1a1. UniNurse shows an error message.","lastModifiedDate":"2022-10-19"},{"lineNumber":588,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":589,"author":{"gitId":"Ramanathan0908"},"content":"      Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":590,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":591,"author":{"gitId":"Ramanathan0908"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-19"},{"lineNumber":592,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":593,"author":{"gitId":"Ramanathan0908"},"content":"  Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":595,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"BlopApple"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":598,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":599,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"izzahaj"},"content":"4. Any user action should produce a result within 1 second.","lastModifiedDate":"2022-09-29"},{"lineNumber":605,"author":{"gitId":"izzahaj"},"content":"5. Each person should be able to hold up to 50 tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":606,"author":{"gitId":"izzahaj"},"content":"6. A user should be able to easily access tasks associated with a patient.","lastModifiedDate":"2022-09-29"},{"lineNumber":607,"author":{"gitId":"izzahaj"},"content":"7. The product is not required to handle data between multiple users.","lastModifiedDate":"2022-09-29"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"BlopApple"},"content":"* **Private Nurse**: A private duty nurse who is self-employed or works for a home health care organization and provides nursing care to patients with restricted mobility or ability for self-care","lastModifiedDate":"2022-09-28"},{"lineNumber":614,"author":{"gitId":"BlopApple"},"content":"* **PPE**: Personal Protective Equipment is equipment worn to minimize exposure to hazards that cause serious workplace injuries and illnesses","lastModifiedDate":"2022-09-28"},{"lineNumber":615,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"izzahaj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a","lastModifiedDate":"2022-10-08"},{"lineNumber":625,"author":{"gitId":"izzahaj"},"content":"starting point for testers to work on; testers are expected to do more *exploratory* testing.","lastModifiedDate":"2022-10-08"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"izzahaj"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2022-09-29"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"izzahaj"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2022-09-29"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"izzahaj"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"BlopApple":84,"rama-pang":38,"Ramanathan0908":72,"shogun187":11,"izzahaj":100,"-":364}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"**UniNurse** is a desktop app tailored for you, a **private duty nurse**, to:","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"- Manage your patients\u0027 contacts.","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"- Organize your patient-related tasks.","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"- Keep track of your patients\u0027 medical conditions.","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"**Fastest fingers first!**","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"If your fingers are as quick as your wit, UniNurse helps you to get your patient management tasks done in no time!","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"It leverages on a no-frills _Command Line Interface (CLI)_ to give fast typists such as yourself a painless user","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"experience.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"UniNurse offers the following features:","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"- Add details such as phone numbers, addresses and more.","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"- Find any patient by name _(more to be added later...)_.","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"- Add tasks to a patient.","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"- Categorize patients using tags.","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"### Using this guide","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"This guide walks you through all the features of UniNurse, as well as tips, so you can reap all the benefits of","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"UniNurse!","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"If you are a **new user**, this guide equips you with the necessary know-how to [get started](#quick-start)","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"with UniNurse.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"If you are an **experienced user**, you can refer to the [Command Summary](#command-summary) at the end of this guide.","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"### Table of Contents","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"1. Ensure you have [Java 11](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html) or above ","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"   installed on your computer. To check your Java version, open a Command Prompt or Terminal window and type:","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"```","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"java -version","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"```","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"2. Download the latest `uninurse.jar` [here](https://github.com/AY2223S1-CS2103T-T12-4/tp/releases).","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"3. Move `uninurse.jar` to the folder you want to use as the home folder for UniNurse.","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"4. Double-click the file to start UniNurse. A user interface similar to the one below should appear in a few seconds.","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":":bulb: **Tip:** The app comes with some sample contacts by default. Type `clear` in the command box to remove them.","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"  ![Ui](images/Ui.png)","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"5. Type your command in the command box and hit `Enter` to execute the command. Here are some example commands","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"you can try:","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"   * **`help`**: Opens the help window.","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"shogun187"},"content":"   * **`add`**`n/Jane Doe p/91234567 e/janed@example.com a/20 Anderson Road, block 123, #01-01`: Adds a","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"     patient named `Jane Doe` to your contacts.","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"   * **`delete`**`3`: Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"   * **`list`**: Lists all contacts.","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"   * **`clear`**: Deletes all contacts.","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"   * **`exit`**: Exits from UniNurse.","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"6. Refer to the [Features](#features) below for details of each command. Alternatively, you may refer to the","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"   [Command Summary](#command-summary) at the end of this guide.","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"**Before we begin, let us understand the technical terminologies used:**","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"| Word         | Meaning                                                                                                                                                                                   |","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"|--------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"| Command      | A sentence which the user inputs to                                                                                                                                                       |","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"| Command word | The first word of every command.                                                                                                                                                          |","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"| Option       | Part of the user input specifying the options for a command, which is preceded by a flag.                                                                                                 |","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"| Flag         | Part of the user input that allows the user to specify the specific options for a command, consisting of a letter preceded by a hyphen. \u003cbr\u003e Type of flags: `-p`, `-t`.                   |","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"| Parameter    | Part of the user input consisting of information supplied by the user to UniNurse, which is preceded by a prefix.                                                                         |","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"| Prefix       | Part of the user input that allows the user to specify information for a patient, consisting of a letter preceded by a hyphen. \u003cbr\u003e Type of prefixes: `n/`, `p/`, `e/`, `a/`, `t/`, `d/`. |","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"rama-pang"},"content":"* All flags and options must be specified before any prefix or parameter.","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"rama-pang"},"content":"* Flags can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"rama-pang"},"content":"  e.g. if the command specifies `-p PATIENT_INDEX -t TASK_INDEX`, `-t TASK_INDEX -p PATIENT_INDEX` is also acceptable.","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"rama-pang"},"content":"* There must be a space separating a flag and an option.","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"shogun187"},"content":"* Parameters in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"shogun187"},"content":"* Parameters with `…` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"  e.g. `[t/TAG]…` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"izzahaj"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"izzahaj"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2022-10-08"},{"lineNumber":134,"author":{"gitId":"izzahaj"},"content":"_Help window displayed after running the `help` command_","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"rama-pang"},"content":"### Adding a patient: `add`","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"Ramanathan0908"},"content":"Adds a patient to the patient list.","lastModifiedDate":"2022-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"Ramanathan0908"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [d/TASK_DESCRIPTION | DATE TIME]… [t/TAG]…`","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"Ramanathan0908"},"content":"* Date and time should be in the format like 16-10-2022 1030","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"Ramanathan0908"},"content":"* If not date and time is provided, then a default date and time of 24 hours from creation will be set","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"Ramanathan0908"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/Administer 3ml of example medicine | 16-10-2022 10:30 t/Severe`","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"Ramanathan0908"},"content":"* `add n/Betsy Crowe p/87901234 e/betsy@example.com a/Jane street blk 420 #01-69 d/Change dressing on left arm t/Low Risk`","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"rama-pang"},"content":"### Editing a patient’s details : `edit -p`","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"shogun187"},"content":"Edits an existing patient in the patient list.","lastModifiedDate":"2022-09-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"rama-pang"},"content":"Format: `edit -p INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]`","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"shogun187"},"content":"* Edits the patient at the specified `INDEX`.","lastModifiedDate":"2022-09-28"},{"lineNumber":156,"author":{"gitId":"shogun187"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2022-09-28"},{"lineNumber":157,"author":{"gitId":"izzahaj"},"content":"* The index ***must be a positive integer*** 1, 2, 3, …","lastModifiedDate":"2022-09-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"shogun187"},"content":"* When editing tags, the existing tags of the patient will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-09-28"},{"lineNumber":161,"author":{"gitId":"shogun187"},"content":"* You can remove all the patient’s tags by typing t/ without specifying any tags after it.","lastModifiedDate":"2022-09-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"shogun187"},"content":"Example:","lastModifiedDate":"2022-09-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":165,"author":{"gitId":"rama-pang"},"content":"* `edit -p 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st patient to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"rama-pang"},"content":"* `edit -p 2 n/Betsy Crower t/` Edits the name of the 2nd patient to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":168,"author":{"gitId":"rama-pang"},"content":"### Deleting a patient: `delete -p`","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":170,"author":{"gitId":"izzahaj"},"content":"Deletes the specified patient from the patient list.","lastModifiedDate":"2022-10-01"},{"lineNumber":171,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":172,"author":{"gitId":"rama-pang"},"content":"Format: `delete -p INDEX`","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":174,"author":{"gitId":"izzahaj"},"content":"* Deletes the patient at the specified `INDEX`.","lastModifiedDate":"2022-10-01"},{"lineNumber":175,"author":{"gitId":"izzahaj"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2022-10-01"},{"lineNumber":176,"author":{"gitId":"izzahaj"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-10-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-01"},{"lineNumber":179,"author":{"gitId":"rama-pang"},"content":"* `list` followed by `delete -p 2` deletes the 2nd patient in the patient book.","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"shogun187"},"content":"* `find Betsy` followed by `delete -p 1` deletes the 1st patient in the results of the `find` command.","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":182,"author":{"gitId":"izzahaj"},"content":"### Listing all patients: `list`","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":184,"author":{"gitId":"izzahaj"},"content":"Shows a list of all patients.","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":186,"author":{"gitId":"shogun187"},"content":"Format: `list`","lastModifiedDate":"2022-09-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Ramanathan0908"},"content":"### Listing all patients for the day: `patientsToday`","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"Ramanathan0908"},"content":"Shows a list of all patients with tasks due today","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"Ramanathan0908"},"content":"Format: `patientsToday`","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"shogun187"},"content":"### Finding patient by name: `find`","lastModifiedDate":"2022-09-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"shogun187"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2022-09-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"shogun187"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2022-09-28"},{"lineNumber":201,"author":{"gitId":"shogun187"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2022-09-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2022-09-28"},{"lineNumber":203,"author":{"gitId":"shogun187"},"content":"* Partial words can be matched e.g. `Han` will match `Hans`.","lastModifiedDate":"2022-10-07"},{"lineNumber":204,"author":{"gitId":"shogun187"},"content":"* Patients matching at least one keyword will be returned (i.e. OR search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2022-09-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"shogun187"},"content":"* `find jo` returns `Joe` and `John`.","lastModifiedDate":"2022-09-28"},{"lineNumber":208,"author":{"gitId":"izzahaj"},"content":"* `find alex david` returns `Alex Yeoh` \u0026 `David Li`.","lastModifiedDate":"2022-10-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"izzahaj"},"content":"  _Contact list displayed after running the `find alex david` command_","lastModifiedDate":"2022-10-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"rama-pang"},"content":"### Adding a task: `add -p`","lastModifiedDate":"2022-10-13"},{"lineNumber":213,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":214,"author":{"gitId":"izzahaj"},"content":"Adds a task associated with a patient.","lastModifiedDate":"2022-10-08"},{"lineNumber":215,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":216,"author":{"gitId":"shogun187"},"content":"Format: `add -p PATIENT_INDEX d/TASK_DESCRIPTION`","lastModifiedDate":"2022-10-17"},{"lineNumber":217,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":218,"author":{"gitId":"rama-pang"},"content":"* Adds a task to a patient at the specified `PATIENT_INDEX`.","lastModifiedDate":"2022-09-28"},{"lineNumber":219,"author":{"gitId":"rama-pang"},"content":"* The patient index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2022-09-28"},{"lineNumber":220,"author":{"gitId":"rama-pang"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-09-28"},{"lineNumber":221,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":222,"author":{"gitId":"rama-pang"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":223,"author":{"gitId":"shogun187"},"content":"* `list` followed by `add -p 1 d/Administer 3ml of example medicine` adds a task to the 1st patient in the patient list.","lastModifiedDate":"2022-10-17"},{"lineNumber":224,"author":{"gitId":"shogun187"},"content":"* `find Betsy` followed by `add -p 2 d/Change dressing on left arm` adds a task to the 2nd patient in results of the `find` command.","lastModifiedDate":"2022-10-17"},{"lineNumber":225,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":226,"author":{"gitId":"rama-pang"},"content":"### Editing a task: `edit -p -t`","lastModifiedDate":"2022-10-13"},{"lineNumber":227,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":228,"author":{"gitId":"rama-pang"},"content":"Edits the specified task associated with a patient.","lastModifiedDate":"2022-09-28"},{"lineNumber":229,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":230,"author":{"gitId":"shogun187"},"content":"Format: `edit -p PATIENT_INDEX -t TASK_INDEX d/TASK_DESCRIPTION`","lastModifiedDate":"2022-10-17"},{"lineNumber":231,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":232,"author":{"gitId":"rama-pang"},"content":"* Edits the task at the specified `TASK_INDEX` of the patient at the specified `PATIENT_INDEX`.","lastModifiedDate":"2022-09-28"},{"lineNumber":233,"author":{"gitId":"rama-pang"},"content":"* The task index refers to the index number shown in the task list of a patient.","lastModifiedDate":"2022-09-28"},{"lineNumber":234,"author":{"gitId":"rama-pang"},"content":"* The patient index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2022-09-28"},{"lineNumber":235,"author":{"gitId":"rama-pang"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-09-28"},{"lineNumber":236,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":237,"author":{"gitId":"rama-pang"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":238,"author":{"gitId":"shogun187"},"content":"* `list` followed by `edit -p 1 -t 1 d/Administer 3ml of example medicine` edits the description of the 1st task of the 1st patient in the patient list to `Administer 3ml of example medicine`.","lastModifiedDate":"2022-10-17"},{"lineNumber":239,"author":{"gitId":"shogun187"},"content":"* `find Betsy` followed by `edit -p 2 -t 3 d/Change dressing on left arm` edits the description of the 3rd task of the 2nd patient in results of the `find` command to `Change dressing on left arm`.","lastModifiedDate":"2022-10-17"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":241,"author":{"gitId":"rama-pang"},"content":"### Deleting a task: `delete -p -t`","lastModifiedDate":"2022-10-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":243,"author":{"gitId":"izzahaj"},"content":"Deletes the specified task associated with a patient.","lastModifiedDate":"2022-09-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":245,"author":{"gitId":"rama-pang"},"content":"Format: `delete -p PATIENT_INDEX -t TASK_INDEX`","lastModifiedDate":"2022-10-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":247,"author":{"gitId":"izzahaj"},"content":"* Deletes the task at the specified `TASK_INDEX` of the patient at the specified `PATIENT_INDEX`.","lastModifiedDate":"2022-09-21"},{"lineNumber":248,"author":{"gitId":"izzahaj"},"content":"* The task index refers to the index number shown in the task list of a patient.","lastModifiedDate":"2022-09-21"},{"lineNumber":249,"author":{"gitId":"izzahaj"},"content":"* The patient index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2022-09-21"},{"lineNumber":250,"author":{"gitId":"izzahaj"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-09-28"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-21"},{"lineNumber":253,"author":{"gitId":"shogun187"},"content":"* `list` followed by `delete -p 2 -t 3` deletes the 3rd task of the 2nd patient in the patient list.","lastModifiedDate":"2022-10-17"},{"lineNumber":254,"author":{"gitId":"shogun187"},"content":"* `find Betsy` followed by `delete -p 1 -t 2` deletes the 2nd task of the 1st patient in results of the `find` command.","lastModifiedDate":"2022-10-17"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":256,"author":{"gitId":"izzahaj"},"content":"### Listing all tasks: `listTask`","lastModifiedDate":"2022-09-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":258,"author":{"gitId":"izzahaj"},"content":"Shows a list of all tasks to be completed.","lastModifiedDate":"2022-09-30"},{"lineNumber":259,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":260,"author":{"gitId":"izzahaj"},"content":"Format: `listTask`","lastModifiedDate":"2022-09-30"},{"lineNumber":261,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":262,"author":{"gitId":"izzahaj"},"content":"Examples:","lastModifiedDate":"2022-09-30"},{"lineNumber":263,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":264,"author":{"gitId":"izzahaj"},"content":"Suppose the following patients were added.","lastModifiedDate":"2022-09-30"},{"lineNumber":265,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":266,"author":{"gitId":"rama-pang"},"content":"`add n/John Doe d/Administer 3ml of example medicine`","lastModifiedDate":"2022-10-13"},{"lineNumber":267,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":268,"author":{"gitId":"rama-pang"},"content":"`add n/Betsy Crowe d/Change dressing on left arm`","lastModifiedDate":"2022-10-13"},{"lineNumber":269,"author":{"gitId":"izzahaj"},"content":"* `listTask` will display:","lastModifiedDate":"2022-09-30"},{"lineNumber":270,"author":{"gitId":"izzahaj"},"content":"  * `Administer 3ml of example medicine FOR John Doe`","lastModifiedDate":"2022-09-30"},{"lineNumber":271,"author":{"gitId":"izzahaj"},"content":"  * `Change dressing on left arm FOR Betsy Crowe`","lastModifiedDate":"2022-09-30"},{"lineNumber":272,"author":{"gitId":"izzahaj"},"content":"  ","lastModifiedDate":"2022-09-30"},{"lineNumber":273,"author":{"gitId":"izzahaj"},"content":"### View all tasks associated with a patient: `viewTask`","lastModifiedDate":"2022-09-30"},{"lineNumber":274,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":275,"author":{"gitId":"izzahaj"},"content":"Shows all the tasks that are associated with the specified patient.","lastModifiedDate":"2022-09-30"},{"lineNumber":276,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":277,"author":{"gitId":"izzahaj"},"content":"Format: `viewTask INDEX`","lastModifiedDate":"2022-09-30"},{"lineNumber":278,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":279,"author":{"gitId":"izzahaj"},"content":"Examples:","lastModifiedDate":"2022-09-30"},{"lineNumber":280,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":281,"author":{"gitId":"izzahaj"},"content":"Suppose the following patients were added.","lastModifiedDate":"2022-09-30"},{"lineNumber":282,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":283,"author":{"gitId":"rama-pang"},"content":"`add n/John Doe d/Administer 3ml of example medicine`","lastModifiedDate":"2022-10-13"},{"lineNumber":284,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":285,"author":{"gitId":"rama-pang"},"content":"`add n/Betsy Crowe d/Change dressing on left arm`","lastModifiedDate":"2022-10-13"},{"lineNumber":286,"author":{"gitId":"izzahaj"},"content":"* `viewTask 1` will display:","lastModifiedDate":"2022-09-30"},{"lineNumber":287,"author":{"gitId":"izzahaj"},"content":"  * `Administer 3ml of example medicine`","lastModifiedDate":"2022-09-30"},{"lineNumber":288,"author":{"gitId":"izzahaj"},"content":"* `viewTask 2` will display:","lastModifiedDate":"2022-09-30"},{"lineNumber":289,"author":{"gitId":"izzahaj"},"content":"  * `Change dressing on left arm`","lastModifiedDate":"2022-09-30"},{"lineNumber":290,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":291,"author":{"gitId":"-"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"izzahaj"},"content":"Clears all patient entries.","lastModifiedDate":"2022-09-30"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"izzahaj"},"content":"UniNurse data are saved in the hard disk automatically after any command that changes the data. ","lastModifiedDate":"2022-09-21"},{"lineNumber":306,"author":{"gitId":"izzahaj"},"content":"There is no need to save manually.","lastModifiedDate":"2022-09-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":310,"author":{"gitId":"izzahaj"},"content":"UniNurse data are saved as a JSON file `[JAR file location]/data/uninurse.json`.","lastModifiedDate":"2022-10-08"},{"lineNumber":311,"author":{"gitId":"izzahaj"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-21"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":313,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":314,"author":{"gitId":"izzahaj"},"content":"If your changes to the data file makes its format invalid, UniNurse will discard all data and start with an empty","lastModifiedDate":"2022-10-08"},{"lineNumber":315,"author":{"gitId":"izzahaj"},"content":"data file at the next run.","lastModifiedDate":"2022-10-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":318,"author":{"gitId":"izzahaj"},"content":"### Adding recurring tasks `[coming in v1.3]`","lastModifiedDate":"2022-09-21"},{"lineNumber":319,"author":{"gitId":"izzahaj"},"content":"_Details coming soon ..._","lastModifiedDate":"2022-09-21"},{"lineNumber":320,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2022-10-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":330,"author":{"gitId":"izzahaj"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2022-10-08"},{"lineNumber":331,"author":{"gitId":"izzahaj"},"content":"the data of your previous UniNurse home folder.","lastModifiedDate":"2022-10-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2022-09-21"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"izzahaj"},"content":"| Action                          | Format                                                                       |","lastModifiedDate":"2022-09-21"},{"lineNumber":338,"author":{"gitId":"rama-pang"},"content":"|---------------------------------|------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-13"},{"lineNumber":339,"author":{"gitId":"izzahaj"},"content":"| **Help**                        | `help`                                                                       |","lastModifiedDate":"2022-09-21"},{"lineNumber":340,"author":{"gitId":"rama-pang"},"content":"| **Add patient**                 | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [d/TASK_DESCRIPTION]… [t/TAG]…` |","lastModifiedDate":"2022-10-13"},{"lineNumber":341,"author":{"gitId":"rama-pang"},"content":"| **Edit patient**                | `edit -p INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…`     |","lastModifiedDate":"2022-10-13"},{"lineNumber":342,"author":{"gitId":"rama-pang"},"content":"| **Delete patient**              | `delete -p INDEX`                                                            |","lastModifiedDate":"2022-10-13"},{"lineNumber":343,"author":{"gitId":"izzahaj"},"content":"| **List all patients**           | `list`                                                                       |","lastModifiedDate":"2022-09-21"},{"lineNumber":344,"author":{"gitId":"Ramanathan0908"},"content":"| **List all patients today**     | `patientsToday`                                                              |","lastModifiedDate":"2022-10-16"},{"lineNumber":345,"author":{"gitId":"izzahaj"},"content":"| **Find patient**                | `find KEYWORD [MORE_KEYWORDS]`                                               |","lastModifiedDate":"2022-09-21"},{"lineNumber":346,"author":{"gitId":"shogun187"},"content":"| **Add task**                    | `add -p PATIENT_INDEX d/TASK_DESCRIPTION`                                    |","lastModifiedDate":"2022-10-17"},{"lineNumber":347,"author":{"gitId":"shogun187"},"content":"| **Edit task**                   | `edit -p PATIENT_INDEX -t TASK_INDEX d/TASK_DESCRIPTION`                     |","lastModifiedDate":"2022-10-17"},{"lineNumber":348,"author":{"gitId":"rama-pang"},"content":"| **Delete task**                 | `delete -p PATIENT_INDEX -t TASK_INDEX`                                      |","lastModifiedDate":"2022-10-13"},{"lineNumber":349,"author":{"gitId":"izzahaj"},"content":"| **List all tasks**              | `listTask`                                                                   |","lastModifiedDate":"2022-09-21"},{"lineNumber":350,"author":{"gitId":"izzahaj"},"content":"| **View all tasks of a patient** | `viewTask INDEX`                                                             |","lastModifiedDate":"2022-09-21"},{"lineNumber":351,"author":{"gitId":"izzahaj"},"content":"| **Clear all patients**          | `clear`                                                                      |","lastModifiedDate":"2022-09-21"},{"lineNumber":352,"author":{"gitId":"izzahaj"},"content":"| **Exit**                        | `exit`                                                                       |","lastModifiedDate":"2022-09-21"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rama-pang":59,"Ramanathan0908":13,"shogun187":29,"izzahaj":124,"-":128}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"rama-pang"},"content":"    content: \"UniNurse\";","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"rama-pang":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"title: UniNurse","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T12-4/tp/branch/master/graph/badge.svg?token\u003dBVXZ3UNHW2)](https://codecov.io/gh/AY2223S1-CS2103T-T12-4/tp)","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rama-pang":1,"-":17}},{"path":"docs/team/blopapple.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"title: Lau Jun Jie\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"## Project: UniNurse","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"UniNurse is a desktop application used for managing patient contact details and tasks. The user interacts with it using","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"## Contributions to project","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"### New feature: added the ability to...","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"Added the ability to ...","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"* What it does:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"* Justification:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"* Highlights:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"* Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"### Code contributed","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"[RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dblopapple\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"### Enhancements to existing features","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"### Contributions to User Guide","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"* Added documentation for the `listTask` feature [\\#53]()","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"* Added documentation for the `viewTask` feature [\\#53]()","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"### Contributions to Developer Guide","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"* Updated User Profile [\\#46]()","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"* Updated Value Proposition [\\#46]()","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"* Updated User Stories [\\#46]()","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"* Updated Glossary [\\#49]()","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"### Contributions beyond project team","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"BlopApple":38}},{"path":"docs/team/izzahaj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"layout: page","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"title: \u0027Izzah Bte Abdul Jalil\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"## Project: UniNurse","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"UniNurse is a desktop application used for managing patient contact details and tasks. The user interacts with it using","lastModifiedDate":"2022-09-22"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-22"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"## Contributions to project","lastModifiedDate":"2022-09-22"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"### New feature: added the ability to...","lastModifiedDate":"2022-09-22"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"Added the ability to ...","lastModifiedDate":"2022-09-22"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"* What it does:","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"* Justification:","lastModifiedDate":"2022-09-22"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"* Highlights:","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"* Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-22"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"### Code contributed","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"[RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dizzahaj\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"### Enhancements to existing features","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"### Contributions to User Guide","lastModifiedDate":"2022-09-22"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"* Added documentation for the `deleteTask` feature [\\#59]()","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"* Updated screenshot of help window for the `help` feature [\\#59]()","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"### Contributions to Developer Guide","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"### Contributions beyond project team","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"izzahaj":34}},{"path":"docs/team/rama-pang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"title: Rama Aryasuta Pangestu\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"## Project: UniNurse","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"UniNurse is a desktop application used for managing patient contact details and tasks. The user interacts with it using","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"## Contributions to project","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"### New feature: added the ability to...","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"Added the ability to ...","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"* What it does:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"* Justification:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"* Highlights:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"* Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"### Code contributed","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"[RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003drama-pang\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"### Enhancements to existing features","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"### Contributions to User Guide","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"### Contributions to Developer Guide","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"### Contributions beyond project team","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"rama-pang":32}},{"path":"docs/team/ramanathan0908.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ramanathan0908"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"title: Ramanathan Kumarappan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"## Project: UniNurse","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"UniNurse is a desktop application used for managing patient contact details and tasks. The user interacts with it using","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"## Contributions to project","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"### New feature: added the ability to...","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"Added the ability to ...","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"* What it does:","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"* Justification:","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"* Highlights:","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"* Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"### Code contributed","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"[RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dramanathan0908\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":"### Enhancements to existing features","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"Ramanathan0908"},"content":"### Contributions to User Guide","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"* Added documentation for the `addPatient` feature [\\#51]()","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"* Added documentation for the `deletePatient` feature [\\#51]()","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"### Contributions to Developer Guide","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-09-24"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"Ramanathan0908"},"content":"### Contributions beyond project team","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"Ramanathan0908":34}},{"path":"docs/team/shogun187.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"title: Shaugn Tan Sean Hon\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"## Project: UniNurse","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"UniNurse is a desktop application used for managing patient contact details and tasks. The user interacts with it using","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"## Contributions to project","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"### New feature: added the ability to...","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"Added the ability to ...","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"* What it does:","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"* Justification:","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"* Highlights:","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"* Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"### Code contributed","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"[RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dshogun187\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"### Enhancements to existing features","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"### Contributions to User Guide","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"* Added documentation for the `editPatient` feature [\\#50]()","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"* Added documentation for the `findPatient` feature [\\#50]()","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"### Contributions to Developer Guide","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"### Contributions beyond project team","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"shogun187":34}},{"path":"src/main/java/seedu/uninurse/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.FileUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"BlopApple":3,"-":61}},{"path":"src/main/java/seedu/uninurse/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"BlopApple":1,"-":24}},{"path":"src/main/java/seedu/uninurse/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Config;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Version;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.StringUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.Logic;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.LogicManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.storage.JsonUninurseBookStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.storage.Storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.storage.StorageManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.storage.UninurseBookStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.ui.Ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.ui.UiManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing UninurseBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"        UninurseBookStorage uninurseBookStorage \u003d new JsonUninurseBookStorage(userPrefs.getUninurseBookFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"        storage \u003d new StorageManager(uninurseBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s uninurse book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"     * The data from the sample uninurse book will be used instead if {@code storage}\u0027s uninurse book is not found,","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"     * or an empty uninurse book will be used instead if errors occur when reading {@code storage}\u0027s uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"        Optional\u003cReadOnlyUninurseBook\u003e uninurseBookOptional;","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"        ReadOnlyUninurseBook initialData;","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"BlopApple"},"content":"            uninurseBookOptional \u003d storage.readUninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"BlopApple"},"content":"            if (!uninurseBookOptional.isPresent()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"BlopApple"},"content":"                logger.info(\"Data file not found. Will be starting with a sample UninurseBook\");","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"BlopApple"},"content":"            initialData \u003d uninurseBookOptional.orElseGet(SampleDataUtil::getSampleUninurseBook);","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"BlopApple"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty UninurseBook\");","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"BlopApple"},"content":"            initialData \u003d new UninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"BlopApple"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty UninurseBook\");","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"BlopApple"},"content":"            initialData \u003d new UninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"BlopApple"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty UninurseBook\");","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"BlopApple"},"content":"        logger.info(\"Starting UninurseBook \" + MainApp.VERSION);","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"BlopApple"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping UniNurse Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":43,"izzahaj":1,"-":139}},{"path":"src/main/java/seedu/uninurse/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.core;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    public static final int HISTORY_SIZE_LIMIT \u003d 100;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    public static final int UNDO_LIMIT \u003d 100;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":1,"rama-pang":5,"-":62}},{"path":"src/main/java/seedu/uninurse/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.core;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":1,"-":78}},{"path":"src/main/java/seedu/uninurse/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.core;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"    private static final String LOG_FILE \u003d \"uninursebook.log\";","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":2,"-":110}},{"path":"src/main/java/seedu/uninurse/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.core;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    public static final String MESSAGE_INVALID_TASK_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":1,"izzahaj":1,"-":12}},{"path":"src/main/java/seedu/uninurse/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.core;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":1,"-":115}},{"path":"src/main/java/seedu/uninurse/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.core.index;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"BlopApple":1,"-":53}},{"path":"src/main/java/seedu/uninurse/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":1,"-":10}},{"path":"src/main/java/seedu/uninurse/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":1,"-":20}},{"path":"src/main/java/seedu/uninurse/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.MainApp;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BlopApple":2,"-":40}},{"path":"src/main/java/seedu/uninurse/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":1,"-":34}},{"path":"src/main/java/seedu/uninurse/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Config;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BlopApple":3,"-":20}},{"path":"src/main/java/seedu/uninurse/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":1,"-":82}},{"path":"src/main/java/seedu/uninurse/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":3,"-":140}},{"path":"src/main/java/seedu/uninurse/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"     *   Ignores case and allows partial word match.","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //partial word match","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"        for (int i \u003d 0; i \u003c wordsInPreppedSentence.length; i++) {","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"            if (wordsInPreppedSentence[i].contains(preppedWord)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"                return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"        return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":2,"shogun187":10,"-":59}},{"path":"src/main/java/seedu/uninurse/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.CommandResult;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"     * Returns the UninurseBook.","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"     * @see seedu.uninurse.model.Model#getUninurseBook()","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"    ReadOnlyUninurseBook getUninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    ObservableList\u003cPatient\u003e getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"    /** Returns a supplier to get the flag to display tasks */","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"    Supplier\u003cBoolean\u003e getTaskListFlagSupplier();","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"     * Returns the user prefs\u0027 uninurse book file path.","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"    Path getUninurseBookFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BlopApple":15,"rama-pang":1,"-":38}},{"path":"src/main/java/seedu/uninurse/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.Command;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.CommandResult;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.UninurseBookParser;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.storage.Storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"    private final UninurseBookParser uninurseBookParser;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"        uninurseBookParser \u003d new UninurseBookParser();","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"        Command command \u003d uninurseBookParser.parseCommand(commandText);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"            storage.saveUninurseBook(model.getUninurseBook());","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"            if (command.isUndoable()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"                model.makeSnapshot(commandResult);","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"    public ReadOnlyUninurseBook getUninurseBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"        return model.getUninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"    public Supplier\u003cBoolean\u003e getTaskListFlagSupplier() {","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"        return model.getTaskListFlagSupplier();","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"    public Path getUninurseBookFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"        return model.getUninurseBookFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"BlopApple":25,"rama-pang":4,"-":61}},{"path":"src/main/java/seedu/uninurse/logic/commands/AddGenericCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":" * Adds a person or a task.","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"public abstract class AddGenericCommand extends UndoableCommand {","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"BlopApple":1,"rama-pang":7}},{"path":"src/main/java/seedu/uninurse/logic/commands/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":" * Adds a person to the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"public class AddPatientCommand extends AddGenericCommand {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the uninurse book. \"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the uninurse book\";","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"    private final Patient toAdd;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"     * Creates an AddPatientCommand to add the specified {@code Patient}","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"    public AddPatientCommand(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"                || (other instanceof AddPatientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 toAdd.equals(((AddPatientCommand) other).toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":12,"rama-pang":6,"-":46}},{"path":"src/main/java/seedu/uninurse/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":" * Add a task to an existing person in the patient list.","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"public class AddTaskCommand extends AddGenericCommand {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"            + \": Adds a task to the person identified \"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"            + \"by the index number used in the last patient listing.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"            + PREFIX_TASK_DESCRIPTION + \" [TASK_DESCRIPTION]\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 \"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"            + PREFIX_TASK_DESCRIPTION + \"Change dressing on left arm\";","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    public static final String MESSAGE_ADD_TASK_SUCCESS \u003d \"New task added to %1$s: %2$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    private final Index index;","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    private final Task task;","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     * Creates an AddTaskCommand to add a {@code Task} to the specified person.","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     * @param index index of the person in the filtered person list to add the task","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     * @param task task of the person to be added to","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    public AddTaskCommand(Index index, Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        requireAllNonNull(index, task);","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"        Patient personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"        TaskList updatedTaskList \u003d personToEdit.getTasks().add(task);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"        Patient editedPerson \u003d new Patient(","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"                personToEdit.getAddress(), updatedTaskList, personToEdit.getTags());","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TASK_SUCCESS, editedPerson.getName().toString(), task));","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"        if (!(other instanceof AddTaskCommand)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"            return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"        // state check","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"        AddTaskCommand e \u003d (AddTaskCommand) other;","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"        return index.equals(e.index) \u0026\u0026 task.equals((e.task));","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"BlopApple":10,"rama-pang":4,"izzahaj":69}},{"path":"src/main/java/seedu/uninurse/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":" * Clears the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"public class ClearCommand extends UndoableCommand {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed patients have been cleared!\";","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"        List\u003cPatient\u003e lastShownList \u003d new ArrayList\u003cPatient\u003e(model.getFilteredPersonList());","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        for (Patient patientToDelete : lastShownList) {","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"            model.deletePerson(patientToDelete);","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":3,"rama-pang":10,"-":16}},{"path":"src/main/java/seedu/uninurse/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * Returns whether the command is undo-able.","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    public boolean isUndoable() {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":3,"rama-pang":6,"-":17}},{"path":"src/main/java/seedu/uninurse/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":1,"-":70}},{"path":"src/main/java/seedu/uninurse/logic/commands/DeleteGenericCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":" * Deletes a person or a task.","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"public abstract class DeleteGenericCommand extends UndoableCommand {","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"BlopApple":1,"rama-pang":7}},{"path":"src/main/java/seedu/uninurse/logic/commands/DeletePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Ramanathan0908"},"content":" * Deletes a patient identified using it\u0027s displayed index from the Patient list.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"public class DeletePatientCommand extends DeleteGenericCommand {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Ramanathan0908"},"content":"    public DeletePatientCommand(Index targetIndex) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"    // TODO - Update model and patient once they are done","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Ramanathan0908"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"        Patient patientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Ramanathan0908"},"content":"        model.deletePerson(patientToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Ramanathan0908"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, patientToDelete));","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Ramanathan0908"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Ramanathan0908"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Ramanathan0908"},"content":"                || (other instanceof DeletePatientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Ramanathan0908"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePatientCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"BlopApple":6,"rama-pang":3,"Ramanathan0908":42}},{"path":"src/main/java/seedu/uninurse/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":" * Deletes a task from a person identified using its displayed index from the person list.","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"public class DeleteTaskCommand extends DeleteGenericCommand {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"            + \": Deletes the task identified by the index number in the task list of the person \"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"            + \"identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"            + \"Parameters: PATIENT_INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"            + \"TASK_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted task from %1$s: %2$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    private final Index patientIndex;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    private final Index taskIndex;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"     * Creates an DeleteTaskCommand to delete a {@code Task} from the specified person.","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     * @param patientIndex index of the person in the filtered person list to delete the task","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     * @param taskIndex    index of the task in the person\u0027s task list","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    public DeleteTaskCommand(Index patientIndex, Index taskIndex) {","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        requireAllNonNull(patientIndex, taskIndex);","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        this.patientIndex \u003d patientIndex;","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        if (patientIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        Patient patientToEdit \u003d lastShownList.get(patientIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"        TaskList initialTaskList \u003d patientToEdit.getTasks();","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d initialTaskList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        TaskList updatedTaskList \u003d patientToEdit.getTasks().delete(taskIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        Task deletedTask \u003d initialTaskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"        Patient editedPerson \u003d new Patient(","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"                patientToEdit.getName(), patientToEdit.getPhone(), patientToEdit.getEmail(),","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"                patientToEdit.getAddress(), updatedTaskList, patientToEdit.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        model.setPerson(patientToEdit, editedPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, editedPerson.getName(), deletedTask));","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"        if (!(other instanceof DeleteTaskCommand)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"            return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"        // state check","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand e \u003d (DeleteTaskCommand) other;","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        return patientIndex.equals(e.patientIndex) \u0026\u0026 taskIndex.equals((e.taskIndex));","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"BlopApple":9,"rama-pang":4,"izzahaj":77}},{"path":"src/main/java/seedu/uninurse/logic/commands/EditGenericCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":" * Edits a person or a task.","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"public abstract class EditGenericCommand extends UndoableCommand {","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"BlopApple":1,"rama-pang":7}},{"path":"src/main/java/seedu/uninurse/logic/commands/EditPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":" * Edits the details of an existing patient in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"public class EditPatientCommand extends EditGenericCommand {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient identified \"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"            + \"by the index number used in the displayed patient list. \"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"shogun187"},"content":"    public static final String MESSAGE_EDIT_PATIENT_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the uninurse book.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"shogun187"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"shogun187"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"shogun187"},"content":"     * @param editPatientDescriptor details to edit the patient with","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"shogun187"},"content":"    public EditPatientCommand(Index index, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"shogun187"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"shogun187"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"shogun187"},"content":"        if (!patientToEdit.isSamePerson(editedPatient) \u0026\u0026 model.hasPerson(editedPatient)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"shogun187"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"shogun187"},"content":"        model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"shogun187"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient));","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"shogun187"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"shogun187"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"shogun187"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"shogun187"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"shogun187"},"content":"        Email updatedEmail \u003d editPatientDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"shogun187"},"content":"        Address updatedAddress \u003d editPatientDescriptor.getAddress().orElse(patientToEdit.getAddress());","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"        TaskList updatedTasks \u003d patientToEdit.getTasks(); // editPatient command does not allow editing tasks","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"shogun187"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPatientDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"rama-pang"},"content":"        return new Patient(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTasks, updatedTags);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"shogun187"},"content":"        if (!(other instanceof EditPatientCommand)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand e \u003d (EditPatientCommand) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":119,"author":{"gitId":"shogun187"},"content":"                \u0026\u0026 editPatientDescriptor.equals(e.editPatientDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"shogun187"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"shogun187"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"shogun187"},"content":"    public static class EditPatientDescriptor {","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"shogun187"},"content":"        public EditPatientDescriptor() {}","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"shogun187"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"shogun187"},"content":"            if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"shogun187"},"content":"            EditPatientDescriptor e \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"BlopApple":21,"rama-pang":7,"shogun187":30,"izzahaj":1,"-":166}},{"path":"src/main/java/seedu/uninurse/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":" * Edits the details of an existing Task for a patient.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"public class EditTaskCommand extends EditGenericCommand {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the specified task associated with a patient \"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"            + \"by the index number used in the displayed patient list. \"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"            + \"Parameters: PATIENT INDEX (must be a positive integer) TASK INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"            + \"[\" + PREFIX_TASK_DESCRIPTION + \"TASK]...\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \" 2 \"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"            + PREFIX_TASK_DESCRIPTION + \"change bandage\";","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"Task to edit must be provided.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Ramanathan0908"},"content":"    private final Index patientIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"    private final Index taskIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Ramanathan0908"},"content":"    private final Task updatedTask;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Ramanathan0908"},"content":"     * @param patientIndex of the patient in the filtered patient list to edit.","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Ramanathan0908"},"content":"     * @param taskIndex of the task to be edited.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Ramanathan0908"},"content":"     * @param updatedTask details to edit for the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Ramanathan0908"},"content":"    public EditTaskCommand(Index patientIndex, Index taskIndex, Task updatedTask) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(patientIndex);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(updatedTask);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Ramanathan0908"},"content":"        this.patientIndex \u003d patientIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Ramanathan0908"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Ramanathan0908"},"content":"        this.updatedTask \u003d updatedTask;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Ramanathan0908"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Ramanathan0908"},"content":"        if (patientIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Ramanathan0908"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"        Patient patientToEdit \u003d lastShownList.get(patientIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Ramanathan0908"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d patientToEdit.getTasks().size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Ramanathan0908"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, taskIndex, updatedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"Ramanathan0908"},"content":"        model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"Ramanathan0908"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"Ramanathan0908"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedPatient));","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"     * Creates an edited person with the updated Task.","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Ramanathan0908"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"Ramanathan0908"},"content":"     * @param patientToEdit the patient associated with the task to edit.","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"Ramanathan0908"},"content":"     * @param indexOfTask the index of the task to be edited.","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"Ramanathan0908"},"content":"     * @param updatedTask the new task details to be edited with.","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"Ramanathan0908"},"content":"     * @return a person with the updated task details.","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, Index indexOfTask, Task updatedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"Ramanathan0908"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"Ramanathan0908"},"content":"        Name name \u003d patientToEdit.getName();","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"Ramanathan0908"},"content":"        Phone phone \u003d patientToEdit.getPhone();","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"Ramanathan0908"},"content":"        Email email \u003d patientToEdit.getEmail();","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"Ramanathan0908"},"content":"        Address address \u003d patientToEdit.getAddress();","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"Ramanathan0908"},"content":"        Set\u003cTag\u003e tags \u003d patientToEdit.getTags();","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"Ramanathan0908"},"content":"        TaskList updatedTaskList \u003d patientToEdit.getTasks().edit(indexOfTask.getZeroBased(), updatedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"        return new Patient(name, phone, email, address, updatedTaskList, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"Ramanathan0908"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"Ramanathan0908"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"Ramanathan0908"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"Ramanathan0908"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"Ramanathan0908"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"Ramanathan0908"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Ramanathan0908"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"Ramanathan0908"},"content":"        // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"Ramanathan0908"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Ramanathan0908"},"content":"        return patientIndex.equals(e.patientIndex)","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"Ramanathan0908"},"content":"                \u0026\u0026 taskIndex.equals(e.taskIndex)","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"Ramanathan0908"},"content":"                \u0026\u0026 updatedTask.equals(e.updatedTask);","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"BlopApple":14,"rama-pang":6,"Ramanathan0908":97,"izzahaj":1}},{"path":"src/main/java/seedu/uninurse/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting UniNurse Book as requested ...\";","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"BlopApple":3,"-":16}},{"path":"src/main/java/seedu/uninurse/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":" * Finds and lists all persons in uninurse book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose names contain any of \"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"BlopApple":5,"shogun187":1,"-":36}},{"path":"src/main/java/seedu/uninurse/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":2,"-":19}},{"path":"src/main/java/seedu/uninurse/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":" * Lists all persons in the uninurse book to the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":4,"-":19}},{"path":"src/main/java/seedu/uninurse/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":" * Lists all tasks associated to all patients in the uninurse book to the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"    public static final String COMMAND_WORD \u003d \"listTask\";","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"        model.updateFilteredPersonListWithTasks(p -\u003e !(p.getTasks().isEmpty()));","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"BlopApple":22}},{"path":"src/main/java/seedu/uninurse/logic/commands/PatientsTodayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ramanathan0908"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"import static seedu.uninurse.model.Model.PREDICATE_SHOW_PATIENTS_FOR_TODAY;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":" * Lists all patients for today.","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"public class PatientsTodayCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String COMMAND_WORD \u003d \"patientsToday\";","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients with tasks today\";","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients for today\";","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"        model.updateFilteredPersonListWithTasks(PREDICATE_SHOW_PATIENTS_FOR_TODAY);","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ramanathan0908":25}},{"path":"src/main/java/seedu/uninurse/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import static seedu.uninurse.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * Undo the last undo command.","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No command to redo!\";","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redone next command!\";","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"        if (!model.canRedo()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        model.redo();","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"rama-pang":30}},{"path":"src/main/java/seedu/uninurse/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import static seedu.uninurse.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * Undo the last command.","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Maximum undo limit reached! \";","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undone previous command!\";","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"        if (!model.canUndo()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        model.undo();","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"rama-pang":30}},{"path":"src/main/java/seedu/uninurse/logic/commands/UndoableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":" * Represents a command which is undo-able.","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"public abstract class UndoableCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"     * Returns whether the command is undo-able.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"    public boolean isUndoable() {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"        return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"rama-pang":14}},{"path":"src/main/java/seedu/uninurse/logic/commands/ViewTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":" * Shows all tasks associcated with the given patient in the uninurse book to the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"public class ViewTaskCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"    public static final String COMMAND_WORD \u003d \"viewTask\";","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"            + \": Shows a list of tasks associated with the patient identified by the index number\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"            + \"used in the displayed patient list.\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Showing Tasks for Patient: %1$s\\n%2$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"    public ViewTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"        Patient person \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"        model.updateFilteredPersonListWithTasks(p -\u003e p.equals(person));","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, person.getName(), person.getTasks().toString()));","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"BlopApple":45,"rama-pang":2}},{"path":"src/main/java/seedu/uninurse/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"BlopApple":1,"-":16}},{"path":"src/main/java/seedu/uninurse/logic/parser/AddGenericCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_OPTION_PATIENT_INDEX;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.AddGenericCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":" * Parses input arguments and creates either a new AddPatientCommand object or","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" * a new AddTaskCommand object based on option values.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"public class AddGenericCommandParser implements Parser\u003cAddGenericCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGenericCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * and returns an AddGenericCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    public AddGenericCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"        ArgumentMultimap options \u003d ParserUtil.parseOptions(args, PREFIX_OPTION_PATIENT_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        args \u003d ParserUtil.eraseOptions(args, PREFIX_OPTION_PATIENT_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"        Optional\u003cString\u003e patientIndex \u003d options.getValue(PREFIX_OPTION_PATIENT_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        if (!patientIndex.isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"            return new AddPatientCommandParser().parse(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        if (patientIndex.isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"            return new AddTaskCommandParser().parse(patientIndex.get() + \" \" + args);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        throw new ParseException(ParserUtil.MESSAGE_INVALID_OPTIONS);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"BlopApple":4,"rama-pang":36}},{"path":"src/main/java/seedu/uninurse/logic/parser/AddPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":" * Parses input arguments and creates a new AddPatientCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"public class AddPatientCommandParser implements Parser\u003cAddPatientCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPatientCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"     * and returns an AddPatientCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"    public AddPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"                        PREFIX_TASK_DESCRIPTION, PREFIX_TAG);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        TaskList taskList \u003d ParserUtil.parseTasks(argMultimap.getAllValues(PREFIX_TASK_DESCRIPTION));","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"        Patient person \u003d new Patient(name, phone, email, address, taskList, tagList);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"        return new AddPatientCommand(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"BlopApple":17,"rama-pang":8,"izzahaj":3,"-":36}},{"path":"src/main/java/seedu/uninurse/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":" * Parses input arguments and creates a new {@code AddTaskCommand}.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TASK_DESCRIPTION);","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        Index index;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"                    AddTaskCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"        Task newTask \u003d ParserUtil.parseTask(argMultimap.getValue(PREFIX_TASK_DESCRIPTION).get());","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"        return new AddTaskCommand(index, newTask);","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"BlopApple":8,"rama-pang":1,"Ramanathan0908":2,"izzahaj":29}},{"path":"src/main/java/seedu/uninurse/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"BlopApple":1,"-":59}},{"path":"src/main/java/seedu/uninurse/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        argsString \u003d \" \" + argsString; // to handle {@code prefix} located at the beginning","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"rama-pang"},"content":"        private final int startPosition;","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"BlopApple":1,"rama-pang":3,"-":145}},{"path":"src/main/java/seedu/uninurse/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    public static final Prefix PREFIX_TASK_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    public static final Prefix PREFIX_CONDITION \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    public static final Prefix PREFIX_OPTION_PATIENT_INDEX \u003d new Prefix(\"-p\");","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    public static final Prefix PREFIX_OPTION_TASK_INDEX \u003d new Prefix(\"-t\");","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    public static final Prefix PREFIX_OPTION_CONDITION_INDEX \u003d new Prefix(\"-c\");","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"BlopApple":1,"rama-pang":2,"izzahaj":3,"-":13}},{"path":"src/main/java/seedu/uninurse/logic/parser/DeleteGenericCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_OPTION_PATIENT_INDEX;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_OPTION_TASK_INDEX;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.DeleteGenericCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" * Parses input arguments and creates either a new DeletePatientCommand object or","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":" * a new DeleteTaskCommand object based on option values.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"public class DeleteGenericCommandParser implements Parser\u003cDeleteGenericCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteGenericCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     * and returns an DeleteGenericCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    public DeleteGenericCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        ArgumentMultimap options \u003d ParserUtil.parseOptions(args, PREFIX_OPTION_PATIENT_INDEX, PREFIX_OPTION_TASK_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        args \u003d ParserUtil.eraseOptions(args, PREFIX_OPTION_PATIENT_INDEX, PREFIX_OPTION_TASK_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"        Optional\u003cString\u003e patientIndex \u003d options.getValue(PREFIX_OPTION_PATIENT_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        Optional\u003cString\u003e taskIndex \u003d options.getValue(PREFIX_OPTION_TASK_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"        if (patientIndex.isPresent() \u0026\u0026 !taskIndex.isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"            return new DeletePatientCommandParser().parse(patientIndex.get() + \" \" + args);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        if (patientIndex.isPresent() \u0026\u0026 taskIndex.isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"            return new DeleteTaskCommandParser().parse(patientIndex.get() + \" \" + taskIndex.get() + \" \" + args);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"        throw new ParseException(ParserUtil.MESSAGE_INVALID_OPTIONS);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"BlopApple":5,"rama-pang":37}},{"path":"src/main/java/seedu/uninurse/logic/parser/DeletePatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.DeletePatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":" * Parses input arguments and creates a new DeletePatientCommand object","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"public class DeletePatientCommandParser implements Parser\u003cDeletePatientCommand\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePatientCommand","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"     * and returns a DeletePatientCommand object for execution.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"     * @param args the arguments to be parsed.","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"     * @return a DeletePatientCommand.","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"    public DeletePatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"            return new DeletePatientCommand(index);","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Ramanathan0908"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePatientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"BlopApple":5,"Ramanathan0908":26}},{"path":"src/main/java/seedu/uninurse/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object.","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"        List\u003cIndex\u003e indices;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"            indices \u003d ParserUtil.parseTwoIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        return new DeleteTaskCommand(indices.get(0), indices.get(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"BlopApple":5,"rama-pang":13,"izzahaj":21}},{"path":"src/main/java/seedu/uninurse/logic/parser/EditGenericCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_OPTION_PATIENT_INDEX;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_OPTION_TASK_INDEX;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditGenericCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" * Parses input arguments and creates either a new EditPatientCommand object or","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":" * a new EditTaskCommand object based on option values.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"public class EditGenericCommandParser implements Parser\u003cEditGenericCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * Parses the given {@code String} of arguments in the context of the EditGenericCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     * and returns an EditGenericCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    public EditGenericCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        ArgumentMultimap options \u003d ParserUtil.parseOptions(args, PREFIX_OPTION_PATIENT_INDEX, PREFIX_OPTION_TASK_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        args \u003d ParserUtil.eraseOptions(args, PREFIX_OPTION_PATIENT_INDEX, PREFIX_OPTION_TASK_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"        Optional\u003cString\u003e patientIndex \u003d options.getValue(PREFIX_OPTION_PATIENT_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        Optional\u003cString\u003e taskIndex \u003d options.getValue(PREFIX_OPTION_TASK_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"        if (patientIndex.isPresent() \u0026\u0026 !taskIndex.isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"            return new EditPatientCommandParser().parse(patientIndex.get() + \" \" + args);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        if (patientIndex.isPresent() \u0026\u0026 taskIndex.isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"            return new EditTaskCommandParser().parse(patientIndex.get() + \" \" + taskIndex.get() + \" \" + args);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"        throw new ParseException(ParserUtil.MESSAGE_INVALID_OPTIONS);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"BlopApple":5,"rama-pang":37}},{"path":"src/main/java/seedu/uninurse/logic/parser/EditPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":" * Parses input arguments and creates a new EditPatientCommand object","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"public class EditPatientCommandParser implements Parser\u003cEditPatientCommand\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPatientCommand","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"     * and returns an EditPatientCommand object for execution.","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"    public EditPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"shogun187"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"                    EditPatientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"shogun187"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"shogun187"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"shogun187"},"content":"            editPatientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"shogun187"},"content":"            editPatientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"shogun187"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPatientDescriptor::setTags);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"shogun187"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"shogun187"},"content":"            throw new ParseException(EditPatientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"shogun187"},"content":"        return new EditPatientCommand(index, editPatientDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"BlopApple":12,"shogun187":16,"-":55}},{"path":"src/main/java/seedu/uninurse/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":" * Parses input arguments and creates a new EditTaskCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TASK_DESCRIPTION);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"        List\u003cIndex\u003e indices;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"        Task updatedTask;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Ramanathan0908"},"content":"            indices \u003d ParserUtil.parseTwoIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Ramanathan0908"},"content":"            updatedTask \u003d ParserUtil.parseTask(argMultimap.getValue(PREFIX_TASK_DESCRIPTION).orElseThrow());","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Ramanathan0908"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"                    EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Ramanathan0908"},"content":"        } catch (NoSuchElementException nse) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Ramanathan0908"},"content":"        return new EditTaskCommand(indices.get(0), indices.get(1), updatedTask);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"BlopApple":7,"Ramanathan0908":38}},{"path":"src/main/java/seedu/uninurse/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.FindCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"BlopApple":5,"-":28}},{"path":"src/main/java/seedu/uninurse/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.Command;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"BlopApple":3,"-":13}},{"path":"src/main/java/seedu/uninurse/logic/parser/ParserTranslator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":" * Contains utility methods used to translate user inputs for the UninurseBookParser class.","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":" * Currently, not fully implemented.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"public class ParserTranslator {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"     * Replaces the given command word based on user preference settings (to be implemented","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"     * on a future version). Additionally, if there are two or more consecutive white spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"     * in arguments, it will be trimmed to a single white space.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"     * @param commandWord the command word","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"     * @param arguments   the arguments for the command","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"     * @return the translated {@code String} of arguments.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"    public static String translate(String commandWord, String arguments) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"        String[] args \u003d arguments.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"        return Arrays.stream(args).reduce((x, y) -\u003e x + \" \" + y).get().trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"BlopApple":2,"rama-pang":21}},{"path":"src/main/java/seedu/uninurse/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.StringUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.task.DateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"    public static final String MESSAGE_INVALID_OPTIONS \u003d \"Command options is invalid\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Ramanathan0908"},"content":"     * Parses two one based index and returns it. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Ramanathan0908"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Ramanathan0908"},"content":"     * @param oneBasedIndex to be parsed.","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Ramanathan0908"},"content":"     * @return a list of 2 oneBasedIndex.","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Ramanathan0908"},"content":"     * @throws ParseException if indices are invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Ramanathan0908"},"content":"    public static List\u003cIndex\u003e parseTwoIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Ramanathan0908"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Ramanathan0908"},"content":"        String[] indexes \u003d trimmedIndex.split(\" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Ramanathan0908"},"content":"        if (indexes.length !\u003d 2","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Ramanathan0908"},"content":"                || !StringUtil.isNonZeroUnsignedInteger(indexes[0])","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Ramanathan0908"},"content":"                || !StringUtil.isNonZeroUnsignedInteger(indexes[1])) {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Ramanathan0908"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"Ramanathan0908"},"content":"        List\u003cIndex\u003e indices \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"Ramanathan0908"},"content":"        indices.add(Index.fromOneBased(Integer.parseInt(indexes[0])));","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Ramanathan0908"},"content":"        indices.add(Index.fromOneBased(Integer.parseInt(indexes[1])));","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"Ramanathan0908"},"content":"        return indices;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":134,"author":{"gitId":"izzahaj"},"content":"     * Parses a {@code String taskDescription} into a {@code Task}.","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"izzahaj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-07"},{"lineNumber":136,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":137,"author":{"gitId":"izzahaj"},"content":"     * @throws ParseException if the given {@code taskDescription} is invalid.","lastModifiedDate":"2022-10-07"},{"lineNumber":138,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":139,"author":{"gitId":"izzahaj"},"content":"    public static Task parseTask(String taskDescription) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":140,"author":{"gitId":"izzahaj"},"content":"        requireNonNull(taskDescription);","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"Ramanathan0908"},"content":"        String[] descriptionAndTime \u003d taskDescription.trim().split(\"\\\\|\");","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"Ramanathan0908"},"content":"        if (descriptionAndTime.length \u003d\u003d 1) {","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"Ramanathan0908"},"content":"            return parseTaskWithoutDateTime(descriptionAndTime[0]);","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"Ramanathan0908"},"content":"        return parseTaskWithDateTime(descriptionAndTime[0], descriptionAndTime[1]);","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"Ramanathan0908"},"content":"    private static Task parseTaskWithoutDateTime(String taskDescription) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"izzahaj"},"content":"        String trimmedTaskDescription \u003d taskDescription.trim();","lastModifiedDate":"2022-10-07"},{"lineNumber":152,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"izzahaj"},"content":"        if (!Task.isValidTaskDescription(trimmedTaskDescription)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":154,"author":{"gitId":"izzahaj"},"content":"            throw new ParseException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":155,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":156,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"Ramanathan0908"},"content":"        return new Task(trimmedTaskDescription);","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"Ramanathan0908"},"content":"    private static Task parseTaskWithDateTime(String taskDescription, String dateTime) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"Ramanathan0908"},"content":"        String trimmedTaskDescription \u003d taskDescription.trim();","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"Ramanathan0908"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"Ramanathan0908"},"content":"        if (!Task.isValidTaskDescription(trimmedTaskDescription)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":165,"author":{"gitId":"Ramanathan0908"},"content":"            throw new ParseException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"Ramanathan0908"},"content":"        if (!DateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":169,"author":{"gitId":"Ramanathan0908"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"Ramanathan0908"},"content":"        return new Task(trimmedTaskDescription, new DateTime(trimmedDateTime));","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":174,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":176,"author":{"gitId":"izzahaj"},"content":"     * Parses {@code Collection\u003cString\u003e tasks} into a {@code TaskList}.","lastModifiedDate":"2022-10-07"},{"lineNumber":177,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"izzahaj"},"content":"    public static TaskList parseTasks(Collection\u003cString\u003e taskDescriptions) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"izzahaj"},"content":"        requireNonNull(taskDescriptions);","lastModifiedDate":"2022-10-07"},{"lineNumber":180,"author":{"gitId":"izzahaj"},"content":"        final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":181,"author":{"gitId":"izzahaj"},"content":"        for (String taskDescription : taskDescriptions) {","lastModifiedDate":"2022-10-07"},{"lineNumber":182,"author":{"gitId":"izzahaj"},"content":"            tasks.add(parseTask(taskDescription));","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":184,"author":{"gitId":"izzahaj"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":186,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":213,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"rama-pang"},"content":"     * Parses the value of {@code String option} from {@code String arguments}.","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"rama-pang"},"content":"    private static Optional\u003cString\u003e parseOption(String arguments, String option) {","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(option);","lastModifiedDate":"2022-10-10"},{"lineNumber":220,"author":{"gitId":"rama-pang"},"content":"        String[] options \u003d arguments.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":221,"author":{"gitId":"rama-pang"},"content":"        for (int i \u003d 0; i \u003c options.length; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"rama-pang"},"content":"            if (options[i].contains(\"/\")) {","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"rama-pang"},"content":"                break;","lastModifiedDate":"2022-10-10"},{"lineNumber":224,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":225,"author":{"gitId":"rama-pang"},"content":"            if (i \u003e 0 \u0026\u0026 options[i - 1].equals(option)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":226,"author":{"gitId":"rama-pang"},"content":"                return Optional.of(options[i]);","lastModifiedDate":"2022-10-10"},{"lineNumber":227,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":228,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":229,"author":{"gitId":"rama-pang"},"content":"        return Optional.empty();","lastModifiedDate":"2022-10-10"},{"lineNumber":230,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":231,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":232,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":233,"author":{"gitId":"rama-pang"},"content":"     * Parses the values of {@code Prefix... options} from {@code String arguments}","lastModifiedDate":"2022-10-10"},{"lineNumber":234,"author":{"gitId":"rama-pang"},"content":"     * and return them in a {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-10"},{"lineNumber":235,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":236,"author":{"gitId":"rama-pang"},"content":"    public static ArgumentMultimap parseOptions(String arguments, Prefix... options) {","lastModifiedDate":"2022-10-10"},{"lineNumber":237,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":238,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(options);","lastModifiedDate":"2022-10-10"},{"lineNumber":239,"author":{"gitId":"rama-pang"},"content":"        ArgumentMultimap optionValues \u003d new ArgumentMultimap();","lastModifiedDate":"2022-10-10"},{"lineNumber":240,"author":{"gitId":"rama-pang"},"content":"        for (int i \u003d 0; i \u003c options.length; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":241,"author":{"gitId":"rama-pang"},"content":"            Optional\u003cString\u003e value \u003d parseOption(arguments, options[i].toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":242,"author":{"gitId":"rama-pang"},"content":"            if (value.isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":243,"author":{"gitId":"rama-pang"},"content":"                optionValues.put(options[i], value.get());","lastModifiedDate":"2022-10-10"},{"lineNumber":244,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":245,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":246,"author":{"gitId":"rama-pang"},"content":"        return optionValues;","lastModifiedDate":"2022-10-10"},{"lineNumber":247,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":248,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":249,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":250,"author":{"gitId":"rama-pang"},"content":"     * Erases the options and value of {@code String option} from {@code String arguments}","lastModifiedDate":"2022-10-10"},{"lineNumber":251,"author":{"gitId":"rama-pang"},"content":"     * and return the resulting {@code String}.","lastModifiedDate":"2022-10-10"},{"lineNumber":252,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":253,"author":{"gitId":"rama-pang"},"content":"    private static String eraseOption(String arguments, String option) {","lastModifiedDate":"2022-10-10"},{"lineNumber":254,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":255,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(option);","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"rama-pang"},"content":"        String[] options \u003d arguments.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":257,"author":{"gitId":"rama-pang"},"content":"        for (int i \u003d 0; i + 1 \u003c options.length; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":258,"author":{"gitId":"rama-pang"},"content":"            if (options[i].equals(option)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":259,"author":{"gitId":"rama-pang"},"content":"                options[i] \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":260,"author":{"gitId":"rama-pang"},"content":"                options[i + 1] \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":261,"author":{"gitId":"rama-pang"},"content":"                break;","lastModifiedDate":"2022-10-10"},{"lineNumber":262,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":263,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":264,"author":{"gitId":"rama-pang"},"content":"        return Arrays.stream(options).reduce((x, y) -\u003e x + \" \" + y).get().trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":265,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":266,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":267,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":268,"author":{"gitId":"rama-pang"},"content":"     * Erases the options and values of {@code Prefix... options} from {@code String arguments}","lastModifiedDate":"2022-10-10"},{"lineNumber":269,"author":{"gitId":"rama-pang"},"content":"     * and return the resulting {@code String}.","lastModifiedDate":"2022-10-10"},{"lineNumber":270,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":271,"author":{"gitId":"rama-pang"},"content":"    public static String eraseOptions(String arguments, Prefix... options) {","lastModifiedDate":"2022-10-10"},{"lineNumber":272,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":273,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(options);","lastModifiedDate":"2022-10-10"},{"lineNumber":274,"author":{"gitId":"rama-pang"},"content":"        for (int i \u003d 0; i \u003c options.length; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":275,"author":{"gitId":"rama-pang"},"content":"            arguments \u003d eraseOption(arguments, options[i].toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":276,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":277,"author":{"gitId":"rama-pang"},"content":"        return arguments;","lastModifiedDate":"2022-10-10"},{"lineNumber":278,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"BlopApple":11,"rama-pang":71,"Ramanathan0908":55,"izzahaj":27,"-":115}},{"path":"src/main/java/seedu/uninurse/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"BlopApple":1,"-":38}},{"path":"src/main/java/seedu/uninurse/logic/parser/UninurseBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.AddGenericCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.Command;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.DeleteGenericCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditGenericCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.FindCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.ListCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.logic.commands.PatientsTodayCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.logic.commands.RedoCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.ViewTaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"public class UninurseBookParser {","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"        final String arguments \u003d ParserTranslator.translate(commandWord, matcher.group(\"arguments\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"        case AddGenericCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"            return new AddGenericCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"        case EditGenericCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"            return new EditGenericCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"        case DeleteGenericCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"            return new DeleteGenericCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"Ramanathan0908"},"content":"        case PatientsTodayCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"Ramanathan0908"},"content":"            return new PatientsTodayCommand();","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"        case ViewTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"            return new ViewTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"            return new RedoCommand();","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":22,"rama-pang":16,"Ramanathan0908":4,"-":55}},{"path":"src/main/java/seedu/uninurse/logic/parser/ViewTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.ViewTaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":" * Parses input arguments and creates a new ViewTaskCommand object.","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"public class ViewTaskCommandParser implements Parser\u003cViewTaskCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewTaskCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"     * and returns a ViewTaskCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"    public ViewTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"        try {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"            return new ViewTaskCommand(index);","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"BlopApple":27}},{"path":"src/main/java/seedu/uninurse/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"BlopApple":2,"-":15}},{"path":"src/main/java/seedu/uninurse/model/GenericList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":" * A generic list interface for multi-valued {@code Person} attributes.","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":" * @param \u003cT\u003e The type of attribute stored in the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"public interface GenericList\u003cT\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"     * Adds an element to the {@code GenericList\u003cT\u003e}.","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"     * @param t The element to be added.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"     * @return The updated {@code GenericList\u003cT\u003e}.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    GenericList\u003cT\u003e add(T t);","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * Deletes an element from the {@code GenericList\u003cT\u003e}.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     * @param index The index of the element to be deleted.","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     * @return The updated {@code GenericList\u003cT\u003e}.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    GenericList\u003cT\u003e delete(int index);","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"     * Edits an element in the {@code GenericList\u003cT\u003e}.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"     * @param index The index of the element to be edited.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"     * @return The updated {@code GenericList\u003cT\u003e}.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    GenericList\u003cT\u003e edit(int index, T t);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    T get(int index);","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     * Returns the size of the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    int size();","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"     * Returns true if the {@code GenericList\u003cT\u003e} is empty.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    boolean isEmpty();","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"     * Returns the internal task list.","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"    List\u003cT\u003e getInternalList();","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"BlopApple":1,"izzahaj":49}},{"path":"src/main/java/seedu/uninurse/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.logic.commands.CommandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_PATIENTS_FOR_TODAY \u003d patient -\u003e patient.getTasks().containsTaskToday();","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"     * Returns the user prefs.","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"     * Returns the user prefs\u0027 uninurse book file path.","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"    Path getUninurseBookFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"     * Sets the user prefs\u0027 uninurse book file path.","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"    void setUninurseBookFilePath(Path uninurseBookFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"     * Returns the UninurseBook","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"    ReadOnlyUninurseBook getUninurseBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"     * Replaces uninurse book data with the data in {@code uninurseBook}.","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"    void setUninurseBook(ReadOnlyUninurseBook uninurseBook);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"    boolean hasPerson(Patient person);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"     * The person must exist in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"    void deletePerson(Patient target);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"     * {@code person} must not already exist in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"    void addPerson(Patient person);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"BlopApple"},"content":"     * {@code target} must exist in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"BlopApple"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"    void setPerson(Patient target, Patient editedPerson);","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"    ObservableList\u003cPatient\u003e getFilteredPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"rama-pang"},"content":"    void updateFilteredPersonList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"BlopApple"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"BlopApple"},"content":"     * with tasks list flag enabled.","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"BlopApple"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"rama-pang"},"content":"    void updateFilteredPersonListWithTasks(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"rama-pang"},"content":"     * Returns a supplier to get the flag to display tasks","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"BlopApple"},"content":"    Supplier\u003cBoolean\u003e getTaskListFlagSupplier();","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"rama-pang"},"content":"     * Returns whether you can revert to an earlier version of UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"rama-pang"},"content":"    boolean canUndo();","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"rama-pang"},"content":"     * Returns whether you can revert to a later version of UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"rama-pang"},"content":"    boolean canRedo();","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"rama-pang"},"content":"     * Reverts to an earlier version of UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"rama-pang"},"content":"    void undo();","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"rama-pang"},"content":"     * Reverts to a later version of UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"rama-pang"},"content":"    void redo();","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"rama-pang"},"content":"     * Makes a snapshot of the current UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"rama-pang"},"content":"    void makeSnapshot(CommandResult commandResult);","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BlopApple":23,"rama-pang":54,"Ramanathan0908":1,"-":57}},{"path":"src/main/java/seedu/uninurse/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.logic.commands.CommandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":" * Represents the in-memory model of the uninurse book data.","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    private final PersistentUninurseBook persistentUninurseBook;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    private final FilteredList\u003cPatient\u003e filteredPersons;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    private boolean taskListFlag;","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"     * Initializes a ModelManager with the given uninurseBook and userPrefs.","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"    public ModelManager(ReadOnlyUninurseBook uninurseBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"        requireAllNonNull(uninurseBook, userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"        logger.fine(\"Initializing with uninurse book: \" + uninurseBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"        this.persistentUninurseBook \u003d new PersistentUninurseBook(uninurseBook);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.persistentUninurseBook.getWorkingCopy().getPersonList());","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"        this.taskListFlag \u003d false;","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"        this(new UninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"    public Path getUninurseBookFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"        return userPrefs.getUninurseBookFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"    public void setUninurseBookFilePath(Path uninurseBookFilePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(uninurseBookFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"BlopApple"},"content":"        userPrefs.setUninurseBookFilePath(uninurseBookFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"BlopApple"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UninurseBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"    public ReadOnlyUninurseBook getUninurseBook() {","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"        return persistentUninurseBook.getWorkingCopy();","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"    public void setUninurseBook(ReadOnlyUninurseBook uninurseBook) {","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"        this.persistentUninurseBook.getWorkingCopy().resetData(uninurseBook);","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"    public boolean hasPerson(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"rama-pang"},"content":"        return persistentUninurseBook.getWorkingCopy().hasPerson(person);","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"rama-pang"},"content":"    public void deletePerson(Patient target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"rama-pang"},"content":"        persistentUninurseBook.getWorkingCopy().removePerson(target);","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"rama-pang"},"content":"    public void addPerson(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"rama-pang"},"content":"        persistentUninurseBook.getWorkingCopy().addPerson(person);","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"rama-pang"},"content":"    public void setPerson(Patient target, Patient editedPerson) {","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"rama-pang"},"content":"        persistentUninurseBook.getWorkingCopy().setPerson(target, editedPerson);","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"rama-pang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Patient List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"rama-pang"},"content":"     * Returns an unmodifiable view of the list of {@code Patient} backed by the internal list of","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"BlopApple"},"content":"     * {@code versionedUninurseBook}","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"rama-pang"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"rama-pang"},"content":"    public void updateFilteredPersonList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"BlopApple"},"content":"        taskListFlag \u003d false;","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"rama-pang"},"content":"    public void updateFilteredPersonListWithTasks(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"BlopApple"},"content":"        taskListFlag \u003d true;","lastModifiedDate":"2022-10-08"},{"lineNumber":142,"author":{"gitId":"BlopApple"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":143,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":144,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":145,"author":{"gitId":"rama-pang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo and Redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"rama-pang"},"content":"    public boolean canUndo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"rama-pang"},"content":"        return persistentUninurseBook.canUndo();","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"rama-pang"},"content":"    public boolean canRedo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"rama-pang"},"content":"        return persistentUninurseBook.canRedo();","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"rama-pang"},"content":"    public void undo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"rama-pang"},"content":"        persistentUninurseBook.undo();","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"rama-pang"},"content":"    public void redo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"rama-pang"},"content":"        persistentUninurseBook.redo();","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"rama-pang"},"content":"    public void makeSnapshot(CommandResult commandResult) {","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"rama-pang"},"content":"        persistentUninurseBook.makeSnapshot(commandResult);","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"BlopApple"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Other Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":173,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":174,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":175,"author":{"gitId":"BlopApple"},"content":"    public Supplier\u003cBoolean\u003e getTaskListFlagSupplier() {","lastModifiedDate":"2022-10-08"},{"lineNumber":176,"author":{"gitId":"BlopApple"},"content":"        return (() -\u003e taskListFlag);","lastModifiedDate":"2022-10-08"},{"lineNumber":177,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":178,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"rama-pang"},"content":"        return persistentUninurseBook.equals(other.persistentUninurseBook)","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":35,"rama-pang":57,"-":106}},{"path":"src/main/java/seedu/uninurse/model/PersistentUninurseBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.commons.core.Config;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.logic.commands.CommandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * Versions of UninurseBookSnapshot after every command.","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"public class PersistentUninurseBook {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"    private final UninurseBook workingCopy;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"    private final List\u003cUninurseBookSnapshot\u003e uninurseBookVersions;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    private int currentVersion;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * Creates an UninurseBookSnapshot using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    public PersistentUninurseBook(ReadOnlyUninurseBook toBeCopied) {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"        this.workingCopy \u003d new UninurseBook(toBeCopied);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"        this.uninurseBookVersions \u003d new ArrayList\u003cUninurseBookSnapshot\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"        this.uninurseBookVersions.add(new UninurseBookSnapshot(toBeCopied));","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        this.currentVersion \u003d 0;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"        this.handleChange();","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"     * Returns the current working copy of UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"    public UninurseBook getWorkingCopy() {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"        return workingCopy;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    private void handleChange() {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        workingCopy.setPersons(uninurseBookVersions.get(currentVersion).getPersonList());","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"     * Returns whether you can revert to an earlier version of UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    public boolean canUndo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"        return currentVersion \u003e 0;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"     * Returns whether you can revert to a later version of UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"    public boolean canRedo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"        return currentVersion + 1 \u003c uninurseBookVersions.size();","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"     * Reverts to an earlier version of UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"    public void undo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"        if (canUndo()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"            currentVersion--;","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"            handleChange();","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"     * Reverts to a later version of UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"    public void redo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"        if (canRedo()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"            currentVersion++;","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"            handleChange();","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"     * Makes a snapshot of the current UninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"    public void makeSnapshot(CommandResult commandResult) {","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"        while (uninurseBookVersions.size() \u003e currentVersion + 1) {","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"            uninurseBookVersions.remove(uninurseBookVersions.size() - 1);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"        while (uninurseBookVersions.size() \u003e Config.UNDO_LIMIT) {","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"            uninurseBookVersions.remove(0);","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"rama-pang"},"content":"        uninurseBookVersions.add(new UninurseBookSnapshot(workingCopy, commandResult));","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"        currentVersion \u003d uninurseBookVersions.size() - 1;","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"        handleChange();","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"                || (other instanceof PersistentUninurseBook // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 workingCopy.equals(((PersistentUninurseBook) other).workingCopy)","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 uninurseBookVersions.equals(((PersistentUninurseBook) other).uninurseBookVersions)","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 currentVersion \u003d\u003d ((PersistentUninurseBook) other).currentVersion);","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"rama-pang":96}},{"path":"src/main/java/seedu/uninurse/model/ReadOnlyUninurseBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" * Unmodifiable view of an uninurse book","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"public interface ReadOnlyUninurseBook {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    ObservableList\u003cPatient\u003e getPersonList();","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":4,"rama-pang":1,"-":12}},{"path":"src/main/java/seedu/uninurse/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"    Path getUninurseBookFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"BlopApple":3,"-":13}},{"path":"src/main/java/seedu/uninurse/model/UninurseBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.UniquePersonList;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"public class UninurseBook implements ReadOnlyUninurseBook {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"    public UninurseBook() {}","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"     * Creates an UninurseBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"    public UninurseBook(ReadOnlyUninurseBook toBeCopied) {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"    public void setPersons(List\u003cPatient\u003e persons) {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"     * Resets the existing data of this {@code UninurseBook} with {@code newData}.","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"    public void resetData(ReadOnlyUninurseBook newData) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"    public boolean hasPerson(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"     * Adds a person to the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"     * The person must not already exist in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"    public void addPerson(Patient p) {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"     * {@code target} must exist in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"BlopApple"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"    public void setPerson(Patient target, Patient editedPerson) {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"BlopApple"},"content":"     * Removes {@code key} from this {@code UninurseBook}.","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"BlopApple"},"content":"     * {@code key} must exist in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"    public void removePerson(Patient key) {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"rama-pang"},"content":"    public ObservableList\u003cPatient\u003e getPersonList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"BlopApple"},"content":"                || (other instanceof UninurseBook // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"BlopApple"},"content":"                \u0026\u0026 persons.equals(((UninurseBook) other).persons));","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":18,"rama-pang":6,"-":96}},{"path":"src/main/java/seedu/uninurse/model/UninurseBookSnapshot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.logic.commands.CommandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" * A snapshot of a UninurseBook after a command.","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"public class UninurseBookSnapshot {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"    private final ReadOnlyUninurseBook uninurseBook;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"    private final CommandResult commandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"     * Creates an UninurseBookSnapshot using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    public UninurseBookSnapshot(ReadOnlyUninurseBook toBeCopied) {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"        this.uninurseBook \u003d new UninurseBook(toBeCopied);","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"        this.commandResult \u003d new CommandResult(\"\");","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"     * Creates an UninurseBookSnapshot using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    public UninurseBookSnapshot(ReadOnlyUninurseBook toBeCopied, CommandResult commandResult) {","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        this.uninurseBook \u003d new UninurseBook(toBeCopied);","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"        this.commandResult \u003d commandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"     * Returns commandResult.","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"    public CommandResult getCommandResult() {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"        return commandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"     * Returns the person list stored in uninurseBook.","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"    public List\u003cPatient\u003e getPersonList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"        return uninurseBook.getPersonList();","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"                || (other instanceof UninurseBookSnapshot // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 uninurseBook.equals(((UninurseBookSnapshot) other).uninurseBook)","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 commandResult.equals(((UninurseBookSnapshot) other).commandResult));","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"rama-pang":53}},{"path":"src/main/java/seedu/uninurse/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    private Path uninurseBookFilePath \u003d Paths.get(\"data\" , \"uninursebook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"        setUninurseBookFilePath(newUserPrefs.getUninurseBookFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"    public Path getUninurseBookFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"        return uninurseBookFilePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"    public void setUninurseBookFilePath(Path uninurseBookFilePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(uninurseBookFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"        this.uninurseBookFilePath \u003d uninurseBookFilePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"                \u0026\u0026 uninurseBookFilePath.equals(o.uninurseBookFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"        return Objects.hash(guiSettings, uninurseBookFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"BlopApple"},"content":"        sb.append(\"\\nLocal data file location : \" + uninurseBookFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":12,"-":75}},{"path":"src/main/java/seedu/uninurse/model/condition/Condition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package seedu.uninurse.model.condition;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import static seedu.uninurse.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":" * Represents a Patient\u0027s medical condition.","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCondition(String)}","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class Condition {","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Conditions can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"     * The first character of the condition must not be a whitespace,","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    public final String condition;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"     * Constructs a {@code Condition}.","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"     * @param condition A valid condition.","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    public Condition(String condition) {","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        requireNonNull(condition);","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        checkArgument(isValidCondition(condition), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        this.condition \u003d condition;","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     * Returns true if a given string is a valid condition.","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    public static boolean isValidCondition(String test) {","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        return condition;","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"                || (other instanceof Condition // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"                \u0026\u0026 condition.equals(((Condition) other).condition)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        return condition.hashCode();","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"izzahaj":56}},{"path":"src/main/java/seedu/uninurse/model/condition/ConditionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package seedu.uninurse.model.condition;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import seedu.uninurse.model.GenericList;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import seedu.uninurse.model.condition.exceptions.ConditionNotFoundException;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import seedu.uninurse.model.condition.exceptions.DuplicateConditionException;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":" * Represents a unique list of medical conditions for a particular patient.","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":" * Two conditions with the same name are considered duplicates and are hence, not allowed.","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"public class ConditionList implements GenericList\u003cCondition\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    public static final String MESSAGE_UNSUPPORTED_EDIT \u003d \"Conditions cannot be edited, only added or deleted\";","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    private final List\u003cCondition\u003e internalConditionList;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"     * Constructs an empty {@code ConditionList}.","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    public ConditionList() {","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        internalConditionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"     * Constructs a {@code ConditionList}.","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"     * @param conditions The given list of conditions.","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    public ConditionList(List\u003cCondition\u003e conditions) {","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"        requireNonNull(conditions);","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"        internalConditionList \u003d conditions;","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"     * Checks if the list already contains a given condition.","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"     * @param toCheck The condition to be checked.","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"     * @return Returns true if the list contains an equivalent condition as the given argument.","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    public boolean contains(Condition toCheck) {","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"        return internalConditionList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"    public ConditionList add(Condition condition) {","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        requireNonNull(condition);","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        if (contains(condition)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"            throw new DuplicateConditionException();","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"        List\u003cCondition\u003e updatedConditions \u003d new ArrayList\u003c\u003e(internalConditionList);","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"        updatedConditions.add(condition);","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"        return new ConditionList(updatedConditions);","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"    public ConditionList delete(int index) {","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"            List\u003cCondition\u003e updatedConditions \u003d new ArrayList\u003c\u003e(internalConditionList);","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"            updatedConditions.remove(index);","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"            return new ConditionList(updatedConditions);","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"            throw new ConditionNotFoundException();","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"    public ConditionList edit(int index, Condition condition) {","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        throw new UnsupportedOperationException(MESSAGE_UNSUPPORTED_EDIT);","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"    public Condition get(int index) {","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"            return internalConditionList.get(index);","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"            throw new ConditionNotFoundException();","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"    public int size() {","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        return internalConditionList.size();","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"        return internalConditionList.isEmpty();","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"    public List\u003cCondition\u003e getInternalList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"        // returns a copy of the internal list to prevent modification to original one","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"        return Collections.unmodifiableList(internalConditionList);","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"        internalConditionList.forEach(c -\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"            int index \u003d internalConditionList.indexOf(c);","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"            if (index \u003d\u003d 0) {","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"                builder.append(index + 1)","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"                        .append(\". \")","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"                        .append(c);","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"            } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"                builder.append(\"\\n\")","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"                        .append(index + 1)","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"                        .append(c);","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"        });","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"izzahaj"},"content":"                || (other instanceof ConditionList // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"izzahaj"},"content":"                \u0026\u0026 internalConditionList.equals(((ConditionList) other).internalConditionList));","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"izzahaj"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"izzahaj"},"content":"        return internalConditionList.hashCode();","lastModifiedDate":"2022-10-19"},{"lineNumber":130,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"izzahaj":131}},{"path":"src/main/java/seedu/uninurse/model/condition/exceptions/ConditionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package seedu.uninurse.model.condition.exceptions;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":" * Signals that the operation is unable to find the specified condition.","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"public class ConditionNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"izzahaj":7}},{"path":"src/main/java/seedu/uninurse/model/condition/exceptions/DuplicateConditionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package seedu.uninurse.model.condition.exceptions;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":" * Signals that the operation will result in duplicate Conditions.","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":" * Conditions are considered duplicates if they have the same name.","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"public class DuplicateConditionException extends RuntimeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"    public DuplicateConditionException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"        super(\"Operation would result in duplicate conditions\");","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"izzahaj":11}},{"path":"src/main/java/seedu/uninurse/model/medication/Medication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.medication;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" * Represents a Patient\u0027s required medication type and dosage","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMedication(String)}","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"public class Medication {","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"            \"Medication type can take any values and should not be blank.\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"            + \"Dosage amount should only contain alphanumeric characters, \"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"            + \"decimal points and spaces and should not be blank\";","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"    /*","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"     * The first character of the medication type and dosage amount must not be a whitespace,","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    public static final String MEDICATION_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"    public static final String DOSAGE_VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum}. ]*\";","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"    public final String medicationType;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"    public final String dosage;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"     * Constructs a {@code Medication}.","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"     * @param medicationType A valid medication type.","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"     * @param dosage A valid dosage amount.","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"    public Medication(String medicationType, String dosage) {","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(medicationType);","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(dosage);","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"        checkArgument(isValidMedication(medicationType, dosage), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"        this.medicationType \u003d medicationType;","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"     * Returns true if a given string is a valid medication.","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"    public static boolean isValidMedication(String medicationType, String dosage) {","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"        return medicationType.matches(MEDICATION_VALIDATION_REGEX) \u0026\u0026 dosage.matches(DOSAGE_VALIDATION_REGEX);","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"        return medicationType + \" \\\\| \" + dosage;","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"                || (other instanceof Medication // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"                \u0026\u0026 medicationType.equals(((Medication) other).medicationType)","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"                \u0026\u0026 dosage.equals(((Medication) other).dosage)); // state check","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"BlopApple"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"        return medicationType.hashCode();","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":64}},{"path":"src/main/java/seedu/uninurse/model/medication/MedicationList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.medication;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.GenericList;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.medication.exceptions.DuplicateMedicationException;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.medication.exceptions.MedicationNotFoundException;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.medication.exceptions.UnmodifiedMedicationException;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":" * Represents a unique list of medications for a particular patient.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":" * Two medications with the same name and dosage amount are considered duplicates and are hence, not allowed.","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"public class MedicationList implements GenericList\u003cMedication\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    private final List\u003cMedication\u003e internalMedicationList;","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"     * Constructs an empty {@code MedicationList}.","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"    public MedicationList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"        this.internalMedicationList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"     * Constructs a {@code MedicationList}.","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"     * @param medicationList The given list of medications.","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"    public MedicationList(List\u003cMedication\u003e medicationList) {","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(medicationList);","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"        this.internalMedicationList \u003d medicationList;","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"    public MedicationList add(Medication medication) {","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(medication);","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"        if (this.internalMedicationList.contains(medication)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"            throw new DuplicateMedicationException();","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"        List\u003cMedication\u003e updatedMedications \u003d new ArrayList\u003c\u003e(internalMedicationList);","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"        updatedMedications.add(medication);","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"        return new MedicationList(updatedMedications);","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"    public MedicationList delete(int index) {","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"            List\u003cMedication\u003e updatedMedications \u003d new ArrayList\u003c\u003e(internalMedicationList);","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"            updatedMedications.remove(index);","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"            return new MedicationList(updatedMedications);","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"            throw new MedicationNotFoundException();","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"    public MedicationList edit(int index, Medication editedMedication) {","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"            List\u003cMedication\u003e updatedMedications \u003d new ArrayList\u003c\u003e(internalMedicationList);","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"            if (updatedMedications.get(index).equals(editedMedication)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"                throw new UnmodifiedMedicationException();","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"BlopApple"},"content":"            updatedMedications.set(index, editedMedication);","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"            return new MedicationList(updatedMedications);","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"            throw new MedicationNotFoundException();","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"    public Medication get(int index) {","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"            return internalMedicationList.get(index);","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"BlopApple"},"content":"            throw new MedicationNotFoundException();","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"BlopApple"},"content":"    public int size() {","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"BlopApple"},"content":"        return internalMedicationList.size();","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"BlopApple"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"BlopApple"},"content":"        return internalMedicationList.isEmpty();","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"BlopApple"},"content":"    public List\u003cMedication\u003e getInternalList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"BlopApple"},"content":"        return Collections.unmodifiableList(internalMedicationList);","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"BlopApple"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"BlopApple"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"BlopApple"},"content":"        internalMedicationList.forEach(m -\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"BlopApple"},"content":"            int index \u003d internalMedicationList.indexOf(m);","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"BlopApple"},"content":"            if (index \u003d\u003d 0) {","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"BlopApple"},"content":"                builder.append(index + 1)","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"BlopApple"},"content":"                        .append(\". \")","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"BlopApple"},"content":"                        .append(m);","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"BlopApple"},"content":"            } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"BlopApple"},"content":"                builder.append(\"\\n\")","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"BlopApple"},"content":"                        .append(index + 1)","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"BlopApple"},"content":"                        .append(\". \")","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"BlopApple"},"content":"                        .append(m);","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"BlopApple"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"BlopApple"},"content":"        });","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"BlopApple"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"BlopApple"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"BlopApple"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"BlopApple"},"content":"                || (other instanceof MedicationList // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"BlopApple"},"content":"                \u0026\u0026 internalMedicationList.equals(((MedicationList) other).internalMedicationList));","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"BlopApple"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"BlopApple"},"content":"        return internalMedicationList.hashCode();","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":129}},{"path":"src/main/java/seedu/uninurse/model/medication/exceptions/DuplicateMedicationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.medication.exceptions;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":" * Signals that the operation will result in duplicate Medications.","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":" * Medications are considered duplicates if they have the same medication type and dosage amount.","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"public class DuplicateMedicationException extends RuntimeException {","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"    public DuplicateMedicationException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"        super(\"Operation would result in duplicate medication\");","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":11}},{"path":"src/main/java/seedu/uninurse/model/medication/exceptions/MedicationNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.medication.exceptions;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":" * Signals that the operation is unable to find the specified medication.","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"public class MedicationNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":7}},{"path":"src/main/java/seedu/uninurse/model/medication/exceptions/UnmodifiedMedicationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.medication.exceptions;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":" * Signals that the operation did not modify an existing duplicate Medication.","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":" * Medications are considered duplicates if they have the same medication type and dosage amount.","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"public class UnmodifiedMedicationException extends RuntimeException {","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"    public UnmodifiedMedicationException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"        super(\"Operation did not modify existing medication\");","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":11}},{"path":"src/main/java/seedu/uninurse/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" * Represents a Patient\u0027s address in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":3,"izzahaj":1,"-":53}},{"path":"src/main/java/seedu/uninurse/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" * Represents a Patient\u0027s email in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":3,"-":68}},{"path":"src/main/java/seedu/uninurse/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" * Represents a Patient\u0027s name in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":3,"-":56}},{"path":"src/main/java/seedu/uninurse/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.StringUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"    public boolean test(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"BlopApple":2,"rama-pang":3,"-":26}},{"path":"src/main/java/seedu/uninurse/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":" * Represents a Patient in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"public class Patient extends Person {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    // Data fields","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, TaskList tasks, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"        requireAllNonNull(name, phone, email, address, tasks, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        return tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"    public boolean isSamePerson(Patient otherPerson) {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"        Patient otherPerson \u003d (Patient) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 otherPerson.getTasks().equals(getTasks())","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"        return Objects.hash(super.hashCode(), tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"                .append(\"\\nPhone: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"                .append(getPhone())","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"                .append(\"\\nEmail: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"                .append(getEmail())","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"rama-pang"},"content":"                .append(\"\\nAddress: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"                .append(getAddress());","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"        TaskList tasks \u003d getTasks();","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"            builder.append(\"\\nTasks:\\n\")","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"                    .append(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"rama-pang"},"content":"            builder.append(\"\\nTags: \");","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":5,"rama-pang":95}},{"path":"src/main/java/seedu/uninurse/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":" * Represents a Person in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"                .append(\"\\nPhone: \")","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"                .append(\"\\nEmail: \")","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"                .append(\"\\nAddress: \")","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"            builder.append(\"\\nTags: \");","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":4,"izzahaj":5,"-":114}},{"path":"src/main/java/seedu/uninurse/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" * Represents a Patient\u0027s phone number in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":3,"-":50}},{"path":"src/main/java/seedu/uninurse/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":" * A person is considered unique by comparing using {@code Patient#isSamePerson(Patient)}. As such, adding and","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":" * updating of persons uses Patient#isSamePerson(Patient) for equality so as to ensure that the person being added","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":" * or updated is unique in terms of identity in the UniquePersonList. However, the removal of a person uses","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":" * Patient#equals(Object) so as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":" * @see Patient#isSamePerson(Patient)","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"public class UniquePersonList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"    public void setPerson(Patient target, Patient editedPerson) {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"    public void setPersons(List\u003cPatient\u003e persons) {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"rama-pang"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"rama-pang"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"rama-pang"},"content":"    private boolean personsAreUnique(List\u003cPatient\u003e persons) {","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":4,"rama-pang":16,"-":117}},{"path":"src/main/java/seedu/uninurse/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"BlopApple":1,"-":10}},{"path":"src/main/java/seedu/uninurse/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"BlopApple":1,"-":5}},{"path":"src/main/java/seedu/uninurse/model/remark/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.remark;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" * Represents a Patient\u0027s additional information as remarks.","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRemark(String)}","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"public class Remark {","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values and should not be blank.\";","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"    /*","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"     * The first character of the remark must not be a whitespace,","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"    public final String remark;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"     * Returns true if a given string is a valid remark.","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"    public static boolean isValidRemark(String remark) {","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"        return remark.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"        return remark;","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"                \u0026\u0026 remark.equals(((Remark) other).remark)); // state check","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"        return remark.hashCode();","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":55}},{"path":"src/main/java/seedu/uninurse/model/remark/RemarkList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.remark;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.GenericList;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.remark.exceptions.DuplicateRemarkException;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.remark.exceptions.RemarkNotFoundException;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.remark.exceptions.UnmodifiedRemarkException;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":" * Represents a unique list of remarks for a particular patient.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":" * Two remarks with the same descriptions are considered duplicates and are hence, not allowed.","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"public class RemarkList implements GenericList\u003cRemark\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    private final List\u003cRemark\u003e internalRemarkList;","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"     * Constructs an empty {@code RemarkList}.","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"    public RemarkList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"        this.internalRemarkList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"     * Constructs a {@code RemarkList}.","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"     * @param remarkList The given list of remarks.","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"    public RemarkList(List\u003cRemark\u003e remarkList) {","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(remarkList);","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"        this.internalRemarkList \u003d remarkList;","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"    public RemarkList add(Remark remark) {","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"        if (this.internalRemarkList.contains(remark)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"            throw new DuplicateRemarkException();","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"        List\u003cRemark\u003e updatedRemarks \u003d new ArrayList\u003c\u003e(internalRemarkList);","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"        updatedRemarks.add(remark);","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"        return new RemarkList(updatedRemarks);","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"    public RemarkList delete(int index) {","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"            List\u003cRemark\u003e updatedRemarks \u003d new ArrayList\u003c\u003e(internalRemarkList);","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"            updatedRemarks.remove(index);","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"            return new RemarkList(updatedRemarks);","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"            throw new RemarkNotFoundException();","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"    public RemarkList edit(int index, Remark editedRemark) {","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"            List\u003cRemark\u003e updatedRemarks \u003d new ArrayList\u003c\u003e(internalRemarkList);","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"            if (updatedRemarks.get(index).equals(editedRemark)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"                throw new UnmodifiedRemarkException();","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"BlopApple"},"content":"            updatedRemarks.set(index, editedRemark);","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"            return new RemarkList(updatedRemarks);","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"            throw new RemarkNotFoundException();","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"    public Remark get(int index) {","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"            return internalRemarkList.get(index);","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"BlopApple"},"content":"            throw new RemarkNotFoundException();","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"BlopApple"},"content":"    public int size() {","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"BlopApple"},"content":"        return internalRemarkList.size();","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"BlopApple"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"BlopApple"},"content":"        return internalRemarkList.isEmpty();","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"BlopApple"},"content":"    public List\u003cRemark\u003e getInternalList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"BlopApple"},"content":"        return Collections.unmodifiableList(internalRemarkList);","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"BlopApple"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"BlopApple"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"BlopApple"},"content":"        internalRemarkList.forEach(r -\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"BlopApple"},"content":"            int index \u003d internalRemarkList.indexOf(r);","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"BlopApple"},"content":"            if (index \u003d\u003d 0) {","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"BlopApple"},"content":"                builder.append(index + 1)","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"BlopApple"},"content":"                        .append(\". \")","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"BlopApple"},"content":"                        .append(r);","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"BlopApple"},"content":"            } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"BlopApple"},"content":"                builder.append(\"\\n\")","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"BlopApple"},"content":"                        .append(index + 1)","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"BlopApple"},"content":"                        .append(\". \")","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"BlopApple"},"content":"                        .append(r);","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"BlopApple"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"BlopApple"},"content":"        });","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"BlopApple"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"BlopApple"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"BlopApple"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"BlopApple"},"content":"                || (other instanceof RemarkList // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"BlopApple"},"content":"                \u0026\u0026 internalRemarkList.equals(((RemarkList) other).internalRemarkList));","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"BlopApple"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"BlopApple"},"content":"        return internalRemarkList.hashCode();","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":129}},{"path":"src/main/java/seedu/uninurse/model/remark/exceptions/DuplicateRemarkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.remark.exceptions;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":" * Signals that the operation will result in duplicate Remarks.","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":" * Remarks are considered duplicates if they have the same description.","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"public class DuplicateRemarkException extends RuntimeException {","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"    public DuplicateRemarkException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"        super(\"Operation would result in duplicate remark\");","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":11}},{"path":"src/main/java/seedu/uninurse/model/remark/exceptions/RemarkNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.remark.exceptions;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":" * Signals that the operation is unable to find the specified remark.","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"public class RemarkNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":7}},{"path":"src/main/java/seedu/uninurse/model/remark/exceptions/UnmodifiedRemarkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.remark.exceptions;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":" * Signals that the operation did not modify an existing duplicate Remark.","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":" * Remark are considered duplicates if they have the same description.","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"public class UnmodifiedRemarkException extends RuntimeException {","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"    public UnmodifiedRemarkException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"        super(\"Operation did not modify existing remark\");","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":11}},{"path":"src/main/java/seedu/uninurse/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" * Represents a Tag in the uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BlopApple":3,"-":51}},{"path":"src/main/java/seedu/uninurse/model/task/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ramanathan0908"},"content":"package seedu.uninurse.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":" * Represents Date \u0026 Time encapsulation for tasks","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"public class DateTime {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String DATE_TIME_PATTERN \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date and time should be in the format of: \"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"            + DATE_TIME_PATTERN + \" i.e 16-10-2022 1015\";","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_TIME_PATTERN);","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"    public final LocalDateTime dateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"     * Constructs a default Date and Time, one day from the current time.","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"    public DateTime() {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Ramanathan0908"},"content":"        dateTime \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"     * Constructs a {@code DateTime} with the given {@code validDateTime}.","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"    public DateTime(String validDateTime) {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(validDateTime);","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Ramanathan0908"},"content":"        assert(isValidDateTime(validDateTime));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Ramanathan0908"},"content":"        dateTime \u003d LocalDateTime.parse(validDateTime, FORMATTER);","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Ramanathan0908"},"content":"     * returns if the Date is today\u0027s date.","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Ramanathan0908"},"content":"    public boolean isToday() {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Ramanathan0908"},"content":"        LocalDateTime today \u003d LocalDateTime.now();","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Ramanathan0908"},"content":"        return today.getDayOfYear() \u003d\u003d dateTime.getDayOfYear()","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Ramanathan0908"},"content":"                \u0026\u0026 today.getYear() \u003d\u003d dateTime.getYear();","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Ramanathan0908"},"content":"     * returns if the {@code test} is a valid date time string.","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Ramanathan0908"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(test);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Ramanathan0908"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Ramanathan0908"},"content":"            FORMATTER.parse(test);","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Ramanathan0908"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Ramanathan0908"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Ramanathan0908"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Ramanathan0908"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Ramanathan0908"},"content":"        return dateTime.format(FORMATTER);","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ramanathan0908":65}},{"path":"src/main/java/seedu/uninurse/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":" * Represents a Task for a Patient.","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskDescription(String)}","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"public class Task {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    // consideration for v1.3: display status of task, which is to be","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    // set in constructor since task is immutable","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tasks can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    /*","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"     * The first character of the task must not be a whitespace,","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"    public final String taskDescription;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"    public final DateTime dateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Ramanathan0908"},"content":"     * Constructs a {@code Task} with the given {@code description}.","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"    public Task(String description) {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"        checkArgument(isValidTaskDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"        taskDescription \u003d description;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"        dateTime \u003d new DateTime();","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"     * Constructs a {@code Task} with the given {@code description} and {@code dateAndTime}.","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"    public Task(String description, DateTime dateAndTime) {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Ramanathan0908"},"content":"        checkArgument(isValidTaskDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Ramanathan0908"},"content":"        taskDescription \u003d description;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Ramanathan0908"},"content":"        dateTime \u003d dateAndTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"     * Returns true if a given string is a valid task description.","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Ramanathan0908"},"content":"    public static boolean isValidTaskDescription(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Ramanathan0908"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Ramanathan0908"},"content":"    public boolean isTaskToday() {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Ramanathan0908"},"content":"        return dateTime.isToday();","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Ramanathan0908"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Ramanathan0908"},"content":"        return taskDescription + \" \" + dateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Ramanathan0908"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Ramanathan0908"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Ramanathan0908"},"content":"                || (other instanceof Task // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Ramanathan0908"},"content":"                \u0026\u0026 taskDescription.equals(((Task) other).taskDescription)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Ramanathan0908"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Ramanathan0908"},"content":"        return taskDescription.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"BlopApple":2,"Ramanathan0908":59,"izzahaj":12}},{"path":"src/main/java/seedu/uninurse/model/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.GenericList;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":" * Represents a list of tasks for a particular person.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"public class TaskList implements GenericList\u003cTask\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    private ArrayList\u003cTask\u003e internalTaskList;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    public TaskList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        internalTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"     * Constructs a {@code TaskList} with a given list of tasks.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        requireNonNull(tasks);","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        internalTaskList \u003d tasks;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     * Adds a task to the {@code TaskList},","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     * @return The updated {@code TaskList} containing the added task.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    public TaskList add(Task task) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d new ArrayList\u003c\u003e(internalTaskList);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        updatedTasks.add(task);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Ramanathan0908"},"content":"     * Edits a task in the {@code TaskList}.","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Ramanathan0908"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Ramanathan0908"},"content":"     * @param index of the task to be edited.","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Ramanathan0908"},"content":"     * @param task that is updated.","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Ramanathan0908"},"content":"     * @return The updated {@code TaskList}.","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Ramanathan0908"},"content":"    public TaskList edit(int index, Task task) {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Ramanathan0908"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d new ArrayList\u003c\u003e(internalTaskList);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Ramanathan0908"},"content":"        updatedTasks.set(index, task);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Ramanathan0908"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"     * Removes a task from the {@code TaskList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"     * @return The updated {@code TaskList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"    public TaskList delete(int index) {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d new ArrayList\u003c\u003e(internalTaskList);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        updatedTasks.remove(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Ramanathan0908"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"        return internalTaskList.get(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"     * Returns the size of the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"    public int size() {","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"        return internalTaskList.size();","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"     * Returns true if the task list is empty.","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"        return this.internalTaskList.isEmpty();","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"     * Returns the internal task list.","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"        return internalTaskList;","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"Ramanathan0908"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Ramanathan0908"},"content":"    public List\u003cTask\u003e getInternalList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Ramanathan0908"},"content":"        return internalTaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"     * Returns a list of {@code Task}s that are due today.","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"Ramanathan0908"},"content":"    public List\u003cTask\u003e getAllTasksToday() {","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"Ramanathan0908"},"content":"        return internalTaskList.stream().filter(Task::isTaskToday).collect(Collectors.toList());","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"     * Returns true if there are tasks today.","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"Ramanathan0908"},"content":"    public boolean containsTaskToday() {","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"Ramanathan0908"},"content":"        return !this.getAllTasksToday().isEmpty();","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"izzahaj"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"rama-pang"},"content":"        for (int index \u003d 0; index \u003c internalTaskList.size(); index++) {","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"rama-pang"},"content":"            Task t \u003d internalTaskList.get(index);","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"izzahaj"},"content":"            if (index \u003d\u003d 0) {","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"izzahaj"},"content":"                builder.append(index + 1)","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"izzahaj"},"content":"                        .append(\". \")","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"izzahaj"},"content":"                        .append(t);","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"izzahaj"},"content":"            } else {","lastModifiedDate":"2022-10-08"},{"lineNumber":131,"author":{"gitId":"izzahaj"},"content":"                builder.append(\"\\n\")","lastModifiedDate":"2022-10-08"},{"lineNumber":132,"author":{"gitId":"izzahaj"},"content":"                        .append(index + 1)","lastModifiedDate":"2022-10-08"},{"lineNumber":133,"author":{"gitId":"izzahaj"},"content":"                        .append(\". \")","lastModifiedDate":"2022-10-08"},{"lineNumber":134,"author":{"gitId":"izzahaj"},"content":"                        .append(t);","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"izzahaj"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-07"},{"lineNumber":138,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":139,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":140,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"izzahaj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"izzahaj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":143,"author":{"gitId":"izzahaj"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"izzahaj"},"content":"                \u0026\u0026 internalTaskList.equals(((TaskList) other).internalTaskList));","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":146,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":147,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"izzahaj"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"izzahaj"},"content":"        return internalTaskList.hashCode();","lastModifiedDate":"2022-10-07"},{"lineNumber":150,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":151,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"BlopApple":1,"rama-pang":3,"Ramanathan0908":40,"izzahaj":107}},{"path":"src/main/java/seedu/uninurse/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.task.DateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":" * Contains utility methods for populating {@code UninurseBook} with sample data.","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    public static final TaskList EMPTY_TASK_LIST \u003d new TaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    public static Patient[] getSamplePersons() {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        return new Patient[] {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"            new Patient(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_TASK_LIST,","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"            new Patient(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"                getTaskList(new Task(\"Change dressing on right arm\", new DateTime(\"16-10-2022 1015\"))),","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"Ramanathan0908"},"content":"                getTaskList(new Task(\"Check blood glucose level\", new DateTime(\"25-11-2022 1300\")),","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"                        new Task(\"Administer insulin dose\", new DateTime(\"30-12-2022 1845\"))),","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"            new Patient(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_TASK_LIST,","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_TASK_LIST,","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"            new Patient(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_TASK_LIST,","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"    public static ReadOnlyUninurseBook getSampleUninurseBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"        UninurseBook sampleAb \u003d new UninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"        for (Patient samplePerson : getSamplePersons()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"Ramanathan0908"},"content":"     * Returns a {@code TaskList} containing the list of tasks given.","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"Ramanathan0908"},"content":"    public static TaskList getTaskList(Task... tasks) {","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"Ramanathan0908"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d Arrays.stream(tasks).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        return new TaskList(taskArrayList);","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"BlopApple":14,"rama-pang":9,"Ramanathan0908":7,"izzahaj":12,"-":35}},{"path":"src/main/java/seedu/uninurse/storage/JsonAdaptedDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ramanathan0908"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.task.DateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":" * Jackson-friendly version of {@link DateTime}","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"public class JsonAdaptedDateTime {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"    private final String dateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"     * Constructs a {@code JsonAdaptedDateTime} with the given {@code validDateTime}.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"    public JsonAdaptedDateTime(String validDateTime) {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"        this.dateTime \u003d validDateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":"     * Converts a given {@code DateTime} into this class for Jackson use.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Ramanathan0908"},"content":"    public JsonAdaptedDateTime(DateTime dateTime) {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"        this.dateTime \u003d dateTime.toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"    @JsonValue","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"        return dateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Ramanathan0908"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"     * Converts this Jackson-friendly adapted DateTime object into the model\u0027s {@code DateTime} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Ramanathan0908"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted DateTime.","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Ramanathan0908"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"    public DateTime toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Ramanathan0908"},"content":"        if (!DateTime.isValidDateTime(dateTime)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Ramanathan0908"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Ramanathan0908"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Ramanathan0908"},"content":"        return new DateTime(dateTime);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ramanathan0908":48}},{"path":"src/main/java/seedu/uninurse/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"            @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks,","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"            this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"    public JsonAdaptedPerson(Patient source) {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        tasks.addAll(source.getTasks().getTasks().stream()","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"                .map(JsonAdaptedTask::new)","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"        final ArrayList\u003cTask\u003e personTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"        for (JsonAdaptedTask task : tasks) {","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"            personTasks.add(task.toModelType());","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"        final TaskList modelTasks \u003d new TaskList(personTasks);","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":125,"author":{"gitId":"rama-pang"},"content":"        return new Patient(modelName, modelPhone, modelEmail, modelAddress, modelTasks, modelTags);","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BlopApple":10,"rama-pang":7,"izzahaj":17,"-":94}},{"path":"src/main/java/seedu/uninurse/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BlopApple":3,"-":45}},{"path":"src/main/java/seedu/uninurse/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.task.DateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":" * Jackson-friendly version of {@link Task}","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    private final String taskDescription;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"    private final JsonAdaptedDateTime dateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given {@code taskDescription}.","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"    public JsonAdaptedTask(@JsonProperty(\"taskDescription\") String taskDescription,","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"                           @JsonProperty(\"dateTime\") JsonAdaptedDateTime dateTime) {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"        taskDescription \u003d source.taskDescription;","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"        dateTime \u003d new JsonAdaptedDateTime(source.dateTime);","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"Ramanathan0908"},"content":"        if (!Task.isValidTaskDescription(taskDescription) || !DateTime.isValidDateTime(dateTime.getDateTime())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"            throw new IllegalValueException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"Ramanathan0908"},"content":"        return new Task(taskDescription, dateTime.toModelType());","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"BlopApple":3,"Ramanathan0908":9,"izzahaj":35}},{"path":"src/main/java/seedu/uninurse/storage/JsonSerializableUninurseBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":" * An Immutable UninurseBook that is serializable to JSON format.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"@JsonRootName(value \u003d \"uninursebook\")","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"class JsonSerializableUninurseBook {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"     * Constructs a {@code JsonSerializableUninurseBook} with the given persons.","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"    public JsonSerializableUninurseBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"     * Converts a given {@code ReadOnlyUninurseBook} into this class for Jackson use.","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableUninurseBook}.","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"    public JsonSerializableUninurseBook(ReadOnlyUninurseBook source) {","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"     * Converts this uninurse book into the model\u0027s {@code UninurseBook} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"    public UninurseBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"        UninurseBook uninurseBook \u003d new UninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"            Patient person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"            if (uninurseBook.hasPerson(person)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"            uninurseBook.addPerson(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"        return uninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BlopApple":19,"rama-pang":1,"-":40}},{"path":"src/main/java/seedu/uninurse/storage/JsonUninurseBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.FileUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.JsonUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":" * A class to access UninurseBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"public class JsonUninurseBookStorage implements UninurseBookStorage {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUninurseBookStorage.class);","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    public JsonUninurseBookStorage(Path filePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"    public Path getUninurseBookFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"        return filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"    public Optional\u003cReadOnlyUninurseBook\u003e readUninurseBook() throws DataConversionException {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"        return readUninurseBook(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"     * Similar to {@link #readUninurseBook()}.","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"    public Optional\u003cReadOnlyUninurseBook\u003e readUninurseBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"        Optional\u003cJsonSerializableUninurseBook\u003e jsonUninurseBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"                filePath, JsonSerializableUninurseBook.class);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"        if (!jsonUninurseBook.isPresent()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"            return Optional.of(jsonUninurseBook.get().toModelType());","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"    public void saveUninurseBook(ReadOnlyUninurseBook uninurseBook) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"        saveUninurseBook(uninurseBook, filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"BlopApple"},"content":"     * Similar to {@link #saveUninurseBook(ReadOnlyUninurseBook)}.","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"    public void saveUninurseBook(ReadOnlyUninurseBook uninurseBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(uninurseBook);","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableUninurseBook(uninurseBook), filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"BlopApple":80}},{"path":"src/main/java/seedu/uninurse/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.JsonUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BlopApple":5,"-":42}},{"path":"src/main/java/seedu/uninurse/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":" * API of the Storage component","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"public interface Storage extends UninurseBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"    Path getUninurseBookFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"    Optional\u003cReadOnlyUninurseBook\u003e readUninurseBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"    void saveUninurseBook(ReadOnlyUninurseBook uninurseBook) throws IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"BlopApple":32}},{"path":"src/main/java/seedu/uninurse/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":" * Manages storage of UninurseBook data in local storage.","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    private UninurseBookStorage uninurseBookStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"     * Creates a {@code StorageManager} with the given {@code UninurseBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    public StorageManager(UninurseBookStorage uninurseBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        this.uninurseBookStorage \u003d uninurseBookStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UninurseBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"    public Path getUninurseBookFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"        return uninurseBookStorage.getUninurseBookFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"    public Optional\u003cReadOnlyUninurseBook\u003e readUninurseBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"        return readUninurseBook(uninurseBookStorage.getUninurseBookFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"    public Optional\u003cReadOnlyUninurseBook\u003e readUninurseBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"        return uninurseBookStorage.readUninurseBook(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"BlopApple"},"content":"    public void saveUninurseBook(ReadOnlyUninurseBook uninurseBook) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"        saveUninurseBook(uninurseBook, uninurseBookStorage.getUninurseBookFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"    public void saveUninurseBook(ReadOnlyUninurseBook uninurseBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"        uninurseBookStorage.saveUninurseBook(uninurseBook, filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"BlopApple":78}},{"path":"src/main/java/seedu/uninurse/storage/UninurseBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":" * Represents a storage for {@link seedu.uninurse.model.UninurseBook}.","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"public interface UninurseBookStorage {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"    Path getUninurseBookFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"     * Returns UninurseBook data as a {@link ReadOnlyUninurseBook}.","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    Optional\u003cReadOnlyUninurseBook\u003e readUninurseBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"     * @see #getUninurseBookFilePath()","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"    Optional\u003cReadOnlyUninurseBook\u003e readUninurseBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"     * Saves the given {@link ReadOnlyUninurseBook} to the storage.","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"     * @param uninurseBook cannot be null.","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"    void saveUninurseBook(ReadOnlyUninurseBook uninurseBook) throws IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"     * @see #saveUninurseBook(ReadOnlyUninurseBook)","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"    void saveUninurseBook(ReadOnlyUninurseBook uninurseBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"BlopApple":45}},{"path":"src/main/java/seedu/uninurse/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":" * Represents a storage for {@link seedu.uninurse.model.UserPrefs}.","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"     * Saves the given {@link seedu.uninurse.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BlopApple":6,"-":30}},{"path":"src/main/java/seedu/uninurse/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"import seedu.uninurse.commons.core.Config;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.CommandResult;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    private final CommandHistoryList history;","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        this.history \u003d new CommandHistoryList();","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"            history.add(commandText);","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"     * Handles the Up and Down button pressed event.","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"    private void handleOnKeyPressed(KeyEvent keyEvent) {","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"        Optional\u003cString\u003e text;","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"        switch (keyEvent.getCode()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"        case UP:","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"            text \u003d history.handleUpKey();","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"        case DOWN:","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"            text \u003d history.handleDownKey();","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"        default:","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"            text \u003d Optional.empty();","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"        if (text.isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"            commandTextField.setText(text.get());","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"            commandTextField.positionCaret(text.get().length());","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"BlopApple"},"content":"         * @see seedu.uninurse.logic.Logic#execute(String)","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"rama-pang"},"content":"     * The command history list.","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"rama-pang"},"content":"    private static final class CommandHistoryList {","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"rama-pang"},"content":"        private final List\u003cString\u003e history;","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"rama-pang"},"content":"        private int currentPointer;","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"rama-pang"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"rama-pang"},"content":"         * Creates a {@code CommandHistoryList}.","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"rama-pang"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"rama-pang"},"content":"        public CommandHistoryList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"rama-pang"},"content":"            this.history \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"rama-pang"},"content":"            this.history.add(\"\");","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"rama-pang"},"content":"            this.currentPointer \u003d 0;","lastModifiedDate":"2022-10-19"},{"lineNumber":130,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"rama-pang"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"rama-pang"},"content":"         * Adds a successful command to the history list, if the last command is a different one.","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"rama-pang"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"rama-pang"},"content":"        public void add(String command) {","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"rama-pang"},"content":"            if (history.size() \u003c 2 || !history.get(history.size() - 2).equals(command)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"rama-pang"},"content":"                // Update history only if the new command is different from the last one","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"rama-pang"},"content":"                history.set(history.size() - 1, command);","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"rama-pang"},"content":"                while (history.size() \u003e Config.HISTORY_SIZE_LIMIT) {","lastModifiedDate":"2022-10-19"},{"lineNumber":140,"author":{"gitId":"rama-pang"},"content":"                    history.remove(0);","lastModifiedDate":"2022-10-19"},{"lineNumber":141,"author":{"gitId":"rama-pang"},"content":"                }","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"rama-pang"},"content":"                history.add(\"\");","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"rama-pang"},"content":"            currentPointer \u003d history.size() - 1;","lastModifiedDate":"2022-10-19"},{"lineNumber":145,"author":{"gitId":"rama-pang"},"content":"            assert 1 \u003c\u003d history.size() \u0026\u0026 history.size() \u003c\u003d Config.HISTORY_SIZE_LIMIT + 1;","lastModifiedDate":"2022-10-19"},{"lineNumber":146,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"rama-pang"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":149,"author":{"gitId":"rama-pang"},"content":"         * Handles the Up Key Button Pressed event.","lastModifiedDate":"2022-10-19"},{"lineNumber":150,"author":{"gitId":"rama-pang"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":151,"author":{"gitId":"rama-pang"},"content":"        public Optional\u003cString\u003e handleUpKey() {","lastModifiedDate":"2022-10-19"},{"lineNumber":152,"author":{"gitId":"rama-pang"},"content":"            assert 0 \u003c\u003d currentPointer \u0026\u0026 currentPointer \u003c\u003d history.size() - 1;","lastModifiedDate":"2022-10-19"},{"lineNumber":153,"author":{"gitId":"rama-pang"},"content":"            if (currentPointer \u003d\u003d 0) {","lastModifiedDate":"2022-10-19"},{"lineNumber":154,"author":{"gitId":"rama-pang"},"content":"                return Optional.empty();","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"rama-pang"},"content":"            currentPointer -\u003d 1;","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"rama-pang"},"content":"            return Optional.of(this.get());","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"rama-pang"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"rama-pang"},"content":"         * Handles the Down Key Button Pressed event.","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"rama-pang"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"rama-pang"},"content":"        public Optional\u003cString\u003e handleDownKey() {","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"rama-pang"},"content":"            assert 0 \u003c\u003d currentPointer \u0026\u0026 currentPointer \u003c\u003d history.size() - 1;","lastModifiedDate":"2022-10-19"},{"lineNumber":165,"author":{"gitId":"rama-pang"},"content":"            if (currentPointer + 1 \u003d\u003d history.size()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":166,"author":{"gitId":"rama-pang"},"content":"                return Optional.empty();","lastModifiedDate":"2022-10-19"},{"lineNumber":167,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":168,"author":{"gitId":"rama-pang"},"content":"            currentPointer +\u003d 1;","lastModifiedDate":"2022-10-19"},{"lineNumber":169,"author":{"gitId":"rama-pang"},"content":"            return Optional.of(this.get());","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"rama-pang"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"rama-pang"},"content":"         * Returns the command currently pointed to in the history list.","lastModifiedDate":"2022-10-19"},{"lineNumber":174,"author":{"gitId":"rama-pang"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":175,"author":{"gitId":"rama-pang"},"content":"        private String get() {","lastModifiedDate":"2022-10-19"},{"lineNumber":176,"author":{"gitId":"rama-pang"},"content":"            assert 0 \u003c\u003d currentPointer \u0026\u0026 currentPointer \u003c\u003d history.size() - 1;","lastModifiedDate":"2022-10-19"},{"lineNumber":177,"author":{"gitId":"rama-pang"},"content":"            return history.get(currentPointer);","lastModifiedDate":"2022-10-19"},{"lineNumber":178,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":179,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":180,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"BlopApple":5,"rama-pang":97,"-":79}},{"path":"src/main/java/seedu/uninurse/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-t12-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BlopApple":2,"izzahaj":1,"-":99}},{"path":"src/main/java/seedu/uninurse/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.Logic;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.CommandResult;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"BlopApple"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), logic.getTaskListFlagSupplier());","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"BlopApple"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getUninurseBookFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"BlopApple"},"content":"     * @see seedu.uninurse.logic.Logic#execute(String)","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BlopApple":10,"-":186}},{"path":"src/main/java/seedu/uninurse/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on UninurseBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    public final Patient person;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"     * Creates a {@code PersonCode} with the given {@code Patient} and index to display.","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"    public PersonCard(Patient person, int displayedIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"        this(person, displayedIndex, false);","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"     * Creates a {@code PersonCode} with the given {@code Patient} and its associated task list and index to display.","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"    public PersonCard(Patient person, int displayedIndex, boolean taskListFlag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"        if (taskListFlag) {","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"            cardPane.getChildren().add(new TaskListCard(person.getTasks().toString()).getRoot());","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"BlopApple":12,"rama-pang":6,"-":70}},{"path":"src/main/java/seedu/uninurse/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    private ListView\u003cPatient\u003e personListView;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    public PersonListPanel(ObservableList\u003cPatient\u003e personList, Supplier\u003cBoolean\u003e taskListFlagSupplier) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell(taskListFlagSupplier));","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PersonCard}.","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"    class PersonListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"        private final Supplier\u003cBoolean\u003e taskListFlagSupplier;","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"        PersonListViewCell(Supplier\u003cBoolean\u003e taskListFlagSupplier) {","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"            super();","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"            this.taskListFlagSupplier \u003d taskListFlagSupplier;","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"        protected void updateItem(Patient person, boolean empty) {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1, taskListFlagSupplier.get()).getRoot());","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BlopApple":13,"rama-pang":5,"-":39}},{"path":"src/main/java/seedu/uninurse/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BlopApple":1,"-":27}},{"path":"src/main/java/seedu/uninurse/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":1,"-":27}},{"path":"src/main/java/seedu/uninurse/ui/TaskListCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"public class TaskListCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"    private Label header;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    private Label taskList;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"     * Creates a {@code TaskListCard} with the given {@code TaskList} to display.","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"    public TaskListCard(String taskListString) {","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"        super(FXML);","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"        header.setText(\"Tasks:\");","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        taskList.setText(taskListString);","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"        if (!(other instanceof TaskListCard)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"            return false;","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"        // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"        TaskListCard card \u003d (TaskListCard) other;","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"        return taskList.getText().equals(card.taskList.getText());","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"BlopApple":45,"rama-pang":1}},{"path":"src/main/java/seedu/uninurse/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BlopApple":1,"-":12}},{"path":"src/main/java/seedu/uninurse/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.MainApp;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.StringUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.Logic;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/rod_of_asclepius.png\";","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BlopApple":5,"izzahaj":1,"-":82}},{"path":"src/main/java/seedu/uninurse/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.MainApp;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BlopApple":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" onKeyPressed\u003d\"#handleOnKeyPressed\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"rama-pang":1,"-":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"         title\u003d\"UniNurse\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    \u003cImage url\u003d\"@/images/rod_of_asclepius.png\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"izzahaj":2,"-":58}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"20\" prefWidth\u003d\"20\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"20\" prefWidth\u003d\"200\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"    \u003cRectangle GridPane.columnIndex\u003d\"0\" height\u003d\"80.0\" width\u003d\"7.5\" arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"DODGERBLUE\" stroke\u003d\"DODGERBLUE\" strokeType\u003d\"INSIDE\" GridPane.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"        \u003cGridPane.margin\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"        \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"    \u003c/Rectangle\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"    \u003cVBox GridPane.columnIndex\u003d\"1\" alignment\u003d\"TOP_LEFT\" minHeight\u003d\"105\" \u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"      \u003cLabel fx:id\u003d\"header\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$header\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"      \u003cLabel fx:id\u003d\"taskList\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$taskList\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"BlopApple":31}},{"path":"src/test/java/seedu/uninurse/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"BlopApple":1,"-":57}},{"path":"src/test/java/seedu/uninurse/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.core;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"BlopApple":1,"-":26}},{"path":"src/test/java/seedu/uninurse/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.core;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":2,"-":133}},{"path":"src/test/java/seedu/uninurse/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.core.index;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"BlopApple":2,"-":58}},{"path":"src/test/java/seedu/uninurse/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"BlopApple":2,"-":34}},{"path":"src/test/java/seedu/uninurse/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"BlopApple":3,"-":105}},{"path":"src/test/java/seedu/uninurse/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Config;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BlopApple":4,"-":112}},{"path":"src/test/java/seedu/uninurse/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":2,"-":21}},{"path":"src/test/java/seedu/uninurse/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.TestUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":3,"-":42}},{"path":"src/test/java/seedu/uninurse/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.commons.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"shogun187"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // bb contained in sentence","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"BlopApple":2,"shogun187":1,"-":140}},{"path":"src/test/java/seedu/uninurse/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.CommandResult;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.ListCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.storage.JsonUninurseBookStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.storage.StorageManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"        JsonUninurseBookStorage uninurseBookStorage \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"                new JsonUninurseBookStorage(temporaryFolder.resolve(\"uninurseBook.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"        StorageManager storage \u003d new StorageManager(uninurseBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"        String deleteCommand \u003d \"delete -p 9\";","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"        // Setup LogicManager with JsonUninurseBookIoExceptionThrowingStub","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"        JsonUninurseBookStorage uninurseBookStorage \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"                new JsonUninurseBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionUninurseBook.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"        StorageManager storage \u003d new StorageManager(uninurseBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"        String addCommand \u003d AddPatientCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"        Patient expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(model.getUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"BlopApple"},"content":"    private static class JsonUninurseBookIoExceptionThrowingStub extends JsonUninurseBookStorage {","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"BlopApple"},"content":"        private JsonUninurseBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"BlopApple"},"content":"        public void saveUninurseBook(ReadOnlyUninurseBook uninurseBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"BlopApple":34,"rama-pang":3,"-":125}},{"path":"src/test/java/seedu/uninurse/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPatientCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"        model \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        Patient validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(model.getUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"        assertCommandSuccess(new AddPatientCommand(validPerson), model,","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"                String.format(AddPatientCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"        Patient personInList \u003d model.getUninurseBook().getPersonList().get(0);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"        assertCommandFailure(new AddPatientCommand(personInList), model, AddPatientCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"BlopApple":12,"rama-pang":5,"-":28}},{"path":"src/test/java/seedu/uninurse/logic/commands/AddPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"public class AddPatientCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPatientCommand(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"        Patient validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        CommandResult commandResult \u003d new AddPatientCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        assertEquals(String.format(AddPatientCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"        assertEquals(Collections.singletonList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"        Patient validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"        AddPatientCommand addCommand \u003d new AddPatientCommand(validPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"                AddPatientCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"        Patient alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"        Patient bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"        AddPatientCommand addAliceCommand \u003d new AddPatientCommand(alice);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"        AddPatientCommand addBobCommand \u003d new AddPatientCommand(bob);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"        AddPatientCommand addAliceCommandCopy \u003d new AddPatientCommand(alice);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"     * A default model stub that has all of the methods failing.","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"BlopApple"},"content":"        public Path getUninurseBookFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"BlopApple"},"content":"        public void setUninurseBookFilePath(Path uninurseBookFilePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"rama-pang"},"content":"        public void addPerson(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"BlopApple"},"content":"        public ReadOnlyUninurseBook getUninurseBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"BlopApple"},"content":"        public void setUninurseBook(ReadOnlyUninurseBook newData) {","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"rama-pang"},"content":"        public boolean hasPerson(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"rama-pang"},"content":"        public void deletePerson(Patient target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"rama-pang"},"content":"        public void setPerson(Patient target, Patient editedPerson) {","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"rama-pang"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"rama-pang"},"content":"        public void updateFilteredPersonList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":151,"author":{"gitId":"BlopApple"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":152,"author":{"gitId":"rama-pang"},"content":"        public void updateFilteredPersonListWithTasks(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"BlopApple"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-08"},{"lineNumber":154,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":155,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":156,"author":{"gitId":"BlopApple"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":157,"author":{"gitId":"BlopApple"},"content":"        public Supplier\u003cBoolean\u003e getTaskListFlagSupplier() {","lastModifiedDate":"2022-10-08"},{"lineNumber":158,"author":{"gitId":"BlopApple"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-08"},{"lineNumber":159,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":160,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"rama-pang"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"rama-pang"},"content":"        public boolean canUndo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"rama-pang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"rama-pang"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"rama-pang"},"content":"        public boolean canRedo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"rama-pang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"rama-pang"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"rama-pang"},"content":"        public void undo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"rama-pang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"rama-pang"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"rama-pang"},"content":"        public void redo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"rama-pang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"rama-pang"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"rama-pang"},"content":"        public void makeSnapshot(CommandResult commandResult) {","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"rama-pang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"rama-pang"},"content":"        private final Patient person;","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"rama-pang"},"content":"        ModelStubWithPerson(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"rama-pang"},"content":"        public boolean hasPerson(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"rama-pang"},"content":"        final ArrayList\u003cPatient\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"rama-pang"},"content":"        public boolean hasPerson(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"rama-pang"},"content":"        public void addPerson(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"BlopApple"},"content":"        public ReadOnlyUninurseBook getUninurseBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":225,"author":{"gitId":"BlopApple"},"content":"            return new UninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"BlopApple":26,"rama-pang":62,"izzahaj":1,"-":140}},{"path":"src/test/java/seedu/uninurse/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TASK_DATE_FIRST;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TASK_DESC_FIRST;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalTasks.TASK_HEALTH_RECORDS;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalTasks.TASK_INSULIN;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.task.DateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code AddTaskCommand}.","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"    private final Model model \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, TASK_INSULIN));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(INDEX_FIRST_PERSON, TASK_INSULIN);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e addTaskCommand.execute(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"        Patient patientToAddTask \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"        Patient editedPatient \u003d new PersonBuilder(patientToAddTask)","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Ramanathan0908"},"content":"                .withTasks(new Task(VALID_TASK_DESC_FIRST, new DateTime(VALID_TASK_DATE_FIRST))).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"        int lastTaskIndex \u003d editedPatient.getTasks().size() - 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"        Task addedTask \u003d editedPatient.getTasks().get(lastTaskIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(INDEX_FIRST_PERSON, addedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        String expectedMessage \u003d String.format(AddTaskCommand.MESSAGE_ADD_TASK_SUCCESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"                editedPatient.getName().toString(), addedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(new UninurseBook(model.getUninurseBook()), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        expectedModel.setPerson(patientToAddTask, editedPatient);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        assertCommandSuccess(addTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(outOfBoundIndex, TASK_INSULIN);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"        assertCommandFailure(addTaskCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"        Patient patientToAddTask \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"        Patient editedPatient \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Ramanathan0908"},"content":"                .withTasks(new Task(VALID_TASK_DESC_FIRST, new DateTime(VALID_TASK_DATE_FIRST))).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"        int lastTaskIndex \u003d editedPatient.getTasks().size() - 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        Task addedTask \u003d editedPatient.getTasks().get(lastTaskIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(INDEX_FIRST_PERSON, addedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"        String expectedMessage \u003d String.format(AddTaskCommand.MESSAGE_ADD_TASK_SUCCESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"                editedPatient.getName().toString(), addedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(new UninurseBook(model.getUninurseBook()), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"        expectedModel.setPerson(patientToAddTask, editedPatient);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"        assertCommandSuccess(addTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"BlopApple"},"content":"        // ensures that outOfBoundIndex is still in bounds of uninurse book list","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"BlopApple"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getUninurseBook().getPersonList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(outOfBoundIndex, TASK_INSULIN);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"        assertCommandFailure(addTaskCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"        AddTaskCommand addTaskFirstCommand \u003d new AddTaskCommand(INDEX_FIRST_PERSON, TASK_INSULIN);","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"        AddTaskCommand addTaskSecondCommand \u003d new AddTaskCommand(INDEX_SECOND_PERSON, TASK_INSULIN);","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"        AddTaskCommand addTaskThirdCommand \u003d new AddTaskCommand(INDEX_FIRST_PERSON, TASK_HEALTH_RECORDS);","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"izzahaj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"        assertEquals(addTaskFirstCommand, addTaskFirstCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"izzahaj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"izzahaj"},"content":"        AddTaskCommand addTaskFirstCommandCopy \u003d new AddTaskCommand(INDEX_FIRST_PERSON, TASK_INSULIN);","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"izzahaj"},"content":"        assertEquals(addTaskFirstCommand, addTaskFirstCommandCopy);","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"izzahaj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(1, addTaskFirstCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"izzahaj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(null, addTaskFirstCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"izzahaj"},"content":"        // different person index -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(addTaskFirstCommand, addTaskSecondCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"izzahaj"},"content":"        // different task index -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(addTaskFirstCommand, addTaskThirdCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":25,"Ramanathan0908":4,"izzahaj":110}},{"path":"src/test/java/seedu/uninurse/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"    public void execute_emptyUninurseBook_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"    public void execute_nonEmptyUninurseBook_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"        Model model \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        expectedModel.setUninurseBook(new UninurseBook());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"BlopApple":12,"-":20}},{"path":"src/test/java/seedu/uninurse/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"BlopApple":1,"-":53}},{"path":"src/test/java/seedu/uninurse/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    public static final String VALID_TASK_DESC_FIRST \u003d \"Administer 80mg of valsartan\";","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    public static final String VALID_TASK_DESC_SECOND \u003d \"Advise on over-the-counter prescriptions\";","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"    public static final String VALID_TASK_DATE_FIRST \u003d \"16-10-2022 1015\";","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"    public static final String INVALID_TASK_DESC \u003d \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"            + PREFIX_TASK_DESCRIPTION; // empty string not allowed for tasks descriptions","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"shogun187"},"content":"    public static final EditPatientCommand.EditPatientDescriptor DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"shogun187"},"content":"    public static final EditPatientCommand.EditPatientDescriptor DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"shogun187"},"content":"        DESC_AMY \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"shogun187"},"content":"        DESC_BOB \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"BlopApple"},"content":"     * - the uninurse book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"BlopApple"},"content":"        UninurseBook expectedUninurseBook \u003d new UninurseBook(actualModel.getUninurseBook());","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"rama-pang"},"content":"        List\u003cPatient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"BlopApple"},"content":"        assertEquals(expectedUninurseBook, actualModel.getUninurseBook());","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"BlopApple"},"content":"     * {@code model}\u0027s uninurse book.","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"rama-pang"},"content":"        Patient person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"BlopApple":19,"rama-pang":2,"Ramanathan0908":1,"shogun187":4,"izzahaj":4,"-":104}},{"path":"src/test/java/seedu/uninurse/logic/commands/DeletePatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":" * {@code DeletePatientCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"public class DeletePatientCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"    private final Model model \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"        Patient personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"        DeletePatientCommand deleteCommand \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        String expectedMessage \u003d String.format(DeletePatientCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"        DeletePatientCommand deleteCommand \u003d new DeletePatientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"        Patient personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"        DeletePatientCommand deleteCommand \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"        String expectedMessage \u003d String.format(DeletePatientCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(model.getUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"        // ensures that outOfBoundIndex is still in bounds of uninurse book list","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getUninurseBook().getPersonList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"        DeletePatientCommand deleteCommand \u003d new DeletePatientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"        DeletePatientCommand deleteFirstCommand \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"        DeletePatientCommand deleteSecondCommand \u003d new DeletePatientCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"        DeletePatientCommand deleteFirstCommandCopy \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"rama-pang"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"BlopApple":18,"rama-pang":20,"-":71}},{"path":"src/test/java/seedu/uninurse/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code DeleteTaskCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"class DeleteTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"    private final Model model \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    public void constructor_nullTaskIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTaskCommand(INDEX_SECOND_PERSON, null));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    public void constructor_nullPatientIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTaskCommand(null, INDEX_FIRST_TASK));","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_SECOND_PERSON, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteTaskCommand.execute(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"    void execute_validIndicesUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        // use third person in TypicalPersons since there is one task to delete","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        Patient patientToDeleteTask \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"        Patient editedPatient \u003d new PersonBuilder(patientToDeleteTask).withTasks().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"        Task deletedTask \u003d patientToDeleteTask.getTasks().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_THIRD_PERSON, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"                editedPatient.getName().toString(), deletedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(new UninurseBook(model.getUninurseBook()), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"        expectedModel.setPerson(patientToDeleteTask, editedPatient);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    void execute_invalidPatientIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"        Index outOfBoundPatientIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundPatientIndex, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"    void execute_validIndicesFilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"        // use third person in TypicalPersons since there is one task to delete","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"        Patient patientToDeleteTask \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"        Patient editedPatient \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"                .withTasks().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"        Task deletedTask \u003d patientToDeleteTask.getTasks().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"                editedPatient.getName().toString(), deletedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(new UninurseBook(model.getUninurseBook()), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"        expectedModel.setPerson(patientToDeleteTask, editedPatient);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"    void execute_invalidPatientIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"BlopApple"},"content":"        // ensures that outOfBoundIndex is still in bounds of uninurse book list","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"BlopApple"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getUninurseBook().getPersonList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"    void execute_invalidTaskIndex_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"        Patient patient \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"        Index outOfBoundTaskIndex \u003d Index.fromOneBased(patient.getTasks().size() + 1);","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON, outOfBoundTaskIndex);","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand deleteTaskFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand deleteTaskSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_PERSON, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand deleteTaskThirdCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON, INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"izzahaj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"izzahaj"},"content":"        assertEquals(deleteTaskFirstCommand, deleteTaskFirstCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"izzahaj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"izzahaj"},"content":"        DeleteTaskCommand deleteTaskFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"izzahaj"},"content":"        assertEquals(deleteTaskFirstCommand, deleteTaskFirstCommandCopy);","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"izzahaj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(1, deleteTaskFirstCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"izzahaj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(null, deleteTaskFirstCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"izzahaj"},"content":"        // different person index -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(deleteTaskFirstCommand, deleteTaskSecondCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"izzahaj"},"content":"        // different task index -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(deleteTaskFirstCommand, deleteTaskThirdCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":25,"Ramanathan0908":9,"izzahaj":111}},{"path":"src/test/java/seedu/uninurse/logic/commands/EditPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPatientCommand.","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"public class EditPatientCommandTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"    private Model model \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        Patient editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(new UninurseBook(model.getUninurseBook()), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"shogun187"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"        Patient lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"        Patient editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"shogun187"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(new UninurseBook(model.getUninurseBook()), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"shogun187"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON, new EditPatientDescriptor());","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"        Patient editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"shogun187"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(new UninurseBook(model.getUninurseBook()), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"shogun187"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"        Patient personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"        Patient editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"shogun187"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"shogun187"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(new UninurseBook(model.getUninurseBook()), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"shogun187"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"rama-pang"},"content":"        Patient firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"shogun187"},"content":"        assertCommandFailure(editPatientCommand, model, EditPatientCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"BlopApple"},"content":"        // edit person in filtered list into a duplicate in uninurse book","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"BlopApple"},"content":"        Patient personInList \u003d model.getUninurseBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"shogun187"},"content":"                new EditPatientDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"shogun187"},"content":"        assertCommandFailure(editPatientCommand, model, EditPatientCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"shogun187"},"content":"        assertCommandFailure(editPatientCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"BlopApple"},"content":"     * but smaller than size of uninurse book","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"BlopApple"},"content":"        // ensures that outOfBoundIndex is still in bounds of uninurse book list","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"BlopApple"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getUninurseBook().getPersonList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"shogun187"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"shogun187"},"content":"        assertCommandFailure(editPatientCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"shogun187"},"content":"        final EditPatientCommand standardCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor copyDescriptor \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand commandWithSameValues \u003d new EditPatientCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"shogun187"},"content":"        assertFalse(standardCommand.equals(new EditPatientCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"shogun187"},"content":"        assertFalse(standardCommand.equals(new EditPatientCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"BlopApple":32,"rama-pang":7,"shogun187":34,"-":100}},{"path":"src/test/java/seedu/uninurse/logic/commands/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptorWithSameValues \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"shogun187"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"shogun187"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"shogun187"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"BlopApple":10,"shogun187":7,"-":41}},{"path":"src/test/java/seedu/uninurse/logic/commands/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalTasks.TASK_CARE_PLAN;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code EditTaskCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"class EditTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"    private static final String TASK_STUB \u003d \"Some task\";","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"    private final Model model \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    public void constructor_nullPatientIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"                new EditTaskCommand(null, INDEX_FIRST_TASK, TASK_CARE_PLAN));","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    public void constructor_nullTaskIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"                new EditTaskCommand(INDEX_FIRST_PERSON, null, TASK_CARE_PLAN));","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"                new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK, null));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK, TASK_CARE_PLAN);","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e editTaskCommand.execute(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Ramanathan0908"},"content":"    public void execute_editTask_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Ramanathan0908"},"content":"        Task editedTask \u003d new Task(TASK_STUB);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Ramanathan0908"},"content":"        // Use second patient as the first patient in typical persons does not have a task","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Ramanathan0908"},"content":"        Patient secondPatient \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Ramanathan0908"},"content":"        Patient editedPatient \u003d new PersonBuilder(secondPatient)","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Ramanathan0908"},"content":"                .withTasks(secondPatient.getTasks().edit(INDEX_FIRST_TASK.getZeroBased(), editedTask)","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Ramanathan0908"},"content":"                        .getTasks().toArray(Task[]::new))","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Ramanathan0908"},"content":"                // to convert the TaskList into an array of string representation of tasks","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Ramanathan0908"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Ramanathan0908"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_SECOND_PERSON, INDEX_FIRST_TASK, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Ramanathan0908"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedPatient);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"        Model expectedModel \u003d new ModelManager(new UninurseBook(model.getUninurseBook()), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Ramanathan0908"},"content":"        expectedModel.setPerson(secondPatient, editedPatient);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Ramanathan0908"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Ramanathan0908"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Ramanathan0908"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Ramanathan0908"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, INDEX_FIRST_TASK, new Task(TASK_STUB));","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Ramanathan0908"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"Ramanathan0908"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Ramanathan0908"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Ramanathan0908"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"BlopApple"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getUninurseBook().getPersonList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Ramanathan0908"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, INDEX_FIRST_TASK, new Task(TASK_STUB));","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"Ramanathan0908"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Ramanathan0908"},"content":"    public void execute_invalidTaskIndex_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Ramanathan0908"},"content":"        Patient firstPatient \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"Ramanathan0908"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(firstPatient.getTasks().size() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"Ramanathan0908"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_PERSON, outOfBoundIndex, new Task(TASK_STUB));","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"Ramanathan0908"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"Ramanathan0908"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"Ramanathan0908"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"Ramanathan0908"},"content":"                new Task(TASK_STUB));","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"Ramanathan0908"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"Ramanathan0908"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"Ramanathan0908"},"content":"                new Task(TASK_STUB));","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"Ramanathan0908"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"Ramanathan0908"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"Ramanathan0908"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"Ramanathan0908"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"Ramanathan0908"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"Ramanathan0908"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"Ramanathan0908"},"content":"        assertNotEquals(standardCommand, new EditTaskCommand(INDEX_SECOND_PERSON, INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"Ramanathan0908"},"content":"                new Task(TASK_STUB)));","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"Ramanathan0908"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"Ramanathan0908"},"content":"        assertNotEquals(standardCommand, new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"Ramanathan0908"},"content":"                new Task(\"not task stub\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":22,"Ramanathan0908":90,"izzahaj":25}},{"path":"src/test/java/seedu/uninurse/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"BlopApple":5,"-":15}},{"path":"src/test/java/seedu/uninurse/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"    private Model model \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"BlopApple":13,"-":70}},{"path":"src/test/java/seedu/uninurse/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"BlopApple":5,"-":15}},{"path":"src/test/java/seedu/uninurse/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"        model \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"        expectedModel \u003d new ModelManager(model.getUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"BlopApple":10,"-":29}},{"path":"src/test/java/seedu/uninurse/logic/commands/ListTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"class ListTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"    void execute() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":1,"Ramanathan0908":12}},{"path":"src/test/java/seedu/uninurse/logic/commands/PatientsTodayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ramanathan0908"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"import static seedu.uninurse.testutil.TestUtil.getCurrentDate;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.task.DateTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"class PatientsTodayCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"    private Model model;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":"        model \u003d new ModelManager(getTypicalUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"        expectedModel \u003d new ModelManager(model.getUninurseBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"    public void execute_noPatientsToday_showsNoPatients() {","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_PATIENTS_FOR_TODAY);","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"        assertCommandSuccess(new PatientsTodayCommand(), model, PatientsTodayCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Ramanathan0908"},"content":"    public void execute_onePatientToday_showsOnePatient() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"        Patient patientForToday \u003d new PersonBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Ramanathan0908"},"content":"                                        .withTasks(new Task(\"test\", new DateTime(getCurrentDate()))).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Ramanathan0908"},"content":"        CommandResult addCommand \u003d new AddPatientCommand(patientForToday).execute(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"        CommandResult addCommand2 \u003d new AddPatientCommand(patientForToday).execute(expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Ramanathan0908"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_PATIENTS_FOR_TODAY);","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Ramanathan0908"},"content":"        assertCommandSuccess(new PatientsTodayCommand(), model, PatientsTodayCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Ramanathan0908":44}},{"path":"src/test/java/seedu/uninurse/logic/commands/ViewTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"class ViewTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"    void execute() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":1,"Ramanathan0908":12}},{"path":"src/test/java/seedu/uninurse/logic/parser/AddGenericCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"class AddGenericCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"    void parse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":1,"Ramanathan0908":12}},{"path":"src/test/java/seedu/uninurse/logic/parser/AddPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"public class AddPatientCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"    private final AddPatientCommandParser parser \u003d new AddPatientCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"        Patient expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPatientCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPatientCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPatientCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPatientCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPatientCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"        Patient expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPatientCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"        Patient expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"                new AddPatientCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"rama-pang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"BlopApple":38,"rama-pang":14,"-":89}},{"path":"src/test/java/seedu/uninurse/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"class AddTaskCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"    void parse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":1,"Ramanathan0908":12}},{"path":"src/test/java/seedu/uninurse/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"BlopApple":1,"-":149}},{"path":"src/test/java/seedu/uninurse/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.Command;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"BlopApple":3,"-":36}},{"path":"src/test/java/seedu/uninurse/logic/parser/DeleteGenericCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"class DeleteGenericCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"    void parse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":1,"Ramanathan0908":12}},{"path":"src/test/java/seedu/uninurse/logic/parser/DeletePatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.DeletePatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":" * outside of the DeletePatientCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":" * same path through the DeletePatientCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"public class DeletePatientCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"    private final DeletePatientCommandParser parser \u003d new DeletePatientCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"        assertParseSuccess(parser, \"1\", new DeletePatientCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"BlopApple":6,"rama-pang":7,"-":20}},{"path":"src/test/java/seedu/uninurse/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":" * Contains unit tests for {@code DeleteTaskCommandParser}.","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"class DeleteTaskCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    private final DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"    public void parse_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    public void parse_validArgs_returnsDeleteTaskCommand() {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        assertParseSuccess(parser, \"1 1\", new DeleteTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK));","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        assertParseSuccess(parser, \" 1 1 \", new DeleteTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK));","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    public void parse_invalidPatientIndex_throwsParserException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"        assertParseFailure(parser, \"a 1\",","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"        assertParseFailure(parser, \"0 1\",","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    public void parse_invalidTaskIndex_throwsParserException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        assertParseFailure(parser, \"1 a\",","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"        assertParseFailure(parser, \"1 0\",","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":8,"Ramanathan0908":9,"izzahaj":30}},{"path":"src/test/java/seedu/uninurse/logic/parser/EditGenericCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"class EditGenericCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"    void parse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":1,"Ramanathan0908":12}},{"path":"src/test/java/seedu/uninurse/logic/parser/EditPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"public class EditPatientCommandParserTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"shogun187"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPatientCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"shogun187"},"content":"    private EditPatientCommandParser parser \u003d new EditPatientCommandParser();","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"shogun187"},"content":"        assertParseFailure(parser, \"1\", EditPatientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Patient} being edited,","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"shogun187"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"shogun187"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"shogun187"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"shogun187"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"shogun187"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"shogun187"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"shogun187"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"shogun187"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"shogun187"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"shogun187"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"shogun187"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"BlopApple":40,"rama-pang":1,"shogun187":26,"-":144}},{"path":"src/test/java/seedu/uninurse/logic/parser/EditTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":" * Contains unit tests for {@code EditTaskCommandParser}.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"class EditTaskCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"    private final EditTaskCommandParser parser \u003d new EditTaskCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"    private final String nonEmptyTask \u003d \"Some task\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    public void parse_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"    public void parse_patientIndexSpecifiedTaskIndexSpecified_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"        String userInput \u003d INDEX_FIRST_PERSON.getOneBased() + \" \" + INDEX_FIRST_TASK.getOneBased() + \" \"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"                + PREFIX_TASK_DESCRIPTION + nonEmptyTask;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Ramanathan0908"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Ramanathan0908"},"content":"                new Task(nonEmptyTask));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Ramanathan0908"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Ramanathan0908"},"content":"    public void parse_patientIndexMissingTaskIndexSpecified_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Ramanathan0908"},"content":"        String userInput \u003d INDEX_FIRST_TASK.getOneBased() + \" \" + PREFIX_TASK_DESCRIPTION + nonEmptyTask;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Ramanathan0908"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Ramanathan0908"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Ramanathan0908"},"content":"    public void parse_patientIndexSpecifiedTaskIndexMissing_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Ramanathan0908"},"content":"        String userInput \u003d INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_TASK_DESCRIPTION + nonEmptyTask;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Ramanathan0908"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Ramanathan0908"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Ramanathan0908"},"content":"    public void parse_emptyTaskEdit_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Ramanathan0908"},"content":"        String userInput \u003d INDEX_FIRST_PERSON.getOneBased() + \" \" + INDEX_FIRST_TASK.getOneBased() + \" \"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Ramanathan0908"},"content":"                + PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Ramanathan0908"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Ramanathan0908"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Ramanathan0908"},"content":"    public void parse_taskPrefixMissing_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Ramanathan0908"},"content":"        String userInput \u003d INDEX_FIRST_PERSON.getOneBased() + \" \" + INDEX_FIRST_TASK.getOneBased() + \" \";","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Ramanathan0908"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Ramanathan0908"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":10,"Ramanathan0908":60,"izzahaj":6}},{"path":"src/test/java/seedu/uninurse/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.FindCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"BlopApple":6,"-":28}},{"path":"src/test/java/seedu/uninurse/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"BlopApple":10,"-":186}},{"path":"src/test/java/seedu/uninurse/logic/parser/UninurseBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.DeletePatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.FindCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.ListCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"public class UninurseBookParserTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"    private final UninurseBookParser parser \u003d new UninurseBookParser();","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        Patient person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        AddPatientCommand command \u003d (AddPatientCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"        assertEquals(new AddPatientCommand(person), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"        DeletePatientCommand command \u003d (DeletePatientCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"                DeletePatientCommand.COMMAND_WORD + \" -p \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"        assertEquals(new DeletePatientCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"        Patient person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"shogun187"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(person).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"        EditPatientCommand command \u003d (EditPatientCommand) parser.parseCommand(EditPatientCommand.COMMAND_WORD + \" -p \"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"shogun187"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPatientDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"shogun187"},"content":"        assertEquals(new EditPatientCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"BlopApple":22,"rama-pang":8,"shogun187":3,"-":68}},{"path":"src/test/java/seedu/uninurse/logic/parser/ViewTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"class ViewTaskCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"    void parse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":1,"Ramanathan0908":12}},{"path":"src/test/java/seedu/uninurse/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.UninurseBookBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"        assertEquals(new UninurseBook(), new UninurseBook(modelManager.getUninurseBook()));","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"        userPrefs.setUninurseBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"        userPrefs.setUninurseBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"    public void setUninurseBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUninurseBookFilePath(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"    public void setUninurseBookFilePath_validPath_setsUninurseBookFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"        modelManager.setUninurseBookFilePath(path);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"        assertEquals(path, modelManager.getUninurseBookFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"BlopApple"},"content":"    public void hasPerson_personNotInUninurseBook_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"BlopApple"},"content":"    public void hasPerson_personInUninurseBook_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"BlopApple"},"content":"        UninurseBook uninurseBook \u003d new UninurseBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"BlopApple"},"content":"        UninurseBook differentUninurseBook \u003d new UninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"BlopApple"},"content":"        modelManager \u003d new ModelManager(uninurseBook, userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"BlopApple"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(uninurseBook, userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"BlopApple"},"content":"        // different uninurseBook -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"BlopApple"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentUninurseBook, userPrefs)));","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"BlopApple"},"content":"        assertFalse(modelManager.equals(new ModelManager(uninurseBook, userPrefs)));","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"BlopApple"},"content":"        differentUserPrefs.setUninurseBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"BlopApple"},"content":"        assertFalse(modelManager.equals(new ModelManager(uninurseBook, differentUserPrefs)));","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"BlopApple":27,"-":105}},{"path":"src/test/java/seedu/uninurse/model/UninurseBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"public class UninurseBookTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"    private final UninurseBook uninurseBook \u003d new UninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"        assertEquals(Collections.emptyList(), uninurseBook.getPersonList());","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e uninurseBook.resetData(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"    public void resetData_withValidReadOnlyUninurseBook_replacesData() {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"        UninurseBook newData \u003d getTypicalUninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"        uninurseBook.resetData(newData);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"        assertEquals(newData, uninurseBook);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"        List\u003cPatient\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"        UninurseBookStub newData \u003d new UninurseBookStub(newPersons);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uninurseBook.resetData(newData));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e uninurseBook.hasPerson(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"    public void hasPerson_personNotInUninurseBook_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"        assertFalse(uninurseBook.hasPerson(ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"BlopApple"},"content":"    public void hasPerson_personInUninurseBook_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"        uninurseBook.addPerson(ALICE);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"        assertTrue(uninurseBook.hasPerson(ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"    public void hasPerson_personWithSameIdentityFieldsInUninurseBook_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"        uninurseBook.addPerson(ALICE);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"        assertTrue(uninurseBook.hasPerson(editedAlice));","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"BlopApple"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"BlopApple"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e uninurseBook.getPersonList().remove(0));","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"BlopApple"},"content":"     * A stub ReadOnlyUninurseBook whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"BlopApple"},"content":"    private static class UninurseBookStub implements ReadOnlyUninurseBook {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"BlopApple"},"content":"        private final ObservableList\u003cPatient\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"BlopApple"},"content":"        UninurseBookStub(Collection\u003cPatient\u003e persons) {","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"BlopApple"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"BlopApple"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"BlopApple"},"content":"        public ObservableList\u003cPatient\u003e getPersonList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"BlopApple"},"content":"            return persons;","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"BlopApple"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"BlopApple":102}},{"path":"src/test/java/seedu/uninurse/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"    public void setUninurseBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setUninurseBookFilePath(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"BlopApple":4,"-":17}},{"path":"src/test/java/seedu/uninurse/model/condition/ConditionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package seedu.uninurse.model.condition;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"public class ConditionTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    // may be moved to a utility class if sample conditions are needed in other tests","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    private final Condition diabetesCondition \u003d new Condition(\"Type II Diabetes\");","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    private final Condition osteoporosisCondition \u003d new Condition(\"Osteoporosis\");","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    private final String diabetesConditionName \u003d \"Type II Diabetes\";","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Condition(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    public void constructor_invalidCondition_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        String invalidCondition \u003d \"\";","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Condition(invalidCondition));","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    public void isValidCondition_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Condition.isValidCondition(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"    public void isValidCondition_validCondition_returnsTrue() {","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"        // numbers in condition -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        assertTrue(Condition.isValidCondition(\"123\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"        // special characters in condition -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        assertTrue(Condition.isValidCondition(\"@!#$%^\u0026*()-\u003d+_[];.,`~:\u003c\u003e?/\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"        // valid condition -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"        assertTrue(Condition.isValidCondition(\"Check vitals\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    public void isValidCondition_invalidCondition_returnsFalse() {","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"        // empty condition -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"        assertFalse(Condition.isValidCondition(\"\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"        // blank condition -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        assertFalse(Condition.isValidCondition(\"  \"));","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"    public void testToString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"        assertEquals(diabetesCondition.toString(), diabetesConditionName);","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        assertEquals(diabetesCondition, diabetesCondition);","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"        Condition diabetesConditionCopy \u003d new Condition(diabetesConditionName);","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        assertEquals(diabetesCondition, diabetesConditionCopy);","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(1, diabetesCondition);","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(null, diabetesCondition);","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(diabetesCondition, osteoporosisCondition);","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"BlopApple":5,"izzahaj":73}},{"path":"src/test/java/seedu/uninurse/model/medication/MedicationListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.medication;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.medication.exceptions.DuplicateMedicationException;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.medication.exceptions.MedicationNotFoundException;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.medication.exceptions.UnmodifiedMedicationException;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.TypicalMedications;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"public class MedicationListTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    private final MedicationList medicationList \u003d new MedicationList();","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    public void add_nullMedication_throwsNullPointerException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e medicationList.add(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"    public void add_duplicateMedication_throwsDuplicateMedicationException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"        MedicationList updatedMedicationList \u003d medicationList.add(TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        assertThrows(DuplicateMedicationException.class, () -\u003e updatedMedicationList","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"                .add(TypicalMedications.MEDICATION_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"    public void delete_emptyList_throwsMedicationNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"        assertThrows(MedicationNotFoundException.class, () -\u003e medicationList.delete(0));","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"    public void delete_invalidIndex_throwsMedicationNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"        assertThrows(MedicationNotFoundException.class, () -\u003e medicationList.delete(-1));","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"    public void delete_indexOutOfbounds_throwsMedicationNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"        MedicationList updatedMedicationList \u003d medicationList.add(TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"        assertThrows(MedicationNotFoundException.class, () -\u003e updatedMedicationList.delete(1));","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"    public void edit_emptyList_throwsMedicationNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"        assertThrows(MedicationNotFoundException.class, () -\u003e medicationList","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"                .edit(1, TypicalMedications.MEDICATION_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"    public void edit_invalidIndex_throwsMedicationNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"        assertThrows(MedicationNotFoundException.class, () -\u003e medicationList","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"                .edit(-1, TypicalMedications.MEDICATION_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"    public void edit_indexOutOfbounds_throwsMedicationNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"BlopApple"},"content":"        MedicationList updatedMedicationList \u003d medicationList.add(TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"        assertThrows(MedicationNotFoundException.class, () -\u003e updatedMedicationList","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"                .edit(1, TypicalMedications.MEDICATION_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"    public void edit_sameMedication_throwsUnmodifiedMedicationException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"BlopApple"},"content":"        MedicationList updatedMedicationList \u003d medicationList.add(TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"        assertThrows(UnmodifiedMedicationException.class, () -\u003e updatedMedicationList","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"                .edit(0, TypicalMedications.MEDICATION_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"    public void edit_differentMedication_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"        MedicationList updatedMedicationList \u003d medicationList.add(TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"        updatedMedicationList \u003d updatedMedicationList.edit(0, TypicalMedications.MEDICATION_AMPICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"        MedicationList expectedMedicationList \u003d new MedicationList();","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"        expectedMedicationList \u003d expectedMedicationList.add(TypicalMedications.MEDICATION_AMPICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"BlopApple"},"content":"        assertEquals(updatedMedicationList, expectedMedicationList);","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"BlopApple"},"content":"    public void get_emptyList_throwsMedicationNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"BlopApple"},"content":"        assertThrows(MedicationNotFoundException.class, () -\u003e medicationList.get(0));","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"BlopApple"},"content":"    public void get_invalidIndex_throwsMedicationNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"BlopApple"},"content":"        assertThrows(MedicationNotFoundException.class, () -\u003e medicationList.get(-1));","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"BlopApple"},"content":"    public void get_indexOutOfbounds_throwsMedicationNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"BlopApple"},"content":"        MedicationList updatedMedicationList \u003d medicationList.add(TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"BlopApple"},"content":"        assertThrows(MedicationNotFoundException.class, () -\u003e updatedMedicationList.get(1));","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"BlopApple"},"content":"    public void get_validIndex_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"BlopApple"},"content":"        MedicationList updatedMedicationList \u003d medicationList.add(TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"BlopApple"},"content":"        assertEquals(updatedMedicationList.get(0), TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"BlopApple"},"content":"    public void size_emptyList_returnsZero() {","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"BlopApple"},"content":"        assertEquals(medicationList.size(), 0);","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"BlopApple"},"content":"    public void size_nonEmptyList_returnsNonZero() {","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"BlopApple"},"content":"        MedicationList updatedMedicationList \u003d medicationList.add(TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"BlopApple"},"content":"        assertNotEquals(updatedMedicationList.size(), 0);","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"BlopApple"},"content":"    public void isEmpty_emptyList_returnsTrue() {","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"BlopApple"},"content":"        assertTrue(medicationList.isEmpty());","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"BlopApple"},"content":"    public void isEmpty_nonEmptyList_returnsFalse() {","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"BlopApple"},"content":"        MedicationList updatedMedicationList \u003d medicationList.add(TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"BlopApple"},"content":"        assertFalse(updatedMedicationList.isEmpty());","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"BlopApple"},"content":"    public void getInternalList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"BlopApple"},"content":"        MedicationList updatedMedicationList \u003d medicationList.add(TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":130,"author":{"gitId":"BlopApple"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"BlopApple"},"content":"            -\u003e updatedMedicationList.getInternalList().remove(0));","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":133}},{"path":"src/test/java/seedu/uninurse/model/medication/MedicationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.medication;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.TypicalMedications;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"public class MedicationTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Medication(null, null));","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    public void constructor_invalidMedication_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"        String invalidMedication \u003d \"\";","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"                new Medication(invalidMedication, TypicalMedications.TYPICAL_DOSAGE_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"    public void constructor_emptyDosage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"        String emptyDosage \u003d \"\";","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"                new Medication(TypicalMedications.TYPICAL_MEDICATION_AMOXICILLIN, emptyDosage));","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"    public void constructor_invalidDosage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"        String invalidDosage \u003d \"+%*\";","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"                new Medication(TypicalMedications.TYPICAL_MEDICATION_AMOXICILLIN, invalidDosage));","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"    public void isValidMedication_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e Medication.isValidMedication(null, null));","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"    public void isValidMedication_validMedication_returnsTrue() {","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"        // numbers in medication -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"        assertTrue(Medication.isValidMedication(\"123\", TypicalMedications.TYPICAL_DOSAGE_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"        // special characters in medication -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"        assertTrue(Medication.isValidMedication(\"@!#$%^\u0026*()-\u003d+_[];.,`~:\u003c\u003e?/\",","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"                TypicalMedications.TYPICAL_DOSAGE_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"        // valid medication -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"        assertTrue(Medication.isValidMedication(TypicalMedications.TYPICAL_MEDICATION_AMOXICILLIN,","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"                TypicalMedications.TYPICAL_DOSAGE_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"BlopApple"},"content":"    public void isValidMedication_invalidMedication_returnsFalse() {","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"        // empty medication -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"        assertFalse(Medication.isValidMedication(\"\", TypicalMedications.TYPICAL_DOSAGE_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"        // blank medication -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"        assertFalse(Medication.isValidMedication(\"  \", TypicalMedications.TYPICAL_DOSAGE_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"    public void isValidMedication_validDosage_returnsTrue() {","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"        // alphanumeric characters in dosage -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"        assertTrue(Medication.isValidMedication(TypicalMedications.TYPICAL_MEDICATION_AMOXICILLIN, \"abc123\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"        // valid medication -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"        assertTrue(Medication.isValidMedication(TypicalMedications.TYPICAL_MEDICATION_AMOXICILLIN,","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"                TypicalMedications.TYPICAL_DOSAGE_AMOXICILLIN));","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"BlopApple"},"content":"    public void isValidMedication_invalidDosage_returnsFalse() {","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"BlopApple"},"content":"        // empty dosage -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"BlopApple"},"content":"        assertFalse(Medication.isValidMedication(TypicalMedications.TYPICAL_MEDICATION_AMOXICILLIN, \"\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"BlopApple"},"content":"        // blank dosage -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"BlopApple"},"content":"        assertFalse(Medication.isValidMedication(TypicalMedications.TYPICAL_MEDICATION_AMOXICILLIN, \" \"));","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"BlopApple"},"content":"        // special characters dosage -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"BlopApple"},"content":"        assertFalse(Medication.isValidMedication(TypicalMedications.TYPICAL_MEDICATION_AMOXICILLIN,","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"BlopApple"},"content":"                \"@!#$%^\u0026*()-\u003d+_[];.,`~:\u003c\u003e?/\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"BlopApple"},"content":"    public void testToString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"BlopApple"},"content":"        String expectedMedicationString \u003d TypicalMedications.TYPICAL_MEDICATION_AMOXICILLIN + \" \\\\| \"","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"BlopApple"},"content":"                + TypicalMedications.TYPICAL_DOSAGE_AMOXICILLIN;","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"BlopApple"},"content":"        assertEquals(TypicalMedications.MEDICATION_AMOXICILLIN.toString(), expectedMedicationString);","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"BlopApple"},"content":"    public void equals() {","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"BlopApple"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"BlopApple"},"content":"        assertEquals(TypicalMedications.MEDICATION_AMOXICILLIN, TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"BlopApple"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"BlopApple"},"content":"        Medication amoxicillinMedicationCopy \u003d new Medication(TypicalMedications.TYPICAL_MEDICATION_AMOXICILLIN,","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"BlopApple"},"content":"                TypicalMedications.TYPICAL_DOSAGE_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"BlopApple"},"content":"        assertEquals(TypicalMedications.MEDICATION_AMOXICILLIN, amoxicillinMedicationCopy);","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"BlopApple"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"BlopApple"},"content":"        assertNotEquals(1, TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"BlopApple"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"BlopApple"},"content":"        assertNotEquals(null, TypicalMedications.MEDICATION_AMOXICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"BlopApple"},"content":"        // different medication -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"BlopApple"},"content":"        assertNotEquals(TypicalMedications.MEDICATION_AMOXICILLIN, TypicalMedications.MEDICATION_AMPICILLIN);","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":118}},{"path":"src/test/java/seedu/uninurse/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"BlopApple":2,"-":34}},{"path":"src/test/java/seedu/uninurse/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"BlopApple":2,"-":66}},{"path":"src/test/java/seedu/uninurse/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"BlopApple":2,"-":73}},{"path":"src/test/java/seedu/uninurse/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"BlopApple":2,"-":38}},{"path":"src/test/java/seedu/uninurse/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"        Patient person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"        Patient editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"        Patient aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"BlopApple":10,"rama-pang":5,"-":76}},{"path":"src/test/java/seedu/uninurse/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"BlopApple":2,"-":38}},{"path":"src/test/java/seedu/uninurse/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"rama-pang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPatient\u003e) null));","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"rama-pang"},"content":"        List\u003cPatient\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"rama-pang"},"content":"        List\u003cPatient\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"BlopApple":9,"rama-pang":5,"-":156}},{"path":"src/test/java/seedu/uninurse/model/remark/RemarkListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.remark;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.remark.exceptions.DuplicateRemarkException;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.remark.exceptions.RemarkNotFoundException;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.remark.exceptions.UnmodifiedRemarkException;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.TypicalRemarks;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"public class RemarkListTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    private final RemarkList remarkList \u003d new RemarkList();","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    public void add_nullRemark_throwsNullPointerException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e remarkList.add(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"    public void add_duplicateRemark_throwsDuplicateRemarkException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"        RemarkList updatedRemarkList \u003d remarkList.add(TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        assertThrows(DuplicateRemarkException.class, () -\u003e updatedRemarkList","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"                .add(TypicalRemarks.REMARK_MEDICAL_ALLERGY));","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"    public void delete_emptyList_throwsRemarkNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"        assertThrows(RemarkNotFoundException.class, () -\u003e remarkList.delete(0));","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"    public void delete_invalidIndex_throwsRemarkNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"        assertThrows(RemarkNotFoundException.class, () -\u003e remarkList.delete(-1));","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"    public void delete_indexOutOfbounds_throwsRemarkNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"        RemarkList updatedRemarkList \u003d remarkList.add(TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"        assertThrows(RemarkNotFoundException.class, () -\u003e updatedRemarkList.delete(1));","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"    public void edit_emptyList_throwsRemarkNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"        assertThrows(RemarkNotFoundException.class, () -\u003e remarkList","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"                .edit(1, TypicalRemarks.REMARK_MEDICAL_ALLERGY));","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"    public void edit_invalidIndex_throwsRemarkNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"        assertThrows(RemarkNotFoundException.class, () -\u003e remarkList","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"                .edit(-1, TypicalRemarks.REMARK_MEDICAL_ALLERGY));","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"    public void edit_indexOutOfbounds_throwsRemarkNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"BlopApple"},"content":"        RemarkList updatedRemarkList \u003d remarkList.add(TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"        assertThrows(RemarkNotFoundException.class, () -\u003e updatedRemarkList","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"                .edit(1, TypicalRemarks.REMARK_MEDICAL_ALLERGY));","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"    public void edit_sameRemark_throwsUnmodifiedRemarkException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"BlopApple"},"content":"        RemarkList updatedRemarkList \u003d remarkList.add(TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"        assertThrows(UnmodifiedRemarkException.class, () -\u003e updatedRemarkList","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"                .edit(0, TypicalRemarks.REMARK_MEDICAL_ALLERGY));","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"    public void edit_differentRemark_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"        RemarkList updatedRemarkList \u003d remarkList.add(TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"        updatedRemarkList \u003d updatedRemarkList.edit(0, TypicalRemarks.REMARK_WHEELCHAIR);","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"        RemarkList expectedRemarkList \u003d new RemarkList();","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"        expectedRemarkList \u003d expectedRemarkList.add(TypicalRemarks.REMARK_WHEELCHAIR);","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"BlopApple"},"content":"        assertEquals(updatedRemarkList, expectedRemarkList);","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"BlopApple"},"content":"    public void get_emptyList_throwsRemarkNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"BlopApple"},"content":"        assertThrows(RemarkNotFoundException.class, () -\u003e remarkList.get(0));","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"BlopApple"},"content":"    public void get_invalidIndex_throwsRemarkNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"BlopApple"},"content":"        assertThrows(RemarkNotFoundException.class, () -\u003e remarkList.get(-1));","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"BlopApple"},"content":"    public void get_indexOutOfbounds_throwsRemarkNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"BlopApple"},"content":"        RemarkList updatedRemarkList \u003d remarkList.add(TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"BlopApple"},"content":"        assertThrows(RemarkNotFoundException.class, () -\u003e updatedRemarkList.get(1));","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"BlopApple"},"content":"    public void get_validIndex_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"BlopApple"},"content":"        RemarkList updatedRemarkList \u003d remarkList.add(TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"BlopApple"},"content":"        assertEquals(updatedRemarkList.get(0), TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"BlopApple"},"content":"    public void size_emptyList_returnsZero() {","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"BlopApple"},"content":"        assertEquals(remarkList.size(), 0);","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"BlopApple"},"content":"    public void size_nonEmptyList_returnsNonZero() {","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"BlopApple"},"content":"        RemarkList updatedRemarkList \u003d remarkList.add(TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"BlopApple"},"content":"        assertNotEquals(updatedRemarkList.size(), 0);","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"BlopApple"},"content":"    public void isEmpty_emptyList_returnsTrue() {","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"BlopApple"},"content":"        assertTrue(remarkList.isEmpty());","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"BlopApple"},"content":"    public void isEmpty_nonEmptyList_returnsFalse() {","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"BlopApple"},"content":"        RemarkList updatedRemarkList \u003d remarkList.add(TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"BlopApple"},"content":"        assertFalse(updatedRemarkList.isEmpty());","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"BlopApple"},"content":"    public void getInternalList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"BlopApple"},"content":"        RemarkList updatedRemarkList \u003d remarkList.add(TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":130,"author":{"gitId":"BlopApple"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"BlopApple"},"content":"            -\u003e updatedRemarkList.getInternalList().remove(0));","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":133}},{"path":"src/test/java/seedu/uninurse/model/remark/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.remark;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.TypicalRemarks;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"public class RemarkTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    public void constructor_invalidRemark_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"        String invalidRemark \u003d \"\";","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Remark(invalidRemark));","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    public void isValidRemark_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"    public void isValidRemark_validRemark_returnsTrue() {","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"        // numbers in remark -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"        assertTrue(Remark.isValidRemark(\"123\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"        // special characters in remark -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"BlopApple"},"content":"        assertTrue(Remark.isValidRemark(\"@!#$%^\u0026*()-\u003d+_[];.,`~:\u003c\u003e?/\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"BlopApple"},"content":"        // valid remark -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"BlopApple"},"content":"        assertTrue(Remark.isValidRemark(TypicalRemarks.TYPICAL_MEDICAL_ALLERGY));","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"    public void isValidRemark_invalidRemark_returnsFalse() {","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"BlopApple"},"content":"        // empty remark -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"        assertFalse(Remark.isValidRemark(\"\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"BlopApple"},"content":"        // blank remark -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"BlopApple"},"content":"        assertFalse(Remark.isValidRemark(\"  \"));","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"BlopApple"},"content":"    public void testToString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"BlopApple"},"content":"        String expectedRemarkString \u003d TypicalRemarks.TYPICAL_MEDICAL_ALLERGY;","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"        assertEquals(TypicalRemarks.REMARK_MEDICAL_ALLERGY.toString(), expectedRemarkString);","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"    public void equals() {","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"        assertEquals(TypicalRemarks.REMARK_MEDICAL_ALLERGY, TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"BlopApple"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"BlopApple"},"content":"        Remark medicalAllergyRemarkCopy \u003d new Remark(TypicalRemarks.TYPICAL_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"        assertEquals(TypicalRemarks.REMARK_MEDICAL_ALLERGY, medicalAllergyRemarkCopy);","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"        assertNotEquals(1, TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"        assertNotEquals(null, TypicalRemarks.REMARK_MEDICAL_ALLERGY);","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"BlopApple"},"content":"        assertNotEquals(TypicalRemarks.REMARK_MEDICAL_ALLERGY, TypicalRemarks.REMARK_WHEELCHAIR);","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":75}},{"path":"src/test/java/seedu/uninurse/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    public void isValidTagName_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    public void isValidTagName_validTagName_returnsTrue() {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        // alphanumeric","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        assertTrue(Tag.isValidTagName(\"elderly\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        assertTrue(Tag.isValidTagName(\"123\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"    public void isValidTagName_invalidTagName_returnsFalse() {","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"        // empty tag name","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        assertFalse(Tag.isValidTagName(\"\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        // blank tag name","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        assertFalse(Tag.isValidTagName(\" \"));","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        // special characters","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"        assertFalse(Tag.isValidTagName(\"@!#$%^\u0026*()-\u003d+_[];.,`~:\u003c\u003e?/\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"        // multiple words","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"        assertFalse(Tag.isValidTagName(\"high risk\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"BlopApple":2,"izzahaj":24,"-":22}},{"path":"src/test/java/seedu/uninurse/model/task/DateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ramanathan0908"},"content":"package seedu.uninurse.model.task;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Ramanathan0908"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Ramanathan0908"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Ramanathan0908"},"content":"import static seedu.uninurse.testutil.TestUtil.getCurrentDate;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Ramanathan0908"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Ramanathan0908"},"content":"class DateTimeTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Ramanathan0908"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Ramanathan0908"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateTime(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Ramanathan0908"},"content":"    public void isValidDateTime_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Ramanathan0908"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDateTime(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Ramanathan0908"},"content":"    public void isValidDateTime_validDateTime_returnsTrue() {","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Ramanathan0908"},"content":"        assertTrue(DateTime.isValidDateTime(\"12-12-2022 1815\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Ramanathan0908"},"content":"        assertTrue(DateTime.isValidDateTime(\"09-08-2022 1000\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Ramanathan0908"},"content":"    public void isValidDateTime_invalidDateTime_returnsFalse() {","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Ramanathan0908"},"content":"        // day of month and month of year swapped","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Ramanathan0908"},"content":"        assertFalse(DateTime.isValidDateTime(\"09-22-2022 1815\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Ramanathan0908"},"content":"        // invalid characters","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Ramanathan0908"},"content":"        assertFalse(DateTime.isValidDateTime(\"09-i6-2022 17: 16\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Ramanathan0908"},"content":"    public void isToday_sameDay_returnsTrue() {","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Ramanathan0908"},"content":"        assertTrue(new DateTime(getCurrentDate()).isToday());","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Ramanathan0908"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Ramanathan0908"},"content":"    public void isToday_differentDay_returnsFalse() {","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Ramanathan0908"},"content":"        assertFalse(new DateTime().isToday());","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Ramanathan0908"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Ramanathan0908":46}},{"path":"src/test/java/seedu/uninurse/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalTasks.TASK_HEALTH_RECORDS;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalTasks.TASK_INSULIN;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"public class TaskTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Task(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    public void constructor_invalidTaskDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        String invalidTaskDescription \u003d \"\";","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Task(invalidTaskDescription));","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    public void isValidTaskDescription_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Task.isValidTaskDescription(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    public void isValidTaskDescription_validDescription_returnsTrue() {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"        // numbers in task description -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"        assertTrue(Task.isValidTaskDescription(\"123\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"        // special characters in task description -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        assertTrue(Task.isValidTaskDescription(\"@!#$%^\u0026*()-\u003d+_[];.,`~:\u003c\u003e?/\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        // valid task description -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        assertTrue(Task.isValidTaskDescription(\"Check vitals\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    public void isValidTaskDescription_invalidDescription_returnsFalse() {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"        // empty task description -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"        assertFalse(Task.isValidTaskDescription(\"\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        // blank task description -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"        assertFalse(Task.isValidTaskDescription(\"  \"));","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"        assertEquals(TASK_INSULIN, TASK_INSULIN);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"        String taskInsulinDescription \u003d \"Administer 1 unit of insulin\";","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"        Task taskInsulinCopy \u003d new Task(taskInsulinDescription);","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"        assertEquals(TASK_INSULIN, taskInsulinCopy);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(1, TASK_INSULIN);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(null, TASK_INSULIN);","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        assertNotEquals(TASK_INSULIN, TASK_HEALTH_RECORDS);","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"BlopApple":4,"izzahaj":67}},{"path":"src/test/java/seedu/uninurse/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    private static final String INVALID_TASK \u003d \" \";","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    private static final List\u003cJsonAdaptedTask\u003e VALID_TASKS \u003d BENSON.getTasks().getTasks().stream()","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"            .map(JsonAdaptedTask::new)","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TASKS, VALID_TAGS);","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"                VALID_TASKS, VALID_TAGS);","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TASKS, VALID_TAGS);","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"                VALID_TASKS, VALID_TAGS);","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TASKS, VALID_TAGS);","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"                VALID_TASKS, VALID_TAGS);","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TASKS, VALID_TAGS);","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"                VALID_TASKS, VALID_TAGS);","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"    // TODO: add tests for invalid tasks","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TASKS, invalidTags);","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BlopApple":9,"izzahaj":19,"-":92}},{"path":"src/test/java/seedu/uninurse/storage/JsonSerializableUninurseBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.util.JsonUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.testutil.TypicalPersons;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"public class JsonSerializableUninurseBookTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableUninurseBookTest\");","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsUninurseBook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonUninurseBook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonUninurseBook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"        JsonSerializableUninurseBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"                JsonSerializableUninurseBook.class).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        UninurseBook uninurseBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"        UninurseBook typicalPersonsUninurseBook \u003d TypicalPersons.getTypicalUninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"        assertEquals(uninurseBookFromFile, typicalPersonsUninurseBook);","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"        JsonSerializableUninurseBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"BlopApple"},"content":"                JsonSerializableUninurseBook.class).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"BlopApple"},"content":"        JsonSerializableUninurseBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"BlopApple"},"content":"                JsonSerializableUninurseBook.class).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"BlopApple"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableUninurseBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BlopApple":21,"-":26}},{"path":"src/test/java/seedu/uninurse/storage/JsonUninurseBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"public class JsonUninurseBookStorageTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUninurseBookStorageTest\");","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    public void readUninurseBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUninurseBook(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"    private java.util.Optional\u003cReadOnlyUninurseBook\u003e readUninurseBook(String filePath) throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"        return new JsonUninurseBookStorage(Paths.get(filePath)).readUninurseBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"BlopApple"},"content":"        assertFalse(readUninurseBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"BlopApple"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUninurseBook(\"notJsonFormatUninurseBook.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"    public void readUninurseBook_invalidPersonUninurseBook_throwDataConversionException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUninurseBook(\"invalidPersonUninurseBook.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"    public void readUninurseBook_invalidAndValidPersonUninurseBook_throwDataConversionException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUninurseBook(\"invalidAndValidPersonUninurseBook.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"    public void readAndSaveUninurseBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"        Path filePath \u003d testFolder.resolve(\"TempUninurseBook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"BlopApple"},"content":"        UninurseBook original \u003d getTypicalUninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"BlopApple"},"content":"        JsonUninurseBookStorage jsonUninurseBookStorage \u003d new JsonUninurseBookStorage(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"BlopApple"},"content":"        jsonUninurseBookStorage.saveUninurseBook(original, filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"        ReadOnlyUninurseBook readBack \u003d jsonUninurseBookStorage.readUninurseBook(filePath).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"        assertEquals(original, new UninurseBook(readBack));","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"BlopApple"},"content":"        jsonUninurseBookStorage.saveUninurseBook(original, filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"BlopApple"},"content":"        readBack \u003d jsonUninurseBookStorage.readUninurseBook(filePath).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"BlopApple"},"content":"        assertEquals(original, new UninurseBook(readBack));","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"BlopApple"},"content":"        jsonUninurseBookStorage.saveUninurseBook(original); // file path not specified","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"BlopApple"},"content":"        readBack \u003d jsonUninurseBookStorage.readUninurseBook().get(); // file path not specified","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"BlopApple"},"content":"        assertEquals(original, new UninurseBook(readBack));","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"BlopApple"},"content":"    public void saveUninurseBook_nullUninurseBook_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUninurseBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"BlopApple"},"content":"     * Saves {@code uninurseBook} at the specified {@code filePath}.","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"BlopApple"},"content":"    private void saveUninurseBook(ReadOnlyUninurseBook uninurseBook, String filePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"BlopApple"},"content":"            new JsonUninurseBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"BlopApple"},"content":"                    .saveUninurseBook(uninurseBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"BlopApple"},"content":"    public void saveUninurseBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"BlopApple"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUninurseBook(new UninurseBook(), null));","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BlopApple":42,"-":68}},{"path":"src/test/java/seedu/uninurse/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"BlopApple"},"content":"        userPrefs.setUninurseBookFilePath(Paths.get(\"uninursebook.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BlopApple":6,"-":117}},{"path":"src/test/java/seedu/uninurse/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.TypicalPersons.getTypicalUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.ReadOnlyUninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        JsonUninurseBookStorage uninurseBookStorage \u003d new JsonUninurseBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"        storageManager \u003d new StorageManager(uninurseBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"BlopApple"},"content":"    public void uninurseBookReadSave() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"BlopApple"},"content":"         * {@link JsonUninurseBookStorage} class.","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"BlopApple"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUninurseBookStorageTest} class.","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"BlopApple"},"content":"        UninurseBook original \u003d getTypicalUninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"BlopApple"},"content":"        storageManager.saveUninurseBook(original);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"BlopApple"},"content":"        ReadOnlyUninurseBook retrieved \u003d storageManager.readUninurseBook().get();","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"BlopApple"},"content":"        assertEquals(original, new UninurseBook(retrieved));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"BlopApple"},"content":"    public void getUninurseBookFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"BlopApple"},"content":"        assertNotNull(storageManager.getUninurseBookFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":17,"-":51}},{"path":"src/test/java/seedu/uninurse/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"BlopApple":1,"-":33}},{"path":"src/test/java/seedu/uninurse/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"public class EditPatientDescriptorBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"    private EditPatientDescriptor descriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor descriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"        this.descriptor \u003d new EditPatientDescriptor(descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"    public EditPatientDescriptorBuilder(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"     * Sets the {@code Name} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"shogun187"},"content":"    public EditPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"shogun187"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"shogun187"},"content":"     * Sets the {@code Phone} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"shogun187"},"content":"    public EditPatientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"shogun187"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"shogun187"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"shogun187"},"content":"     * Sets the {@code Email} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"shogun187"},"content":"    public EditPatientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"shogun187"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"shogun187"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"shogun187"},"content":"     * Sets the {@code Address} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"shogun187"},"content":"    public EditPatientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"shogun187"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"shogun187"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"shogun187"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPatientDescriptor}","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"shogun187"},"content":"     * that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"shogun187"},"content":"    public EditPatientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"shogun187"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"shogun187"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"shogun187"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"shogun187"},"content":"    public EditPatientDescriptor build() {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"shogun187"},"content":"        return descriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"BlopApple":8,"rama-pang":1,"shogun187":78}},{"path":"src/test/java/seedu/uninurse/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.TaskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"    public PersonBuilder(Patient personToCopy) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        tasks \u003d personToCopy.getTasks();","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"     * Parses the {@code tasks} into a {@code TaskList} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"Ramanathan0908"},"content":"    public PersonBuilder withTasks(Task... tasks) {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        this.tasks \u003d SampleDataUtil.getTaskList(tasks);","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"        return this;","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"     * Sets the {@code Address} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"rama-pang"},"content":"     * Sets the {@code Email} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"rama-pang"},"content":"    public Patient build() {","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"rama-pang"},"content":"        return new Patient(name, phone, email, address, tasks, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"BlopApple":9,"rama-pang":10,"Ramanathan0908":2,"izzahaj":8,"-":80}},{"path":"src/test/java/seedu/uninurse/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":" * A utility class for Patient.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    public static String getAddCommand(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"        return AddPatientCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"    public static String getPersonDetails(Patient person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"shogun187"},"content":"     * Returns the part of command string for the given {@code EditPatientDescriptor}\u0027s details.","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"BlopApple":10,"rama-pang":4,"shogun187":2,"-":46}},{"path":"src/test/java/seedu/uninurse/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":1,"-":71}},{"path":"src/test/java/seedu/uninurse/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Ramanathan0908"},"content":"import static seedu.uninurse.model.task.DateTime.FORMATTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"Ramanathan0908"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"    public static Patient getPerson(Model model, Index index) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":58,"author":{"gitId":"Ramanathan0908"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Ramanathan0908"},"content":"    public static String getCurrentDate() {","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Ramanathan0908"},"content":"        return LocalDateTime.now().format(FORMATTER);","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Ramanathan0908"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BlopApple":4,"rama-pang":1,"Ramanathan0908":6,"-":51}},{"path":"src/test/java/seedu/uninurse/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"BlopApple":2,"izzahaj":3,"-":10}},{"path":"src/test/java/seedu/uninurse/testutil/TypicalMedications.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.medication.Medication;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":" * A utility class containing a list of {@code Medication} objects to be used in tests.","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"public class TypicalMedications {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"    public static final Medication MEDICATION_AMOXICILLIN \u003d new Medication(\"Amoxicillin\", \"0.5 g every 8 hours\");","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"    public static final Medication MEDICATION_AMPICILLIN \u003d new Medication(\"Ampicillin\", \"0.5 IV every 6 hours\");","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"    public static final String TYPICAL_MEDICATION_AMOXICILLIN \u003d \"Amoxicillin\";","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"    public static final String TYPICAL_DOSAGE_AMOXICILLIN \u003d \"0.5 g every 8 hours\";","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":13}},{"path":"src/test/java/seedu/uninurse/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.task.DateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Ramanathan0908"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"    public static final Patient ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"    public static final Patient BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"Ramanathan0908"},"content":"            .withTasks(new Task(\"Insert urinary catheter\", new DateTime(\"16-12-2022 1245\")),","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"Ramanathan0908"},"content":"                    new Task(\"Check vitals\", new DateTime(\"16-10-2022 1015\")))","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"    public static final Patient CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Ramanathan0908"},"content":"            .withTasks(new Task(\"Update health records\", new DateTime(\"28-10-2022 1730\")))","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"Ramanathan0908"},"content":"            .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    public static final Patient DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"    public static final Patient ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"    public static final Patient FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"    public static final Patient GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"    public static final Patient HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"    public static final Patient IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"    public static final Patient AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"    public static final Patient BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"BlopApple"},"content":"     * Returns an {@code UninurseBook} with all the typical persons.","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"BlopApple"},"content":"    public static UninurseBook getTypicalUninurseBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"BlopApple"},"content":"        UninurseBook ab \u003d new UninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"        for (Patient person : getTypicalPersons()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"    public static List\u003cPatient\u003e getTypicalPersons() {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"BlopApple":16,"rama-pang":15,"Ramanathan0908":6,"izzahaj":2,"-":43}},{"path":"src/test/java/seedu/uninurse/testutil/TypicalRemarks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.remark.Remark;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":" * A utility class containing a list of {@code Remark} objects to be used in tests.","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":"public class TypicalRemarks {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":"    public static final Remark REMARK_MEDICAL_ALLERGY \u003d new Remark(\"Allergic to Amoxicillin\");","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":"    public static final Remark REMARK_WHEELCHAIR \u003d new Remark(\"Requires wheelchair to move around\");","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"    public static final String TYPICAL_MEDICAL_ALLERGY \u003d \"Allergic to Amoxicillin\";","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"    public static final String TYPICAL_WHEELCHAIR \u003d \"Requires wheelchair to move around\";","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"BlopApple":13}},{"path":"src/test/java/seedu/uninurse/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"    public static final Task TASK_INSULIN \u003d new Task(\"Administer 1 unit of insulin\");","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    public static final Task TASK_HEALTH_RECORDS \u003d new Task(\"Update health records\");","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    public static final Task TASK_CARE_PLAN \u003d new Task(\"Discuss care plan with family\");","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"BlopApple":2,"izzahaj":10}},{"path":"src/test/java/seedu/uninurse/testutil/UninurseBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.UninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.model.person.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"BlopApple"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"BlopApple"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"BlopApple"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"BlopApple"},"content":" *     {@code UninurseBook ab \u003d new UninurseBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"BlopApple"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"BlopApple"},"content":"public class UninurseBookBuilder {","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"BlopApple"},"content":"    private UninurseBook uninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"BlopApple"},"content":"    public UninurseBookBuilder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"BlopApple"},"content":"        uninurseBook \u003d new UninurseBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"BlopApple"},"content":"    public UninurseBookBuilder(UninurseBook uninurseBook) {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"BlopApple"},"content":"        this.uninurseBook \u003d uninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"BlopApple"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"BlopApple"},"content":"     * Adds a new {@code Patient} to the {@code UninurseBook} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"BlopApple"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"BlopApple"},"content":"    public UninurseBookBuilder withPerson(Patient person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"BlopApple"},"content":"        uninurseBook.addPerson(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"BlopApple"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"BlopApple"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"BlopApple"},"content":"    public UninurseBook build() {","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"BlopApple"},"content":"        return uninurseBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"BlopApple"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"BlopApple"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"BlopApple":34}},{"path":"src/test/java/seedu/uninurse/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"BlopApple":1,"-":34}},{"path":"src/test/java/seedu/uninurse/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BlopApple"},"content":"package seedu.uninurse.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BlopApple"},"content":"import static seedu.uninurse.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"BlopApple"},"content":"import seedu.uninurse.MainApp;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"BlopApple":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"\u003c?import seedu.uninurse.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"BlopApple":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"BlopApple"},"content":"\u003cfx:root type\u003d\"seedu.uninurse.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"BlopApple":1,"-":5}}]
