[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103T-T08-1/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2223S1-CS2103T-T08-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"- This is **a team project for a support application for School Teachers**.\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"  - can be used to store information of individuals","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"  - \"find\" functionality allows students to be filtered by a multitude of terms","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"- The project is a desktop application (called _Watson_) used for managing data of individuals.","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"  - It is **written in OOP fashion**.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"  - It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"- For the detailed documentation of this project, see the **[Sherlock Website](https://ay2223s1-cs2103t-t08-1.github.io/tp/)**.","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"e1010101":9,"Hoodineee":1,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"mainClassName \u003d \u0027seedu.watson.Main\u0027","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"    archiveFileName \u003d \u0027watson.jar\u0027","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"jgyj123"},"content":"run {","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jgyj123"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jgyj123":3,"e1010101":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"### Damith","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"[[github](https://github.com/damithc)]","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"### Ezra Tio","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/e1010101.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"[[github](https://github.com/e1010101)]","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"* Role: Team Lead, UI/UX, Feature Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"* Responsibilities: X","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"### Gregg Chan","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"\u003cimg src\u003d\"images/hoodineee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"[[github](http://github.com/Hoodineee)]","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"* Role: Scheduling and Tracking, Feature Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"* Responsibilities: X","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"### Jonathan Goh","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/jgyj123.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"[[github](http://github.com/jgyj123)]","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"* Role: Component XYZ, Deliverables and Deadlines, Feature Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"* Responsibilities: X","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"### Soo Jia Xi","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/joosxi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"[[github](http://github.com/joosxi)]","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"* Role: Documentation, Feature Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"* Responsibilities: X","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"### Xiao Ying","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/xiaoying1129.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"[[github](http://github.com/xiaoying1129)]","lastModifiedDate":"2022-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"* Role: Component XYZ, Feature Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"* Responsibilities: X","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"e1010101":32,"Hoodineee":1,"-":37}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"- Table of Contents","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"| Code Author | Code Used    | Reason               |","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"|-------------|--------------|----------------------|","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"| e1010101    | [DateUtil](https://github.com/e1010101/ip/blob/master/src/main/java/util/DateUtils.java) | Ease of date parsing |","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"|             |              |                      |","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"|             |              |                      |","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"|             |              |                      |","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"|             |              |                      |","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"|             |              |                      |","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"**`Main`** has two classes called [Main](https://github.com/AY2223S1-CS2103T-T08-1/tp/blob/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"and [MainApp](https://github.com/AY2223S1-CS2103T-T08-1/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"The **API** of this component is specified in [UiManager.java](https://github.com/AY2223S1-CS2103T-T08-1/tp/blob/master/src/main/java/seedu/address/ui/UiManager.java)","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"We added a new UI component in our implementation: the `LoginWindow`.","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"The `LoginWindow` is a separate window that is displayed when the user first starts the application.","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"The `LoginWindow` is responsible for authenticating the user and retrieving the user\u0027s data from the `Storage` component.","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"The `LoginWindow` will then pass the user\u0027s data to the `MainWindow` so that the `MainWindow` can display the user\u0027s data.","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"`LoginWindow` inherits from the abstract `UiPart` class, just like the `MainWindow`.","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"As of 20/10/2022, it consists of 2 `TextBox` FXML components and a \"submit\" `Button` FXML component.","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"jgyj123"},"content":"We plan to add a new UI component in our implementation: the `ImportCSVButton`.","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"jgyj123"},"content":"The `ImportCSVButton` is a button that is displayed on the `MainWindow` after login","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"jgyj123"},"content":"The `ImportCSVButton` is allows users to import student\u0027s data from a CSV file into the `storage` component","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"jgyj123"},"content":"`ImportCSVButton` inherits from the abstract `UiPart` class, just like the `MainWindow`.","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"jgyj123"},"content":"As of 21/10/2022, it has yet to be implemented","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"Hoodineee"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"e1010101"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"e1010101"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"e1010101"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"e1010101"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"e1010101"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"e1010101"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"e1010101"},"content":"- can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"e1010101"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"e1010101"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"joosxi"},"content":"### Edit feature","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"joosxi"},"content":"#### Current Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"joosxi"},"content":"The edit command consists of these following classes:","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"joosxi"},"content":"- `EditCommand` which extends `Command`","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"joosxi"},"content":"- `EditCommandParser` which extends `Parser\u003cEditCommand\u003e`","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"joosxi"},"content":"As with all other commands, the edit command has a `Parser` subclass that goes through the `AddressBookParser` and a `Command` subclass that returns an appropriate new `CommandResult` Object.","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"Hoodineee"},"content":"It allows the editing of a student\u0027s name, phone, email, address, class, remarks and tags.","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"joosxi"},"content":"The command will be used as such:","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"joosxi"},"content":"- `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [c/CLASS] [rem/REMARK] [t/TAG]`","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"joosxi"},"content":"- Words in `UPPER_CASE` are the inputs to be supplied by the user.","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"joosxi"},"content":"- Words in square brackets are optional, but at least one of them must be present.","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"xiaoying1129"},"content":"### \\[Implemented\\] Sort feature","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"xiaoying1129"},"content":"#### current Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"xiaoying1129"},"content":"The sort command consists of these following classes:","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"xiaoying1129"},"content":"- `SortCommand` which extends `Command`","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"xiaoying1129"},"content":"- `SortCommandParser` which extends `Parser\u003cSortCommand\u003e`","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"xiaoying1129"},"content":"As with all other commands, the sort command has a `Parser` subclass that goes through the `AddressBookParser` and a `Command` subclass that returns an appropriate new `CommandResult` Object. It sorts the list of students by their grades in ascending or descending order as specified by the user.","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":213,"author":{"gitId":"xiaoying1129"},"content":"The command will be used as such:","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"xiaoying1129"},"content":"- sort by grade in ascending order - e.g.`sort asc`","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"xiaoying1129"},"content":"- sort by grade in descending order - e.g. `sort desc`","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":217,"author":{"gitId":"jgyj123"},"content":"### \\[Implemented\\] Grade feature","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"jgyj123"},"content":"#### current Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"jgyj123"},"content":"The Grade command consists of these following classes:","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"jgyj123"},"content":"- `GradeCommand` which extends `Command`","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"jgyj123"},"content":"- `GradeCommandParser` which extends `Parser\u003cSortCommand\u003e`","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"jgyj123"},"content":"As with all other commands, the sort command has a `Parser` subclass that goes through the `AddressBookParser` and a `Command` subclass that returns an appropriate new `CommandResult` Object. It opens a new GUI window to start the grading process","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"jgyj123"},"content":"The command will be used as such:","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"jgyj123"},"content":"- entering grades for an `Assignment` using the follow command format - grade \u003csubject_assignment_totalScore_weightage_difficulty\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"jgyj123"},"content":"e.g.`grade MATH_CA1_100_0.4_0.1`","lastModifiedDate":"2022-10-28"},{"lineNumber":231,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"e1010101"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2022-10-11"},{"lineNumber":240,"author":{"gitId":"e1010101"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2022-10-11"},{"lineNumber":241,"author":{"gitId":"e1010101"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2022-10-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"Hoodineee"},"content":"Step 2. The user executes `delete 5` command to delete the 5th student in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-10-28"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"Hoodineee"},"content":"Step 3. The user executes `add n/David …​` to add a new student. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"Hoodineee"},"content":"Step 4. The user now decides that adding the student was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-10-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"e1010101"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"e1010101"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2022-10-11"},{"lineNumber":305,"author":{"gitId":"e1010101"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2022-10-11"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":307,"author":{"gitId":"e1010101"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2022-10-11"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"Hoodineee"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the student being deleted).","lastModifiedDate":"2022-10-28"},{"lineNumber":310,"author":{"gitId":"e1010101"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2022-10-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-10-11"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"e1010101"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2022-10-11"},{"lineNumber":323,"author":{"gitId":"e1010101"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2022-10-11"},{"lineNumber":324,"author":{"gitId":"e1010101"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2022-10-11"},{"lineNumber":325,"author":{"gitId":"e1010101"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2022-10-11"},{"lineNumber":326,"author":{"gitId":"e1010101"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2022-10-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-10-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"e1010101"},"content":"- has a need to manage a significant number of people and their details","lastModifiedDate":"2022-10-11"},{"lineNumber":337,"author":{"gitId":"e1010101"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2022-10-11"},{"lineNumber":338,"author":{"gitId":"e1010101"},"content":"- can type fast","lastModifiedDate":"2022-10-11"},{"lineNumber":339,"author":{"gitId":"e1010101"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2022-10-11"},{"lineNumber":340,"author":{"gitId":"e1010101"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2022-10-11"},{"lineNumber":341,"author":{"gitId":"e1010101"},"content":"- needs to retrieve information quickly","lastModifiedDate":"2022-10-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"joosxi"},"content":"**Value proposition**: manage and retrieve people\u0027s information faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"xiaoying1129"},"content":"| Priority | As a ... | I want to ... | so that I can ... |","lastModifiedDate":"2022-10-21"},{"lineNumber":350,"author":{"gitId":"xiaoying1129"},"content":"| -------- | -------------------------------------- | -------------------------------------------- | ------------------------------------------------------- |","lastModifiedDate":"2022-10-21"},{"lineNumber":351,"author":{"gitId":"Hoodineee"},"content":"| `* * *`  | policeman                              | find a student using part of their ID or name | I can retrieve the student\u0027s details quickly             |","lastModifiedDate":"2022-10-28"},{"lineNumber":352,"author":{"gitId":"e1010101"},"content":"| `* * *`  | backend law enforcement staff          | add people and their details into Watson   | these information can be quickly and easily accessible  |","lastModifiedDate":"2022-10-25"},{"lineNumber":353,"author":{"gitId":"Hoodineee"},"content":"| `* * *`  | policeman                              | see a student\u0027s full criminal history         |                                                         |","lastModifiedDate":"2022-10-28"},{"lineNumber":354,"author":{"gitId":"Hoodineee"},"content":"| `* * *`  | detective                              | edit a student\u0027s details in Watson          | I can update the system with new information            |","lastModifiedDate":"2022-10-28"},{"lineNumber":355,"author":{"gitId":"e1010101"},"content":"| `* *`    | law enforcement security officer       | allow only specific users into the system    | the information stored in Watson remains confidential |","lastModifiedDate":"2022-10-25"},{"lineNumber":356,"author":{"gitId":"e1010101"},"content":"| `*`      | law enforcement administrative officer | import information from existing databases   | I can set up Watson quickly                           |","lastModifiedDate":"2022-10-25"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"jgyj123"},"content":"_{User Stories to be updated according to new project direction}_","lastModifiedDate":"2022-10-21"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"e1010101"},"content":"(For all use cases below, the **System** is the `Watson` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-10-25"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"Hoodineee"},"content":"**Use case: Delete a student**","lastModifiedDate":"2022-10-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"joosxi"},"content":"**Preconditions: User is logged in**","lastModifiedDate":"2022-09-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"Hoodineee"},"content":"1.  User requests to list students.","lastModifiedDate":"2022-10-28"},{"lineNumber":371,"author":{"gitId":"Hoodineee"},"content":"2.  Watson shows a list of students.","lastModifiedDate":"2022-10-28"},{"lineNumber":372,"author":{"gitId":"Hoodineee"},"content":"3.  User requests to delete a specific student in the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":373,"author":{"gitId":"Hoodineee"},"content":"4.  Watson deletes the student.","lastModifiedDate":"2022-10-28"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"e1010101"},"content":"- 2a. The list is empty.","lastModifiedDate":"2022-10-11"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"e1010101"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"e1010101"},"content":"  - 3a1. AddressBook shows an error message.","lastModifiedDate":"2022-10-11"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"Hoodineee"},"content":"**Use case: Find a student**","lastModifiedDate":"2022-10-28"},{"lineNumber":390,"author":{"gitId":"joosxi"},"content":"**Preconditions: User is logged in**","lastModifiedDate":"2022-09-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":392,"author":{"gitId":"joosxi"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":393,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":394,"author":{"gitId":"Hoodineee"},"content":"1.  User enters a student\u0027s partial/full ID or name.","lastModifiedDate":"2022-10-28"},{"lineNumber":395,"author":{"gitId":"Hoodineee"},"content":"2.  Watson shows a list of students with names/IDs corresponding to what was entered.","lastModifiedDate":"2022-10-28"},{"lineNumber":396,"author":{"gitId":"Hoodineee"},"content":"3.  User selects the student that he/she is looking for.","lastModifiedDate":"2022-10-28"},{"lineNumber":397,"author":{"gitId":"Hoodineee"},"content":"4.  Watson displays the full details of the student.","lastModifiedDate":"2022-10-28"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":399,"author":{"gitId":"joosxi"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":401,"author":{"gitId":"joosxi"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":402,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":403,"author":{"gitId":"e1010101"},"content":"- 2a. The list is empty.","lastModifiedDate":"2022-10-11"},{"lineNumber":404,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":405,"author":{"gitId":"joosxi"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":406,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":407,"author":{"gitId":"jgyj123"},"content":"_{Use Cases to be updated according to new project direction}","lastModifiedDate":"2022-10-21"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"Hoodineee"},"content":"2. Should be able to hold up to 1000 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-10-28"},{"lineNumber":413,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"joosxi"},"content":"4. Non-authenticated users should not be able to access the system.","lastModifiedDate":"2022-10-01"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"e1010101"},"content":"_{More to be added}_","lastModifiedDate":"2022-10-11"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"e1010101"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-10-11"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-10-11"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"Hoodineee"},"content":"### Finding students","lastModifiedDate":"2022-10-28"},{"lineNumber":451,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":452,"author":{"gitId":"Hoodineee"},"content":"1. Finding students that shares the same subject.","lastModifiedDate":"2022-10-28"},{"lineNumber":453,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":454,"author":{"gitId":"Hoodineee"},"content":"    1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":455,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":456,"author":{"gitId":"joosxi"},"content":"    2. Test case: `findSubject math`\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":457,"author":{"gitId":"Hoodineee"},"content":"       Expected: All students that have the subject `math` in the list will be shown in a new list. Timestamp in the status bar is updated.","lastModifiedDate":"2022-10-28"},{"lineNumber":458,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":459,"author":{"gitId":"joosxi"},"content":"    3. Test case: `findSubject engrish`\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":460,"author":{"gitId":"Hoodineee"},"content":"       Expected: No student will be shown in a new list. Status bar remains the same.","lastModifiedDate":"2022-10-28"},{"lineNumber":461,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":462,"author":{"gitId":"joosxi"},"content":"    4. Other incorrect delete commands to try: `findSubject`, `findSubject x`, `...` (where x is a misspelled subject)\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":463,"author":{"gitId":"Hoodineee"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-10-21"},{"lineNumber":464,"author":{"gitId":"Hoodineee"},"content":"2. Finding students that belongs in the same class.","lastModifiedDate":"2022-10-28"},{"lineNumber":465,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":466,"author":{"gitId":"Hoodineee"},"content":"    1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":467,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":468,"author":{"gitId":"joosxi"},"content":"    2. Test case 1: `find c/1A`\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":469,"author":{"gitId":"Hoodineee"},"content":"        Expected: All students that are in class 1A will be shown in a new list. Timestamp in the status bar is updated.","lastModifiedDate":"2022-10-28"},{"lineNumber":470,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":471,"author":{"gitId":"joosxi"},"content":"    3. Test case 2: `find c/1a`\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":472,"author":{"gitId":"joosxi"},"content":"       Expected: Same result as Test case 1. Keywords given by user after `c/` are not case sensitive.","lastModifiedDate":"2022-10-21"},{"lineNumber":473,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":474,"author":{"gitId":"joosxi"},"content":"    4. Test case 3: `find c/2b`\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":475,"author":{"gitId":"Hoodineee"},"content":"       Expected: No student will be shown in a new list as no one is in class 2B. Status bar remains the same.","lastModifiedDate":"2022-10-28"},{"lineNumber":476,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":477,"author":{"gitId":"joosxi"},"content":"    5. Other incorrect find commands to try: `find c/`, `find c/ `, `find c/x` (where x is a non-existent class)\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":478,"author":{"gitId":"joosxi"},"content":"       Expected: Similar to Test case 3.","lastModifiedDate":"2022-10-21"},{"lineNumber":479,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":480,"author":{"gitId":"Hoodineee"},"content":"### Deleting a student","lastModifiedDate":"2022-10-28"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"Hoodineee"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2022-10-28"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"Hoodineee"},"content":"   1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"Hoodineee"},"content":"      Expected: No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-28"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jgyj123":23,"e1010101":87,"Hoodineee":40,"joosxi":42,"xiaoying1129":17,"-":294}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"   1. Run the `seedu.watson.Main` and try a few commands.","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"e1010101":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T08-1/tp/branch/master/graph/badge.svg?token\u003d8QAGZO6Z9W)](https://codecov.io/gh/AY2223S1-CS2103T-T08-1/tp)","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"   e.g. `seedu.watson.commons.StringUtilTest`","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"   e.g. `seedu.watson.storage.StorageManagerTest`","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"   e.g. `seedu.watson.logic.LogicManagerTest`","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"e1010101":3,"-":35}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003cstyle\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"  color: #000000;","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"watson{","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    color:#00a120;","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    background-color:transparent;","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    font-size: 1.2em;","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":".red-text{","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    color:#D00000;","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    background-color:transparent;","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    font-size: 1.2em;","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":".green-text{","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    color:#008000;","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    background-color:transparent;","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    font-size: 1.2em;","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":".orange-text{","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    color:#E36414;","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    background-color:transparent;","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    font-size: 1.2em;","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":".big-font{","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    font-size: 1.2em;","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    font-weight: bold;","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":".infobox {","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    font-size: 1.2em;","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":".flex-box {","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    display: flex;","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    margin: auto;","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":".special-box {","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    position: relative;","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"    padding: .75rem 1.25rem;","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    margin-bottom: 1rem;","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"    border: 1px solid transparent;","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    border-radius : .25rem;","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":".warning-box {","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    background-color: #FFD60A;","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"    color: #000000;","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"    position: relative;","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"    padding: .75rem 1.25rem;","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    margin-bottom: 1rem;","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"    border: 1px solid transparent;","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"    border-radius : .25rem;","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":".info-box {","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"    background-color: #A2D6F9;","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"    color: #000000;","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"    position: relative;","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"    padding: .75rem 1.25rem;","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"    margin-bottom: 1rem;","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"    border: 1px solid transparent;","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"    border-radius : .25rem;","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":".special-img {","lastModifiedDate":"2022-11-02"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"    position: relative;","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"    border-radius: 15px;","lastModifiedDate":"2022-11-02"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"    border: 2px solid #000000;","lastModifiedDate":"2022-11-02"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"    display: block;","lastModifiedDate":"2022-11-02"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"    margin-left: auto;","lastModifiedDate":"2022-11-02"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"    margin-right: auto;","lastModifiedDate":"2022-11-02"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":".img-caption {","lastModifiedDate":"2022-11-02"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"    position: relative;","lastModifiedDate":"2022-11-02"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"    text-align: center;","lastModifiedDate":"2022-11-02"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"    font-decoration: italic;","lastModifiedDate":"2022-11-02"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"\u003c/style\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"# Hello! I Am \u003cwatson\u003eWatson!\u003c/watson\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"infobox\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"Welcome to the \u003cwatson\u003eWatson\u003c/watson\u003e user guide!","lastModifiedDate":"2022-11-02"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"Watson is a helpful \u003cem\u003edesktop application\u003c/em\u003e that helps school teachers","lastModifiedDate":"2022-11-02"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"track the data of their students. It can handle student particulars, sort students, handle grades and more!","lastModifiedDate":"2022-11-02"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"### Can I use Watson?","lastModifiedDate":"2022-11-02"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"Watson is a desktop application that supports Apple, Windows and Linux [operating systems](#glossary).","lastModifiedDate":"2022-11-02"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"As long as you have a computer, you can run Watson!","lastModifiedDate":"2022-11-02"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"### Using This Guide","lastModifiedDate":"2022-11-02"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"This guide covers all of Watson\u0027s features and how to use them.","lastModifiedDate":"2022-11-02"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"If you are unsure of how to use a feature or find help about a problem you might be","lastModifiedDate":"2022-11-02"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"facing, you can refer to this guide.","lastModifiedDate":"2022-11-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"# Table of Contents","lastModifiedDate":"2022-11-02"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"joosxi"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"* [How to navigate Watson](#watson-the-basics)","lastModifiedDate":"2022-11-02"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"  - [The Login Page](#the-login-page)","lastModifiedDate":"2022-11-02"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"  - [The Main Page](#the-main-page)","lastModifiedDate":"2022-11-02"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"    - [The Menu Bar](#the-menu-bar)","lastModifiedDate":"2022-11-02"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"    - [The Command Box](#the-command-box)","lastModifiedDate":"2022-11-02"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"    - [The Student Card](#the-student-card)","lastModifiedDate":"2022-11-02"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"* [A Brief Guide to Commands](#a-brief-guide-to-commands)","lastModifiedDate":"2022-11-02"},{"lineNumber":120,"author":{"gitId":"e1010101"},"content":"  - [The Command Structure](#the-command-structure)","lastModifiedDate":"2022-11-02"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"  - [Important Notes](#important-notes)","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"e1010101"},"content":"* [Handling Student Particulars](#handling-student-particulars)","lastModifiedDate":"2022-11-02"},{"lineNumber":123,"author":{"gitId":"e1010101"},"content":"  - [Adding a Student](#adding-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":124,"author":{"gitId":"e1010101"},"content":"  - [Editing a Student](#editing-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":125,"author":{"gitId":"e1010101"},"content":"  - [Deleting a Student](#deleting-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":126,"author":{"gitId":"e1010101"},"content":"  - [Adding remarks to a Student](#adding-a-remark-to-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":127,"author":{"gitId":"e1010101"},"content":"* [Handling Grades](#handling-grades)","lastModifiedDate":"2022-11-02"},{"lineNumber":128,"author":{"gitId":"e1010101"},"content":"  - [Grading your Students](#grading-your-students)","lastModifiedDate":"2022-11-02"},{"lineNumber":129,"author":{"gitId":"e1010101"},"content":"  - [Predicting a Student\u0027s grade](#predicting-a-students-grade)","lastModifiedDate":"2022-11-02"},{"lineNumber":130,"author":{"gitId":"e1010101"},"content":"* [Utility Features](#utility-features)","lastModifiedDate":"2022-11-02"},{"lineNumber":131,"author":{"gitId":"e1010101"},"content":"  - [Sorting Students](#sorting-students)","lastModifiedDate":"2022-11-02"},{"lineNumber":132,"author":{"gitId":"e1010101"},"content":"  - [Finding a Student](#finding-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":133,"author":{"gitId":"e1010101"},"content":"  - [Viewing all Students](#viewing-all-students)","lastModifiedDate":"2022-11-02"},{"lineNumber":134,"author":{"gitId":"e1010101"},"content":"  - [Clearing the list of Students](#clearing-the-list-of-students)","lastModifiedDate":"2022-11-02"},{"lineNumber":135,"author":{"gitId":"e1010101"},"content":"  - [Getting help](#getting-help)","lastModifiedDate":"2022-11-02"},{"lineNumber":136,"author":{"gitId":"e1010101"},"content":"* Advanced Features","lastModifiedDate":"2022-11-02"},{"lineNumber":137,"author":{"gitId":"e1010101"},"content":"* Frequently Asked Questions","lastModifiedDate":"2022-11-02"},{"lineNumber":138,"author":{"gitId":"e1010101"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2022-11-02"},{"lineNumber":139,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":140,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":141,"author":{"gitId":"e1010101"},"content":"# Quick Start","lastModifiedDate":"2022-11-02"},{"lineNumber":142,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":143,"author":{"gitId":"e1010101"},"content":"1. Ensure you have Java `11` or above installed in your Computer","lastModifiedDate":"2022-11-02"},{"lineNumber":144,"author":{"gitId":"e1010101"},"content":"   (Not sure how? Check out [this](https://www.java.com/en/download/help/version_manual.html) guide).","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":146,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":147,"author":{"gitId":"e1010101"},"content":"2. Download the latest version of Watson from [here](https://github.com/AY2223S1-CS2103T-T08-1/tp/releases).","lastModifiedDate":"2022-11-02"},{"lineNumber":148,"author":{"gitId":"e1010101"},"content":"The file you want is called `Watson.jar`. ","lastModifiedDate":"2022-11-02"},{"lineNumber":149,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":150,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":151,"author":{"gitId":"e1010101"},"content":"3. Locate the downloaded file. Often, this would be your computer\u0027s `Downloads` folder.","lastModifiedDate":"2022-11-02"},{"lineNumber":152,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":153,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":154,"author":{"gitId":"e1010101"},"content":"4. On your computer\u0027s Desktop, create a new folder called `Watson`, then drag and drop `Watson.jar`","lastModifiedDate":"2022-11-02"},{"lineNumber":155,"author":{"gitId":"e1010101"},"content":"from your `Downloads` folder into the `Watson` folder.","lastModifiedDate":"2022-11-02"},{"lineNumber":156,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":157,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":158,"author":{"gitId":"e1010101"},"content":"5. Double-click on `Watson.jar` to start the application.","lastModifiedDate":"2022-11-02"},{"lineNumber":159,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":160,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":161,"author":{"gitId":"e1010101"},"content":"# Watson: The Basics","lastModifiedDate":"2022-11-02"},{"lineNumber":162,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"e1010101"},"content":"## The Login Page","lastModifiedDate":"2022-11-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"e1010101"},"content":"When you open Watson, you will be greeted with the login page, which looks like this:","lastModifiedDate":"2022-11-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/Login.png\" alt\u003d\"login screen\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":171,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":172,"author":{"gitId":"e1010101"},"content":"The login page is where you can log into Watson. To log in, type your login details into their respective boxes,","lastModifiedDate":"2022-11-02"},{"lineNumber":173,"author":{"gitId":"e1010101"},"content":"then click the \"Login\" button below.","lastModifiedDate":"2022-11-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":176,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":177,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"warning-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":178,"author":{"gitId":"e1010101"},"content":":exclamation: Notice that for testing purposes, the login details are written in red below the Login button.","lastModifiedDate":"2022-11-02"},{"lineNumber":179,"author":{"gitId":"e1010101"},"content":"To log in, simply type \"admin\" in both username and password boxes, then click the \"Login\" button below.","lastModifiedDate":"2022-11-02"},{"lineNumber":180,"author":{"gitId":"e1010101"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":181,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":182,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":183,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":184,"author":{"gitId":"e1010101"},"content":"## The Main Page","lastModifiedDate":"2022-11-02"},{"lineNumber":185,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":186,"author":{"gitId":"e1010101"},"content":"After logging in, you will be greeted with the main page, which looks like this:","lastModifiedDate":"2022-11-02"},{"lineNumber":187,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":188,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/GUI.png\" alt\u003d\"main screen\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":189,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":190,"author":{"gitId":"e1010101"},"content":"This looks quite complicated! But don\u0027t worry, we\u0027ll go through each part of the main page one by one.","lastModifiedDate":"2022-11-02"},{"lineNumber":191,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":192,"author":{"gitId":"e1010101"},"content":"You can use the following table to navigate through the components in the main page:","lastModifiedDate":"2022-11-02"},{"lineNumber":193,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":194,"author":{"gitId":"e1010101"},"content":"* [The Menu Bar](#the-menu-bar)","lastModifiedDate":"2022-11-02"},{"lineNumber":195,"author":{"gitId":"e1010101"},"content":"  - [The File tab](#the-file-tab)","lastModifiedDate":"2022-11-02"},{"lineNumber":196,"author":{"gitId":"e1010101"},"content":"  - [The Help tab](#the-help-tab)","lastModifiedDate":"2022-11-02"},{"lineNumber":197,"author":{"gitId":"e1010101"},"content":"* [The Command Box](#the-command-box)","lastModifiedDate":"2022-11-02"},{"lineNumber":198,"author":{"gitId":"e1010101"},"content":"* [The Student card](#the-student-card)","lastModifiedDate":"2022-11-02"},{"lineNumber":199,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":200,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":201,"author":{"gitId":"e1010101"},"content":"### The Menu Bar","lastModifiedDate":"2022-11-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/MenuBar.png\" alt\u003d\"menu bar\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":204,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"img-caption\"\u003eThe menu bar is circled in red above\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":205,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":206,"author":{"gitId":"e1010101"},"content":"The menu bar is located at the top of the main page. It contains the following options:","lastModifiedDate":"2022-11-02"},{"lineNumber":207,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":208,"author":{"gitId":"e1010101"},"content":"#### The File tab","lastModifiedDate":"2022-11-02"},{"lineNumber":209,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":210,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/Exit.png\" alt\u003d\"file tab\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":211,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":212,"author":{"gitId":"e1010101"},"content":"Clicking on the File tab will open a dropdown menu with the \"Exit\" option.","lastModifiedDate":"2022-11-02"},{"lineNumber":213,"author":{"gitId":"e1010101"},"content":"Clicking on the \"Exit\" option will close the application.","lastModifiedDate":"2022-11-02"},{"lineNumber":214,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":215,"author":{"gitId":"e1010101"},"content":"#### The Help tab","lastModifiedDate":"2022-11-02"},{"lineNumber":216,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":217,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/Help.png\" alt\u003d\"help tab\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":218,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":219,"author":{"gitId":"e1010101"},"content":"Clicking on the Help tab will open a dropdown menu with the \"Help\" option.","lastModifiedDate":"2022-11-02"},{"lineNumber":220,"author":{"gitId":"e1010101"},"content":"Clicking on the \"Help\" option will open a help window that looks like this:","lastModifiedDate":"2022-11-02"},{"lineNumber":221,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":222,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/HelpWindow.png\" alt\u003d\"help window\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":223,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":224,"author":{"gitId":"e1010101"},"content":"The \"Copy URL\" button will copy the link to the user guide, which can be pasted in your","lastModifiedDate":"2022-11-02"},{"lineNumber":225,"author":{"gitId":"e1010101"},"content":"browser to open the online user guide.","lastModifiedDate":"2022-11-02"},{"lineNumber":226,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":227,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":228,"author":{"gitId":"e1010101"},"content":":bulb: You can also open the help window by pressing the \"F1\" key on your keyboard!","lastModifiedDate":"2022-11-02"},{"lineNumber":229,"author":{"gitId":"xiaoying1129"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":232,"author":{"gitId":"e1010101"},"content":"### The Command Box","lastModifiedDate":"2022-11-02"},{"lineNumber":233,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":234,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/CommandBox.png\" alt\u003d\"command box\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":235,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":236,"author":{"gitId":"e1010101"},"content":"The command box (circled in red above) is where you can type in commands to Watson.","lastModifiedDate":"2022-11-02"},{"lineNumber":237,"author":{"gitId":"e1010101"},"content":"After you type in your desired command, press the \"Enter\" key on your keyboard to tell Watson to perform","lastModifiedDate":"2022-11-02"},{"lineNumber":238,"author":{"gitId":"e1010101"},"content":"the action.","lastModifiedDate":"2022-11-02"},{"lineNumber":239,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":240,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":241,"author":{"gitId":"e1010101"},"content":":bulb: Commands are special sequences of words that Watson can understand.","lastModifiedDate":"2022-11-02"},{"lineNumber":242,"author":{"gitId":"e1010101"},"content":"They are used to perform actions with Watson.","lastModifiedDate":"2022-11-02"},{"lineNumber":243,"author":{"gitId":"e1010101"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":244,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":245,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":246,"author":{"gitId":"e1010101"},"content":"### The Student card","lastModifiedDate":"2022-11-02"},{"lineNumber":247,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":248,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/Student.png\" alt\u003d\"student\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":249,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":250,"author":{"gitId":"e1010101"},"content":"Each student is represented by a card that looks like the image above.","lastModifiedDate":"2022-11-02"},{"lineNumber":251,"author":{"gitId":"e1010101"},"content":"From top to bottom, the card contains the following details:","lastModifiedDate":"2022-11-02"},{"lineNumber":252,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":253,"author":{"gitId":"e1010101"},"content":"#### Name (Alex Yeoh)","lastModifiedDate":"2022-11-02"},{"lineNumber":254,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":255,"author":{"gitId":"e1010101"},"content":"The name of the student. Notice that there is a \"1.\" before the name;","lastModifiedDate":"2022-11-02"},{"lineNumber":256,"author":{"gitId":"e1010101"},"content":"this represents the student\u0027s _index_. You will use this number in certain commands","lastModifiedDate":"2022-11-02"},{"lineNumber":257,"author":{"gitId":"e1010101"},"content":"such as [`edit`]() and [`delete`]().","lastModifiedDate":"2022-11-02"},{"lineNumber":258,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":259,"author":{"gitId":"e1010101"},"content":"#### Tags (\"Student Council\")","lastModifiedDate":"2022-11-02"},{"lineNumber":260,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":261,"author":{"gitId":"e1010101"},"content":"A student can have one, multiple or no tags.","lastModifiedDate":"2022-11-02"},{"lineNumber":262,"author":{"gitId":"e1010101"},"content":"Tags are a good way to represent special roles a student might have (in this case, Alex is a member of the Student Council).","lastModifiedDate":"2022-11-02"},{"lineNumber":263,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":264,"author":{"gitId":"e1010101"},"content":"#### Phone Number (87438807)","lastModifiedDate":"2022-11-02"},{"lineNumber":265,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":266,"author":{"gitId":"e1010101"},"content":"The phone number of the student.","lastModifiedDate":"2022-11-02"},{"lineNumber":267,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":268,"author":{"gitId":"e1010101"},"content":"#### Address (Blk 30 Geylang Street 29, #06-40)","lastModifiedDate":"2022-11-02"},{"lineNumber":269,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":270,"author":{"gitId":"e1010101"},"content":"The address of the student.","lastModifiedDate":"2022-11-02"},{"lineNumber":271,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":272,"author":{"gitId":"e1010101"},"content":"#### Email (alexyeoh@example.com)","lastModifiedDate":"2022-11-02"},{"lineNumber":273,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":274,"author":{"gitId":"e1010101"},"content":"The email address of the student.","lastModifiedDate":"2022-11-02"},{"lineNumber":275,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":276,"author":{"gitId":"e1010101"},"content":"#### Class (1.2)","lastModifiedDate":"2022-11-02"},{"lineNumber":277,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":278,"author":{"gitId":"e1010101"},"content":"The class of the student.","lastModifiedDate":"2022-11-02"},{"lineNumber":279,"author":{"gitId":"e1010101"},"content":"Watson supports many formats for classes, such as \"1.2\", \"1A\" and more.","lastModifiedDate":"2022-11-02"},{"lineNumber":280,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":281,"author":{"gitId":"e1010101"},"content":"#### Attendance (1/1)","lastModifiedDate":"2022-11-02"},{"lineNumber":282,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":283,"author":{"gitId":"e1010101"},"content":"The attendance of the student. This is represented in the form \"number/number\",","lastModifiedDate":"2022-11-02"},{"lineNumber":284,"author":{"gitId":"e1010101"},"content":"where the first number represents the number of classes the student has attended,","lastModifiedDate":"2022-11-02"},{"lineNumber":285,"author":{"gitId":"e1010101"},"content":"while the second number represents the total number of classes that have taken","lastModifiedDate":"2022-11-02"},{"lineNumber":286,"author":{"gitId":"e1010101"},"content":"place.","lastModifiedDate":"2022-11-02"},{"lineNumber":287,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":288,"author":{"gitId":"e1010101"},"content":"#### Subjects (English, Math)","lastModifiedDate":"2022-11-02"},{"lineNumber":289,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":290,"author":{"gitId":"e1010101"},"content":"The subjects that the student is taking. Each subject is represented in its own line,","lastModifiedDate":"2022-11-02"},{"lineNumber":291,"author":{"gitId":"e1010101"},"content":"and contains information about the student\u0027s grades for that subject.","lastModifiedDate":"2022-11-02"},{"lineNumber":292,"author":{"gitId":"e1010101"},"content":"\"ENGLISH: [ Grade \u003d 62.1 ]\" means that the student has obtained 62.1% of the maximum grade possible","lastModifiedDate":"2022-11-02"},{"lineNumber":293,"author":{"gitId":"e1010101"},"content":"for English so far.","lastModifiedDate":"2022-11-02"},{"lineNumber":294,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":295,"author":{"gitId":"e1010101"},"content":"For example, if the student has taken 1 test that has a weightage of 30% of the subject\u0027s","lastModifiedDate":"2022-11-02"},{"lineNumber":296,"author":{"gitId":"e1010101"},"content":"entire grade, and scored 100% for that test, then the number shown in the application would","lastModifiedDate":"2022-11-02"},{"lineNumber":297,"author":{"gitId":"e1010101"},"content":"be 30% of 100%, or 30%.","lastModifiedDate":"2022-11-02"},{"lineNumber":298,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":299,"author":{"gitId":"e1010101"},"content":"#### Remarks (Good at Math)","lastModifiedDate":"2022-11-02"},{"lineNumber":300,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":301,"author":{"gitId":"e1010101"},"content":"Remarks are a good way to keep track of a student\u0027s strengths and weaknesses.","lastModifiedDate":"2022-11-02"},{"lineNumber":302,"author":{"gitId":"e1010101"},"content":"A student can have multiple remarks.","lastModifiedDate":"2022-11-02"},{"lineNumber":303,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":304,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":305,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":306,"author":{"gitId":"e1010101"},"content":"## A Brief Guide to Commands","lastModifiedDate":"2022-11-02"},{"lineNumber":307,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":308,"author":{"gitId":"e1010101"},"content":"### The Command Structure","lastModifiedDate":"2022-11-02"},{"lineNumber":309,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":310,"author":{"gitId":"e1010101"},"content":"Commands are the main way you can interact with Watson.","lastModifiedDate":"2022-11-02"},{"lineNumber":311,"author":{"gitId":"e1010101"},"content":"You can type commands into the [command box](#the-command-box) to tell Watson to perform actions.","lastModifiedDate":"2022-11-02"},{"lineNumber":312,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":313,"author":{"gitId":"e1010101"},"content":"Commands are made of a _command word_ and _arguments_.","lastModifiedDate":"2022-11-02"},{"lineNumber":314,"author":{"gitId":"e1010101"},"content":"The command word is the first word you type into the command box, and it tells Watson what action to perform.","lastModifiedDate":"2022-11-02"},{"lineNumber":315,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":316,"author":{"gitId":"e1010101"},"content":"For example, if you type `add` into the command box, Watson will know that you want to add a student.","lastModifiedDate":"2022-11-02"},{"lineNumber":317,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":318,"author":{"gitId":"e1010101"},"content":"The arguments are the rest of the words you type into the command box, and are usually made up of","lastModifiedDate":"2022-11-02"},{"lineNumber":319,"author":{"gitId":"e1010101"},"content":"different _parameters_.","lastModifiedDate":"2022-11-02"},{"lineNumber":320,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":321,"author":{"gitId":"e1010101"},"content":"Think of the command structure as ordering a sandwich.","lastModifiedDate":"2022-11-02"},{"lineNumber":322,"author":{"gitId":"e1010101"},"content":"The command word is the type of bread you want, while the parameters are the ingredients you want.","lastModifiedDate":"2022-11-02"},{"lineNumber":323,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":324,"author":{"gitId":"e1010101"},"content":"Let\u0027s break down an example command:","lastModifiedDate":"2022-11-02"},{"lineNumber":325,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":326,"author":{"gitId":"e1010101"},"content":"`add n/John Doe p/98765432`","lastModifiedDate":"2022-11-02"},{"lineNumber":327,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":328,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003eadd\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":329,"author":{"gitId":"e1010101"},"content":"The command word. This tells Watson that you want to add a student.","lastModifiedDate":"2022-11-02"},{"lineNumber":330,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003en/John Doe\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":331,"author":{"gitId":"e1010101"},"content":"The name parameter. This tells Watson that the name of the student is \"John Doe\".","lastModifiedDate":"2022-11-02"},{"lineNumber":332,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003ep/98765432\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":333,"author":{"gitId":"e1010101"},"content":"The phone number parameter. This tells Watson that the phone number of the student is \"98765432\".","lastModifiedDate":"2022-11-02"},{"lineNumber":334,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":335,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":336,"author":{"gitId":"e1010101"},"content":"### Important Notes","lastModifiedDate":"2022-11-02"},{"lineNumber":337,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":338,"author":{"gitId":"e1010101"},"content":"Commands have some special features that you should be aware of!","lastModifiedDate":"2022-11-02"},{"lineNumber":339,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":340,"author":{"gitId":"e1010101"},"content":"#### Words in `UPPER_CASE` are the inputs to be supplied by the user.","lastModifiedDate":"2022-11-02"},{"lineNumber":341,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":342,"author":{"gitId":"e1010101"},"content":"For example, in `add n/NAME`, you will give your own value for `NAME`. An example would be `add n/John Doe`.","lastModifiedDate":"2022-11-02"},{"lineNumber":343,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":344,"author":{"gitId":"e1010101"},"content":"#### Items in square brackets are optional.","lastModifiedDate":"2022-11-02"},{"lineNumber":345,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":346,"author":{"gitId":"e1010101"},"content":"For example, `TAG` in `n/NAME [t/TAG]` can be excluded.","lastModifiedDate":"2022-11-02"},{"lineNumber":347,"author":{"gitId":"e1010101"},"content":"You can match the format with either `n/John Doe t/friend` or `n/John Doe`.","lastModifiedDate":"2022-11-02"},{"lineNumber":348,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":349,"author":{"gitId":"e1010101"},"content":"#### Items with `…` after them can be used any number of times, including zero times.","lastModifiedDate":"2022-11-02"},{"lineNumber":350,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":351,"author":{"gitId":"e1010101"},"content":"For example, `[t/TAG]…` can be ignored (used 0 times), `t/friend` (used 1 time), `t/friend t/family` (used 2 times) etc.","lastModifiedDate":"2022-11-02"},{"lineNumber":352,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":353,"author":{"gitId":"e1010101"},"content":"#### Parameters can be in any order.","lastModifiedDate":"2022-11-02"},{"lineNumber":354,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":355,"author":{"gitId":"e1010101"},"content":"For example, if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-11-02"},{"lineNumber":356,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":357,"author":{"gitId":"e1010101"},"content":"#### Repeated parameters will be ignored.","lastModifiedDate":"2022-11-02"},{"lineNumber":358,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":359,"author":{"gitId":"e1010101"},"content":"Only the last occurrence of the repeated parameter will be taken.","lastModifiedDate":"2022-11-02"},{"lineNumber":360,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":361,"author":{"gitId":"e1010101"},"content":"For example, if you specify `n/Alice n/Bob`, only `n/Bob` will be taken by Watson.","lastModifiedDate":"2022-11-02"},{"lineNumber":362,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":363,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":364,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":365,"author":{"gitId":"e1010101"},"content":"# Handling Student Particulars","lastModifiedDate":"2022-11-02"},{"lineNumber":366,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":367,"author":{"gitId":"e1010101"},"content":"Watson\u0027s main capabilities are to keep track of students\u0027 particulars, such as their name, phone number, email address, etc.","lastModifiedDate":"2022-11-02"},{"lineNumber":368,"author":{"gitId":"e1010101"},"content":"With Watson, you can move away from cumbersome pen-and-paper systems and keep track","lastModifiedDate":"2022-11-02"},{"lineNumber":369,"author":{"gitId":"e1010101"},"content":"of your student\u0027s data far more easily.","lastModifiedDate":"2022-11-02"},{"lineNumber":370,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":371,"author":{"gitId":"e1010101"},"content":"Watson currently supports four features regarding student particulars:","lastModifiedDate":"2022-11-02"},{"lineNumber":372,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":373,"author":{"gitId":"e1010101"},"content":"* [Adding a student](#adding-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":374,"author":{"gitId":"e1010101"},"content":"* [Editing a student](#editing-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":375,"author":{"gitId":"e1010101"},"content":"* [Deleting a student](#deleting-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":376,"author":{"gitId":"e1010101"},"content":"* [Adding a remark to a student](#adding-a-remark-to-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":377,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":378,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":379,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":380,"author":{"gitId":"e1010101"},"content":"## Adding a student","lastModifiedDate":"2022-11-02"},{"lineNumber":381,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":382,"author":{"gitId":"e1010101"},"content":"You can add a student to Watson by using the `add` command.","lastModifiedDate":"2022-11-02"},{"lineNumber":383,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":384,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `add`","lastModifiedDate":"2022-11-02"},{"lineNumber":385,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":386,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"orange-text\"\u003eCompulsory Parameters:\u003c/strong\u003e `n/NAME`, `p/PHONE`, `e/EMAIL`, `a/ADDRESS`,","lastModifiedDate":"2022-11-02"},{"lineNumber":387,"author":{"gitId":"e1010101"},"content":"`c/CLASS`","lastModifiedDate":"2022-11-02"},{"lineNumber":388,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":389,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"green-text\"\u003eOptional Parameters:\u003c/strong\u003e `[rem/REMARK]…`, `[t/TAG]…`","lastModifiedDate":"2022-11-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"e1010101"},"content":"### Parameter Information","lastModifiedDate":"2022-11-02"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"e1010101"},"content":"* None of the parameters can be blank.","lastModifiedDate":"2022-11-02"},{"lineNumber":394,"author":{"gitId":"e1010101"},"content":"* `NAME` should only contain alphanumeric characters and spaces.","lastModifiedDate":"2022-11-02"},{"lineNumber":395,"author":{"gitId":"e1010101"},"content":"* `PHONE` should only contain numbers, and it should be at least 3 digits long.","lastModifiedDate":"2022-11-02"},{"lineNumber":396,"author":{"gitId":"e1010101"},"content":"* `EMAIL` should be a valid email address.","lastModifiedDate":"2022-11-02"},{"lineNumber":397,"author":{"gitId":"e1010101"},"content":"* `CLASS` should only contain numbers, letters and the decimal point.","lastModifiedDate":"2022-11-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"e1010101"},"content":"`add n/John Doe p/98765432 e/john@gmail.com a/2 Sengkang Avenue c/1A t/Student Council`","lastModifiedDate":"2022-11-02"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"e1010101"},"content":"`add n/Amy Lee a/Changi Airport p/87878787 e/amy@outlook.com c/1.4 rem/Good at Math`","lastModifiedDate":"2022-11-02"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"e1010101"},"content":"### Step-By-Step","lastModifiedDate":"2022-11-02"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":408,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":409,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":410,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003eTroubleshooting\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":411,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":412,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eProblem:\u003c/strong\u003e I typed in the command, but Watson says that the command is invalid!","lastModifiedDate":"2022-11-02"},{"lineNumber":413,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":414,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eSolution:\u003c/strong\u003e Check your command format! You can refer to the [command structure](#the-command-structure) for more information.","lastModifiedDate":"2022-11-02"},{"lineNumber":415,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":416,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eProblem:\u003c/strong\u003e I typed in the command, but Watson says that the student already exists?","lastModifiedDate":"2022-11-02"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":420,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eSolution:\u003c/strong\u003e Ensure that the student that you want to add does not share the same _name_,","lastModifiedDate":"2022-11-02"},{"lineNumber":421,"author":{"gitId":"e1010101"},"content":"_phone number_ or _email address_ as another student in the application.","lastModifiedDate":"2022-11-02"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":423,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":426,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":427,"author":{"gitId":"e1010101"},"content":"## Editing a student","lastModifiedDate":"2022-11-02"},{"lineNumber":428,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":429,"author":{"gitId":"e1010101"},"content":"You can edit a student\u0027s particulars by using the `edit` command.","lastModifiedDate":"2022-11-02"},{"lineNumber":430,"author":{"gitId":"e1010101"},"content":"The `edit` command supports the editing of the following particulars:","lastModifiedDate":"2022-11-02"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"e1010101"},"content":"* Name","lastModifiedDate":"2022-11-02"},{"lineNumber":433,"author":{"gitId":"e1010101"},"content":"* Phone number","lastModifiedDate":"2022-11-02"},{"lineNumber":434,"author":{"gitId":"e1010101"},"content":"* Email address","lastModifiedDate":"2022-11-02"},{"lineNumber":435,"author":{"gitId":"e1010101"},"content":"* Address","lastModifiedDate":"2022-11-02"},{"lineNumber":436,"author":{"gitId":"e1010101"},"content":"* Class","lastModifiedDate":"2022-11-02"},{"lineNumber":437,"author":{"gitId":"e1010101"},"content":"* Remarks","lastModifiedDate":"2022-11-02"},{"lineNumber":438,"author":{"gitId":"e1010101"},"content":"* Tags","lastModifiedDate":"2022-11-02"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"e1010101"},"content":"Multiple fields can be edited with a single `edit` command.","lastModifiedDate":"2022-11-02"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `edit`","lastModifiedDate":"2022-11-02"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"orange-text\"\u003eCompulsory Parameters:\u003c/strong\u003e `INDEX`, **AT LEAST ONE of the Optional Parameters**","lastModifiedDate":"2022-11-02"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"green-text\"\u003eOptional Parameters:\u003c/strong\u003e `[n/NAME]`, `[p/PHONE]`,","lastModifiedDate":"2022-11-02"},{"lineNumber":447,"author":{"gitId":"e1010101"},"content":"`[e/EMAIL]`, `[a/ADDRESS]`, `[c/CLASS`, `[rem/REMARK]…`, `[t/TAG]…`","lastModifiedDate":"2022-11-02"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"e1010101"},"content":"### Parameter Information","lastModifiedDate":"2022-11-02"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"e1010101"},"content":"* None of the parameters can be blank.","lastModifiedDate":"2022-11-02"},{"lineNumber":452,"author":{"gitId":"e1010101"},"content":"* `INDEX` is the number of the student that you want to edit.","lastModifiedDate":"2022-11-02"},{"lineNumber":453,"author":{"gitId":"e1010101"},"content":"This number is shown next to the student\u0027s name.","lastModifiedDate":"2022-11-02"},{"lineNumber":454,"author":{"gitId":"e1010101"},"content":"* `NAME` should only contain alphanumeric characters and spaces.","lastModifiedDate":"2022-11-02"},{"lineNumber":455,"author":{"gitId":"e1010101"},"content":"* `PHONE` should only contain numbers, and it should be at least 3 digits long.","lastModifiedDate":"2022-11-02"},{"lineNumber":456,"author":{"gitId":"e1010101"},"content":"* `EMAIL` should be a valid email address.","lastModifiedDate":"2022-11-02"},{"lineNumber":457,"author":{"gitId":"e1010101"},"content":"* `CLASS` should only contain numbers, letters and the decimal point.","lastModifiedDate":"2022-11-02"},{"lineNumber":458,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":459,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"e1010101"},"content":"`edit 1 n/John Doe p/98765432`","lastModifiedDate":"2022-11-02"},{"lineNumber":462,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":463,"author":{"gitId":"e1010101"},"content":"`edit 2 t/Financial Assistance`","lastModifiedDate":"2022-11-02"},{"lineNumber":464,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":465,"author":{"gitId":"e1010101"},"content":"### Step-By-Step","lastModifiedDate":"2022-11-02"},{"lineNumber":466,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":467,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":468,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":469,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"warning-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":470,"author":{"gitId":"e1010101"},"content":":exclamation: Using the `[rem/REMARK]` and/or `[t/TAG]` parameters will OVERWRITE any","lastModifiedDate":"2022-11-02"},{"lineNumber":471,"author":{"gitId":"e1010101"},"content":"other remarks and/or tags that the student has!","lastModifiedDate":"2022-11-02"},{"lineNumber":472,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":474,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":475,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003eTroubleshooting\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":476,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":477,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eProblem:\u003c/strong\u003e I typed in the command, but Watson says that the student index provided is invalid!","lastModifiedDate":"2022-11-02"},{"lineNumber":478,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":479,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eSolution:\u003c/strong\u003e The number specified by the `INDEX` parameter does not have a corresponding student!","lastModifiedDate":"2022-11-02"},{"lineNumber":480,"author":{"gitId":"e1010101"},"content":"Ensure that you have typed in the correct number of the student that you want to edit.","lastModifiedDate":"2022-11-02"},{"lineNumber":481,"author":{"gitId":"xiaoying1129"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":484,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":485,"author":{"gitId":"e1010101"},"content":"## Deleting a student","lastModifiedDate":"2022-11-02"},{"lineNumber":486,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":487,"author":{"gitId":"e1010101"},"content":"You may delete the entry for a particular student with the `delete` command.","lastModifiedDate":"2022-11-02"},{"lineNumber":488,"author":{"gitId":"e1010101"},"content":"Note that this action is irreversible!","lastModifiedDate":"2022-11-02"},{"lineNumber":489,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":490,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `delete`","lastModifiedDate":"2022-11-02"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"orange-text\"\u003eCompulsory Parameters:\u003c/strong\u003e `INDEX`","lastModifiedDate":"2022-11-02"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"e1010101"},"content":"### Parameter Information","lastModifiedDate":"2022-11-02"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"e1010101"},"content":"* `INDEX` is the number of the student that you want to delete.","lastModifiedDate":"2022-11-02"},{"lineNumber":497,"author":{"gitId":"e1010101"},"content":"This number is shown next to the student\u0027s name.","lastModifiedDate":"2022-11-02"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"e1010101"},"content":"`delete 1`","lastModifiedDate":"2022-11-02"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"e1010101"},"content":"### Step-By-Step","lastModifiedDate":"2022-11-02"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":506,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":507,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003eTroubleshooting\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":508,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":509,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eProblem:\u003c/strong\u003e I typed in the command, but Watson says that the student index provided is invalid!","lastModifiedDate":"2022-11-02"},{"lineNumber":510,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":511,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eSolution:\u003c/strong\u003e The number specified by the `INDEX` parameter does not have a corresponding student!","lastModifiedDate":"2022-11-02"},{"lineNumber":512,"author":{"gitId":"e1010101"},"content":"Ensure that you have typed in the correct number of the student that you want to edit.","lastModifiedDate":"2022-11-02"},{"lineNumber":513,"author":{"gitId":"e1010101"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":514,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":515,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"e1010101"},"content":"## Adding a remark to a student","lastModifiedDate":"2022-11-02"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"e1010101"},"content":"You can add a remark to a student with the `remark` command.","lastModifiedDate":"2022-11-02"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `remark`","lastModifiedDate":"2022-11-02"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"orange-text\"\u003eCompulsory Parameters:\u003c/strong\u003e `INDEX`, `rem/REMARK`","lastModifiedDate":"2022-11-02"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"e1010101"},"content":"### Parameter Information","lastModifiedDate":"2022-11-02"},{"lineNumber":526,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":527,"author":{"gitId":"e1010101"},"content":"* None of the parameters can be blank.","lastModifiedDate":"2022-11-02"},{"lineNumber":528,"author":{"gitId":"e1010101"},"content":"* `INDEX` is the number of the student that you want to add a remark to.","lastModifiedDate":"2022-11-02"},{"lineNumber":529,"author":{"gitId":"e1010101"},"content":"This number is shown next to the student\u0027s name.","lastModifiedDate":"2022-11-02"},{"lineNumber":530,"author":{"gitId":"e1010101"},"content":"* `REMARK` is the remark that you want to add to the student.","lastModifiedDate":"2022-11-02"},{"lineNumber":531,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":532,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":533,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":534,"author":{"gitId":"e1010101"},"content":"`remark 1 rem/Good at Math`","lastModifiedDate":"2022-11-02"},{"lineNumber":535,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":536,"author":{"gitId":"e1010101"},"content":"`remark 2 rem/Enjoys playing football`","lastModifiedDate":"2022-11-02"},{"lineNumber":537,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":538,"author":{"gitId":"e1010101"},"content":"### Step-By-Step","lastModifiedDate":"2022-11-02"},{"lineNumber":539,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":540,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":541,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":542,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":543,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003eTroubleshooting\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":545,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eProblem:\u003c/strong\u003e I typed in the command, but Watson says that the student index provided is invalid!","lastModifiedDate":"2022-11-02"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":547,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eSolution:\u003c/strong\u003e The number specified by the `INDEX` parameter does not have a corresponding student!","lastModifiedDate":"2022-11-02"},{"lineNumber":548,"author":{"gitId":"e1010101"},"content":"Ensure that you have typed in the correct number of the student that you want to edit.","lastModifiedDate":"2022-11-02"},{"lineNumber":549,"author":{"gitId":"xiaoying1129"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":550,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":551,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":552,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":553,"author":{"gitId":"e1010101"},"content":"# Handling Grades","lastModifiedDate":"2022-11-02"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"e1010101"},"content":"Watson allows you to keep track of your students\u0027 grades in a simple and intuitive manner.","lastModifiedDate":"2022-11-02"},{"lineNumber":556,"author":{"gitId":"e1010101"},"content":"Watson also features a novel prediction system that allows you to predict a student\u0027s grade","lastModifiedDate":"2022-11-02"},{"lineNumber":557,"author":{"gitId":"e1010101"},"content":"for a future assessment.","lastModifiedDate":"2022-11-02"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":559,"author":{"gitId":"e1010101"},"content":"Watson currently supports two features regarding student grades:","lastModifiedDate":"2022-11-02"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":561,"author":{"gitId":"e1010101"},"content":"* [Grading your students](#adding-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":562,"author":{"gitId":"e1010101"},"content":"* [Editing a student](#editing-a-student)","lastModifiedDate":"2022-11-02"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":564,"author":{"gitId":"e1010101"},"content":"## Grading your Students","lastModifiedDate":"2022-11-02"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":566,"author":{"gitId":"e1010101"},"content":"Watson\u0027s grading system allows you to grade all your students at once for any assessment.","lastModifiedDate":"2022-11-02"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":568,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `grade`","lastModifiedDate":"2022-11-02"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":570,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"orange-text\"\u003eCompulsory Parameters:\u003c/strong\u003e `subject_`, `assessmentName_`,","lastModifiedDate":"2022-11-02"},{"lineNumber":571,"author":{"gitId":"e1010101"},"content":"`assessmentTotalScore_`, `assessmentWeightage_`, `assessmentDifficulty`","lastModifiedDate":"2022-11-02"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":573,"author":{"gitId":"e1010101"},"content":"### Parameter Information","lastModifiedDate":"2022-11-02"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":575,"author":{"gitId":"e1010101"},"content":"* This command has a special parameter format, using underscores `(\"_\")` instead of prefixes `(\"n/\")`.","lastModifiedDate":"2022-11-02"},{"lineNumber":576,"author":{"gitId":"e1010101"},"content":"* There should be \u003cstrong\u003eno spaces\u003c/strong\u003e between parameters.","lastModifiedDate":"2022-11-02"},{"lineNumber":577,"author":{"gitId":"e1010101"},"content":"* The parameters have to be in the \u003cstrong\u003eexact order\u003c/strong\u003e as shown above.","lastModifiedDate":"2022-11-02"},{"lineNumber":578,"author":{"gitId":"e1010101"},"content":"* `subject_` is the subject that the assessment belongs to. It must be in **CAPITAL LETTERS**. If no students take the subject,","lastModifiedDate":"2022-11-02"},{"lineNumber":579,"author":{"gitId":"e1010101"},"content":"an error message will be shown.","lastModifiedDate":"2022-11-02"},{"lineNumber":580,"author":{"gitId":"e1010101"},"content":"* `assessmentName_` is the name of the assessment. This name should be unique for the subject,","lastModifiedDate":"2022-11-02"},{"lineNumber":581,"author":{"gitId":"e1010101"},"content":"and can only consist of alphabets and numbers. Spaces are **NOT** allowed.","lastModifiedDate":"2022-11-02"},{"lineNumber":582,"author":{"gitId":"e1010101"},"content":"* `assessmentTotalScore_` is the total score of the assessment. This should be a positive whole number (no decimals!).","lastModifiedDate":"2022-11-02"},{"lineNumber":583,"author":{"gitId":"e1010101"},"content":"* `assessmentWeightage_` is the weightage of the assessment. This should be a decimal number between 0 and 1 (e.g. 0.5).","lastModifiedDate":"2022-11-02"},{"lineNumber":584,"author":{"gitId":"e1010101"},"content":"This is the percentage of the total grade that this assessment contributes to; so 0.5 would","lastModifiedDate":"2022-11-02"},{"lineNumber":585,"author":{"gitId":"e1010101"},"content":"represent 50%.","lastModifiedDate":"2022-11-02"},{"lineNumber":586,"author":{"gitId":"e1010101"},"content":"* `assessmentDifficulty` is the difficulty of the assessment. This should be a decimal number between 0 and 5 (e.g. 3.5).","lastModifiedDate":"2022-11-02"},{"lineNumber":587,"author":{"gitId":"e1010101"},"content":"The difficulty of the assessment should be a rough estimate (according to you!) of how difficult the assessment is.","lastModifiedDate":"2022-11-02"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":589,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":591,"author":{"gitId":"e1010101"},"content":"`grade MATH_Quiz1_10_0.5_3.5`","lastModifiedDate":"2022-11-02"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":593,"author":{"gitId":"e1010101"},"content":"`grade ENGLISH_FYE_100_0.5_4.5`","lastModifiedDate":"2022-11-02"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":595,"author":{"gitId":"e1010101"},"content":"### Step-By-Step Example","lastModifiedDate":"2022-11-02"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"e1010101"},"content":"Let\u0027s use `grade ENGLISH_FYE_100_0.5_4.5` and see how the grading process works!","lastModifiedDate":"2022-11-02"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"e1010101"},"content":"1) Type in the command `grade` followed by the parameters.","lastModifiedDate":"2022-11-02"},{"lineNumber":600,"author":{"gitId":"e1010101"},"content":"You should see the following screen:","lastModifiedDate":"2022-11-02"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/GradeWindow.png\" alt\u003d\"menu bar\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"e1010101"},"content":"Observe that there is a text box at the bottom of the window, next to which is a button labelled `Enter`.","lastModifiedDate":"2022-11-02"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":606,"author":{"gitId":"e1010101"},"content":"2) Type in the grade that the student obtained for the assessment.","lastModifiedDate":"2022-11-02"},{"lineNumber":607,"author":{"gitId":"e1010101"},"content":"The window will now show the details of the next student to be marked.","lastModifiedDate":"2022-11-02"},{"lineNumber":608,"author":{"gitId":"e1010101"},"content":"Continue typing in marks until the window closes.","lastModifiedDate":"2022-11-02"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"e1010101"},"content":"3) Once the window closes, you will observe that the grades of the students marked","lastModifiedDate":"2022-11-02"},{"lineNumber":611,"author":{"gitId":"e1010101"},"content":"will be updated.","lastModifiedDate":"2022-11-02"},{"lineNumber":612,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":613,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"flex-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":614,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/PreGrade.png\" alt\u003d\"menu bar\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":615,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/PostGrade.png\" alt\u003d\"menu bar\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":616,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":617,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":618,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"img-caption\"\u003eOn the left: before grading, on the right: after grading\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":620,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":621,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":622,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":623,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003eTroubleshooting\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":625,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eProblem:\u003c/strong\u003e I typed in the command, but Watson says that the student index provided is invalid!","lastModifiedDate":"2022-11-02"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":627,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eSolution:\u003c/strong\u003e The number specified by the `INDEX` parameter does not have a corresponding student!","lastModifiedDate":"2022-11-02"},{"lineNumber":628,"author":{"gitId":"e1010101"},"content":"Ensure that you have typed in the correct number of the student that you want to edit.","lastModifiedDate":"2022-11-02"},{"lineNumber":629,"author":{"gitId":"e1010101"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":631,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":632,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":633,"author":{"gitId":"e1010101"},"content":"## Predicting a Student\u0027s grade","lastModifiedDate":"2022-11-02"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":635,"author":{"gitId":"e1010101"},"content":"Watson\u0027s prediction system allows you to predict a student\u0027s grade for a future assessment.","lastModifiedDate":"2022-11-02"},{"lineNumber":636,"author":{"gitId":"e1010101"},"content":"Watson follows the following steps to predict a student\u0027s grade:","lastModifiedDate":"2022-11-02"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":638,"author":{"gitId":"e1010101"},"content":"1) Calculate the percentage of classes attended by the student. Let\u0027s call this the student\u0027s **learning rating**.","lastModifiedDate":"2022-11-02"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":640,"author":{"gitId":"e1010101"},"content":"For each of the student\u0027s previous assessments, perform the following procedure:","lastModifiedDate":"2022-11-02"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":642,"author":{"gitId":"e1010101"},"content":"1.1. Take the difficulty of the assessment, then apply the following formula:","lastModifiedDate":"2022-11-02"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":644,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"img-caption\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":645,"author":{"gitId":"e1010101"},"content":"1/(difficulty x learning rating)","lastModifiedDate":"2022-11-02"},{"lineNumber":646,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":648,"author":{"gitId":"e1010101"},"content":"Let\u0027s call this number the **difficulty bonus**.","lastModifiedDate":"2022-11-02"},{"lineNumber":649,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":650,"author":{"gitId":"e1010101"},"content":"1.2. Add the **difficulty bonus** to the student\u0027s grade for the assessment.","lastModifiedDate":"2022-11-02"},{"lineNumber":651,"author":{"gitId":"e1010101"},"content":"We call this their **normalized score**.","lastModifiedDate":"2022-11-02"},{"lineNumber":652,"author":{"gitId":"e1010101"},"content":"2) Take the average of the student\u0027s **normalized scores** for all their previous assessments,","lastModifiedDate":"2022-11-02"},{"lineNumber":653,"author":{"gitId":"e1010101"},"content":"then add the difficulty of the assessment to predict. This is the final prediction!","lastModifiedDate":"2022-11-02"},{"lineNumber":654,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":655,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `predict`","lastModifiedDate":"2022-11-02"},{"lineNumber":656,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":657,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"orange-text\"\u003eCompulsory Parameters:\u003c/strong\u003e `n/NAME`, `s/SUBJECT`, `diff/DIFFICULTY`,","lastModifiedDate":"2022-11-02"},{"lineNumber":658,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":659,"author":{"gitId":"e1010101"},"content":"### Parameter Information","lastModifiedDate":"2022-11-02"},{"lineNumber":660,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":661,"author":{"gitId":"e1010101"},"content":"* None of the parameters can be blank.","lastModifiedDate":"2022-11-02"},{"lineNumber":662,"author":{"gitId":"e1010101"},"content":"* The `n/NAME` parameter should match **EXACTLY** to the student to be predicted.","lastModifiedDate":"2022-11-02"},{"lineNumber":663,"author":{"gitId":"e1010101"},"content":"* The student should be studying the subject to be predicted.","lastModifiedDate":"2022-11-02"},{"lineNumber":664,"author":{"gitId":"e1010101"},"content":"* The `diff/DIFFICULTY` parameter should be a decimal number between 0 and 5 (e.g. 3.5).","lastModifiedDate":"2022-11-02"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":666,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":668,"author":{"gitId":"e1010101"},"content":"`predict n/Alex Yeoh s/ENGLISH diff/4.0`","lastModifiedDate":"2022-11-02"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":670,"author":{"gitId":"e1010101"},"content":"`predict n/Bernice Yu s/MATH diff/3.5`","lastModifiedDate":"2022-11-02"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":672,"author":{"gitId":"e1010101"},"content":"### Step-By-Step Example","lastModifiedDate":"2022-11-02"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":674,"author":{"gitId":"e1010101"},"content":"Let\u0027s use `predict n/Alex Yeoh s/ENGLISH diff/4.0` and see how the prediction process works!","lastModifiedDate":"2022-11-02"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":676,"author":{"gitId":"e1010101"},"content":"1) Type in the command `predict` followed by the parameters, then press `Enter`.","lastModifiedDate":"2022-11-02"},{"lineNumber":677,"author":{"gitId":"e1010101"},"content":"2) You should see the following screen:","lastModifiedDate":"2022-11-02"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/PredictWindow.png\" alt\u003d\"menu bar\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"e1010101"},"content":"This prediction means that Alex is likely to get about 62 percent for their next English assessment.","lastModifiedDate":"2022-11-02"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":684,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":685,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":686,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003eTroubleshooting\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":687,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":688,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eProblem:\u003c/strong\u003e I typed in the command, but Watson says that the student can\u0027t be found!","lastModifiedDate":"2022-11-02"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":690,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eSolution:\u003c/strong\u003e Make sure that you\u0027ve typed in the student\u0027s name correctly. The name is case-sensitive!","lastModifiedDate":"2022-11-02"},{"lineNumber":691,"author":{"gitId":"xiaoying1129"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":693,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":695,"author":{"gitId":"e1010101"},"content":"# Utility Features","lastModifiedDate":"2022-11-02"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":697,"author":{"gitId":"e1010101"},"content":"Watson has a few utility features that can make handling your students easier, including:","lastModifiedDate":"2022-11-02"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"e1010101"},"content":"* Sorting Students","lastModifiedDate":"2022-11-02"},{"lineNumber":700,"author":{"gitId":"e1010101"},"content":"* Finding a Student","lastModifiedDate":"2022-11-02"},{"lineNumber":701,"author":{"gitId":"e1010101"},"content":"* Viewing all Students","lastModifiedDate":"2022-11-02"},{"lineNumber":702,"author":{"gitId":"e1010101"},"content":"* Clearing the list of Students","lastModifiedDate":"2022-11-02"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"e1010101"},"content":"## Sorting Students","lastModifiedDate":"2022-11-02"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"e1010101"},"content":"Watson\u0027s sorting system allows you to sort your students based of their grades for a given subject.","lastModifiedDate":"2022-11-02"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `sort`","lastModifiedDate":"2022-11-02"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"orange-text\"\u003eCompulsory Parameters:\u003c/strong\u003e `asc` OR `desc`, `s/SUBJECT`","lastModifiedDate":"2022-11-02"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":712,"author":{"gitId":"e1010101"},"content":"### Parameter Information","lastModifiedDate":"2022-11-02"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":714,"author":{"gitId":"e1010101"},"content":"* The `asc` parameter sorts the students in ascending order, while the `desc` parameter sorts the students in descending order.","lastModifiedDate":"2022-11-02"},{"lineNumber":715,"author":{"gitId":"e1010101"},"content":"* The `s/SUBJECT` parameter should be the subject to be sorted by.","lastModifiedDate":"2022-11-02"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":717,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":719,"author":{"gitId":"e1010101"},"content":"`sort asc s/ENGLISH`","lastModifiedDate":"2022-11-02"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":721,"author":{"gitId":"e1010101"},"content":"`sort desc s/MATH`","lastModifiedDate":"2022-11-02"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":723,"author":{"gitId":"e1010101"},"content":"### Step-By-Step Example","lastModifiedDate":"2022-11-02"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":725,"author":{"gitId":"e1010101"},"content":"Let\u0027s use `sort asc s/ENGLISH` and see how the sorting process works!","lastModifiedDate":"2022-11-02"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":727,"author":{"gitId":"e1010101"},"content":"1) Type in the command `sort asc s/ENGLISH`, then press `Enter`. Note that `ENGLISH` does","lastModifiedDate":"2022-11-02"},{"lineNumber":728,"author":{"gitId":"e1010101"},"content":"not need to be capitalized.","lastModifiedDate":"2022-11-02"},{"lineNumber":729,"author":{"gitId":"e1010101"},"content":"2) You should see the following screen:","lastModifiedDate":"2022-11-02"},{"lineNumber":730,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"flex-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":731,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/BeforeSort.png\" alt\u003d\"menu bar\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":732,"author":{"gitId":"e1010101"},"content":"\u003cimg src\u003d\"images/AfterSort.png\" alt\u003d\"menu bar\" class\u003d\"special-img\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":733,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":734,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"img-caption\"\u003eOn the left: before sorting, on the right: after sorting\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":736,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":737,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":738,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":739,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003eTroubleshooting\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eProblem:\u003c/strong\u003e I typed in the command, but Watson says that the student can\u0027t be found!","lastModifiedDate":"2022-11-02"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eSolution:\u003c/strong\u003e Make sure that you\u0027ve typed in the student\u0027s name correctly. The name is case-sensitive!","lastModifiedDate":"2022-11-02"},{"lineNumber":744,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"e1010101"},"content":"## Finding a Student","lastModifiedDate":"2022-11-02"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"e1010101"},"content":"Watson\u0027s find system allows you to find a student based on their name, class or a subject.","lastModifiedDate":"2022-11-02"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `find`","lastModifiedDate":"2022-11-02"},{"lineNumber":753,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":754,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"orange-text\"\u003eCompulsory Parameters:\u003c/strong\u003e AT LEAST ONE OF `n/NAME` OR `c/CLASS` OR `s/SUBJECT`","lastModifiedDate":"2022-11-02"},{"lineNumber":755,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":756,"author":{"gitId":"e1010101"},"content":"### Parameter Information","lastModifiedDate":"2022-11-02"},{"lineNumber":757,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":758,"author":{"gitId":"e1010101"},"content":"* You may put use multiple parameters to search for a student, but NOT zero.","lastModifiedDate":"2022-11-02"},{"lineNumber":759,"author":{"gitId":"e1010101"},"content":"* The parameters work independently; for example, if you search for the name `Alex Yeoh` and the class `4A`,","lastModifiedDate":"2022-11-02"},{"lineNumber":760,"author":{"gitId":"e1010101"},"content":"ALL students with the name `Alex Yeoh` AND the class `4A` will be displayed.","lastModifiedDate":"2022-11-02"},{"lineNumber":761,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":762,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":763,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":764,"author":{"gitId":"e1010101"},"content":"`find n/Alex Yeoh`","lastModifiedDate":"2022-11-02"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":766,"author":{"gitId":"e1010101"},"content":"`find n/Alex c/4A`","lastModifiedDate":"2022-11-02"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":768,"author":{"gitId":"e1010101"},"content":"`find n/Alex s/ENGLISH`","lastModifiedDate":"2022-11-02"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":770,"author":{"gitId":"e1010101"},"content":"### Step-By-Step Example","lastModifiedDate":"2022-11-02"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":772,"author":{"gitId":"e1010101"},"content":"We will use the command `find n/Alex c/2.1` to search for students.","lastModifiedDate":"2022-11-02"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":774,"author":{"gitId":"e1010101"},"content":"1) Type in the command `find n/Alex c/2.1`, then press `Enter`.","lastModifiedDate":"2022-11-02"},{"lineNumber":775,"author":{"gitId":"e1010101"},"content":"2) You should observe that two students have been found: Alex Yeoh (whose name matches the search term \"Alex\"),","lastModifiedDate":"2022-11-02"},{"lineNumber":776,"author":{"gitId":"e1010101"},"content":"and Bernice Yu (who is in class 2.1).","lastModifiedDate":"2022-11-02"},{"lineNumber":777,"author":{"gitId":"e1010101"},"content":"3) To get back to the main list, type `list` in the command box, then press `Enter`.","lastModifiedDate":"2022-11-02"},{"lineNumber":778,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":779,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":780,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":781,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":782,"author":{"gitId":"e1010101"},"content":"\u003cdiv class\u003d\"big-font\"\u003eTroubleshooting\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":783,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":784,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eProblem:\u003c/strong\u003e I typed in the command, but Watson says that the command has an invalid format!","lastModifiedDate":"2022-11-02"},{"lineNumber":785,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":786,"author":{"gitId":"e1010101"},"content":"\u003cstrong\u003eSolution:\u003c/strong\u003e Make sure that you\u0027ve not left any parameters blank! Blank parameters will","lastModifiedDate":"2022-11-02"},{"lineNumber":787,"author":{"gitId":"e1010101"},"content":"cause Watson to show an error.","lastModifiedDate":"2022-11-02"},{"lineNumber":788,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":789,"author":{"gitId":"e1010101"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":790,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":791,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":792,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":793,"author":{"gitId":"e1010101"},"content":"## Viewing all Students","lastModifiedDate":"2022-11-02"},{"lineNumber":794,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":795,"author":{"gitId":"e1010101"},"content":"You can easily navigate back to the full student list with the `list` command.","lastModifiedDate":"2022-11-02"},{"lineNumber":796,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":797,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `list`","lastModifiedDate":"2022-11-02"},{"lineNumber":798,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":799,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":800,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":801,"author":{"gitId":"e1010101"},"content":"`list`","lastModifiedDate":"2022-11-02"},{"lineNumber":802,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":803,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":804,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":805,"author":{"gitId":"e1010101"},"content":"## Clearing the list of Students","lastModifiedDate":"2022-11-02"},{"lineNumber":806,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":807,"author":{"gitId":"e1010101"},"content":"You can clear the list of students with the `clear` command.","lastModifiedDate":"2022-11-02"},{"lineNumber":808,"author":{"gitId":"e1010101"},"content":"Note that this is irreversible!","lastModifiedDate":"2022-11-02"},{"lineNumber":809,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":810,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `clear`","lastModifiedDate":"2022-11-02"},{"lineNumber":811,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":812,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":813,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":814,"author":{"gitId":"e1010101"},"content":"`clear`","lastModifiedDate":"2022-11-02"},{"lineNumber":815,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":816,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":817,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":818,"author":{"gitId":"e1010101"},"content":"## Getting Help","lastModifiedDate":"2022-11-02"},{"lineNumber":819,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":820,"author":{"gitId":"e1010101"},"content":"If you need help, you can type `help` in the command box, then press `Enter`.","lastModifiedDate":"2022-11-02"},{"lineNumber":821,"author":{"gitId":"e1010101"},"content":"A pop-up window will appear with a link that you can copy and paste into your browser.","lastModifiedDate":"2022-11-02"},{"lineNumber":822,"author":{"gitId":"e1010101"},"content":"The link will bring you to this guide!","lastModifiedDate":"2022-11-02"},{"lineNumber":823,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":824,"author":{"gitId":"e1010101"},"content":"\u003cstrong class\u003d\"red-text\"\u003eCommand Word:\u003c/strong\u003e `help`","lastModifiedDate":"2022-11-02"},{"lineNumber":825,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":826,"author":{"gitId":"e1010101"},"content":"### Examples","lastModifiedDate":"2022-11-02"},{"lineNumber":827,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":828,"author":{"gitId":"e1010101"},"content":"`help`","lastModifiedDate":"2022-11-02"},{"lineNumber":829,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":830,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":832,"author":{"gitId":"e1010101"},"content":"## Glossary","lastModifiedDate":"2022-11-02"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":834,"author":{"gitId":"e1010101"},"content":"* **Operating System**: The software that runs on your computer.","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"jgyj123":3,"e1010101":696,"Hoodineee":1,"joosxi":1,"xiaoying1129":11,"-":122}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(database)","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"e1010101":1,"-":37}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"Class SubjectClass","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"Class SubjectHandler","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"Class Subject","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"Class Grades","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"Class Assessment","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"Class Remark","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"Class IndexNumber","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"Person *--\u003e SubjectHandler","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"SubjectHandler *--\u003e \"*\" Subject","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"Subject *--\u003e Grades","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"Grades *--\u003e \"*\" Assessment","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"Person *--\u003e \"*\" Remark","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"Person *--\u003e IndexNumber","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Hoodineee":13,"-":50}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"title: Watson, The Teaching Assistant","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103T-T08-1/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2223S1-CS2103T-T08-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T08-1/tp/branch/master/graph/badge.svg?token\u003d8QAGZO6Z9W)](https://codecov.io/gh/AY2223S1-CS2103T-T08-1/tp)","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"**Watson is an all-in-one application for teachers that aids in their teaching process.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"- If you are interested in using Watson, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"- If you are interested about developing Watson, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"e1010101":7,"-":11}},{"path":"docs/team/e1010101.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"title: Ezra\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"### Project: Watson, The Teacher\u0027s Companion","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"Watson is a desktop database application that","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"reduces the administrative workload of teachers greatly.","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"* **New Features**:","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"  * `Login Page`: Added a login page for the application.","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    * What it does: allows the user to log in to the application.","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    * Justification: This feature is useful in ensuring that data related to a user can only be accessed with the user\u0027s login details.","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    * Note that the current feature is a placeholder due to the nature of the project (desktop application). In the future,","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    with a potential move to an online-based application, this feature will be more useful.","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"  `Pull Requests`","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"  * [#20]: Modifications to AboutUs.md","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"  * [#24]: Added a skeletal Personal Portfolio Page","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"  * [#34]: Made changes to the product site","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"  * [#38]: Made changes to the user guide","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"  * [#40]: Fixed GitHub icon on product website resulting in a 404 error","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"  * [#48]: Made name changes to documentation due to a change in project direction","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"  * [#53]: Added a login page","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"  * [#59]: Refactored various classes in the Person model","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"  * [#60]: Massive codestyle changes to comply with checkstyle","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"  * [#64]: Added fixes related to the Subject class and its fields","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"  * [#65]: Added some null checks for defensive programming","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"* **Project management**:","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"  * Group Leader","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"  * Managed releases `v1.0` - `v1.3` (3 releases) on GitHub","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"  * Managed the project\u0027s issue tracker (added relevant tags and handled issue assignment)","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"  * User Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    * Rewrote the entire user guide from scratch [#198], [#199]","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    * Added documentation for existing features (`add`, `delete`, `edit`, `find`, `list`, `clear`, `exit`, `help`) [#198], [#199],","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    including examples, step-by-step instructions, and troubleshooting instructions","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"* **Community**:","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"* **Tools**:","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"e1010101":57}},{"path":"docs/team/hoodineee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"layout: page title: Gregg\u0027s Project Portfolio Page","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"### Project: Watson, The Teacher\u0027s Companion","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"Watson is a desktop database application used to reduce the administrative workload of teachers greatly. The user","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"    * `Subject`: Added a Subject class.","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"        * What it does: allows subjects to be tagged to SubjectHandler which is tagged to Student.","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"        * Justification: Since our application is targeted at reducing the administrative workload of teachers, it is","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"          essential for the application to be able to keep track of the Subjects taken by each student.","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"    * `Grades`: Added a Grades class.","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"        * What it does: allows Grades to be tagged to Subject.","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"        * Justification: Since our application is targeted at reducing the administrative workload of teachers, it is","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"          essential for the application to be able to keep track of the Grades for each Subject taken by each student.","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    * `Pull Requests`:","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"        * [#15]: Added a skeletal Personal Portfolio Page","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"        * [#37], [#41]: Updated User Guide","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"        * [#49]: Added Subject and Grades class for Person","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"        * [#72]: Added to Developer Guide","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"        * [#84]: Fixed json to store and read Subject and Grades in a Person","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"        * [#102]: Updated User Guide","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"        * [#106], [#107]: Changed format for Subject, Grades and Attendance in the GUI","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"        * [#109]: Modifications to the Sort Command","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"        * [#119]: Refactored various classes in the Person model","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"        * [#187]: Added constraints to the Grades class","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"        * [#192], [#195]: Fixed some issues with Subject and Grades","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"* **Project management**:","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"    * Group Allocator ","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"    * User Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"        * [#37], [#41], [#102]: Updated and added to the User Guide. ","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"        * [#72]: Added to the Developer Guide","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"* **Community**:","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"* **Tools**:","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"Hoodineee":51}},{"path":"docs/team/jgyj123.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"title: Goh Yijie, Jonathan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"### Project: Sherlock","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"Project: Watson, The Teacher\u0027s Companion","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"Watson is a desktop database application used to reduce the administrative workload of teachers greatly. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djgyj123\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djgyj123\u0026tabRepo\u003dAY2223S1-CS2103T-T08-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"  Pull Requests:","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"  * [#30]: Added a skeletal Personal Portfolio Page","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"  * [#39], [71]: Updated User ","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"jgyj123"},"content":"  * [#54]: Modifications to Person Fields","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"jgyj123"},"content":"  * [#72]: Enabled Assertions","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"jgyj123"},"content":"  * [#93]: Added Grade functionality -  Grade command, grade GUI","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"  * [#110]: UI modifications of Login page, grade GUI and main Window","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"jgyj123"},"content":"  * [#114]: Update UGDG","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"jgyj123"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"jgyj123"},"content":"    * to be added soon","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jgyj123"},"content":"* **Contributions to UG**","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"jgyj123"},"content":"    * to be added soon","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jgyj123"},"content":"* **Contributions to DG**","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"jgyj123"},"content":"    * to be added soon","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jgyj123"},"content":"* **Contributions to team tasks**:","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"jgyj123"},"content":"    * to be added soon","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"jgyj123"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"jgyj123":34}},{"path":"docs/team/joosxi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joosxi"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"joosxi"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"joosxi"},"content":"title: Jia Xi\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"joosxi"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"joosxi"},"content":"### Project: Watson, The Teacher\u0027s Companion","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"joosxi"},"content":"Watson is a desktop database application that","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"joosxi"},"content":"reduces the administrative workload of teachers greatly. ","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"joosxi"},"content":"The user interacts with it using a CLI, and it has a GUI ","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"joosxi"},"content":"created with JavaFX. It is written in Java, and has about ","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"joosxi"},"content":"10 kLoC.","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"joosxi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"joosxi"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"joosxi"},"content":"  * `Find Command with Prefix`","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"joosxi"},"content":"    * What it does: Allows the user to find a student ","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"joosxi"},"content":"    in Watson by searching via \"NAME\", \"STUDENT_CLASS\"","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"joosxi"},"content":"    and/or \"SUBJECT\" keywords, entering these keywords","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"joosxi"},"content":"    after the prefixes \"n/\", \"c/\" and \"s/\" respectively.","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"joosxi"},"content":"    * Justification: This feature allows users to have","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"joosxi"},"content":"    flexibility in finding students inside Watson, as ","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"joosxi"},"content":"    users can find not just by name but by class and ","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"joosxi"},"content":"    subject as well.","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"joosxi"},"content":"  * `Mark Attendance Command`","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"joosxi"},"content":"    * What it does: Allows the user to mark attendance for","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"joosxi"},"content":"    multiple students in a particular class and on a ","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"joosxi"},"content":"    particular day, using their assigned index numbers.","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"joosxi"},"content":"    * Justification: Allowing the marking of attendance","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"joosxi"},"content":"    for multiple students at once speeds up the process,","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"joosxi"},"content":"    and the one-liner command makes it faster than a ","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"joosxi"},"content":"    similar GUI interface.","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"joosxi"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"joosxi"},"content":"  * `Pull Requests`:","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"joosxi"},"content":"    * [#67]: Find command with prefix v1.3","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"joosxi"},"content":"    * [#76]: Update Developer Guide for ","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"joosxi"},"content":"    find command(Finding by class prefix)","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"joosxi"},"content":"    * [#79]: Update edit command","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"joosxi"},"content":"    * [#91]: Mark attendance command","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"joosxi"},"content":"    * [#98]: Update User Guide for edit command","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"joosxi"},"content":"    * [#100]: Update Developer Guide for edit command","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"joosxi"},"content":"    * [#190]: Enhancements to User Interface","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"joosxi"},"content":"    * [#197]: Add test cases for FindCommandTest","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":47,"author":{"gitId":"joosxi"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":48,"author":{"gitId":"joosxi"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":49,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":50,"author":{"gitId":"joosxi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"joosxi"},"content":"  * `Edit Command`: Enhanced edit command to be able to","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"joosxi"},"content":"  edit student class and remarks.","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"joosxi"},"content":"  * `UI Improvements`: Improved on formatting for display","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"joosxi"},"content":"  of students\u0027 details, and colour coding for attendance","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"joosxi"},"content":"  level.","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"joosxi"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"joosxi"},"content":"  * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":59,"author":{"gitId":"joosxi"},"content":"    * `Edit command`","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"joosxi"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"joosxi"},"content":"    * `Find command (Finding by class prefix)`","lastModifiedDate":"2022-11-04"},{"lineNumber":62,"author":{"gitId":"joosxi"},"content":"    * `Edit command`","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":64,"author":{"gitId":"joosxi"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":65,"author":{"gitId":"joosxi"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":66,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"joosxi"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":68,"author":{"gitId":"joosxi"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":69,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"joosxi":69}},{"path":"docs/team/xiaoying1129.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiaoying1129"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"xiaoying1129"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"xiaoying1129"},"content":"title: Xiaoying\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"xiaoying1129"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"xiaoying1129"},"content":"### Project: Watson, The Teacher\u0027s Companion","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"xiaoying1129"},"content":"Watson is a desktop database application that","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"xiaoying1129"},"content":"reduces the administrative workload of teachers greatly.","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"xiaoying1129"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"xiaoying1129"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"xiaoying1129"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"xiaoying1129"},"content":"* **New Feature**: Added the ability to sort students by grade","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"xiaoying1129"},"content":"    * What it does: allows teachers to sort students by grade in ascending or descending order","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"xiaoying1129"},"content":"    * Justification: This feature allows the teacher to see the students who are performing well and those who need help at a glance","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"xiaoying1129"},"content":"* **New Feature**: Added the ability to add remarks to student","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"xiaoying1129"},"content":"    * What it does: allows teachers to add personalized remark for each student","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"xiaoying1129"},"content":"    * Justification: This feature allows the teacher to add remarks to students which can be used as a quick memo or help to remind the teacher of certain information about the student","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"xiaoying1129"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dxiaoying1129\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"xiaoying1129"},"content":"  * `Pull Requests`:","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"xiaoying1129"},"content":"    * [#32]: Added a skeletal Personal Portfolio Page","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"xiaoying1129"},"content":"    * [#36]: Update add, list and edit in User Guide","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"xiaoying1129"},"content":"    * [#56]: Add find by subject, personality, class","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"xiaoying1129"},"content":"    * [#81]: Update Developer Guide for sort and add assertions","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"xiaoying1129"},"content":"    * [#87]: Add sort command","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"xiaoying1129"},"content":"    * [#90]: Add remark command","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"xiaoying1129"},"content":"    * [#101]: Update Developer Guide and User Guide for find, sort and remark command","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"xiaoying1129"},"content":"    * [#191]: Fix User Guide issues from PE dry run","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"xiaoying1129"},"content":"* **Project management**:","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"xiaoying1129"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"xiaoying1129"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"xiaoying1129"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"xiaoying1129"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"xiaoying1129"},"content":"    * User Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"xiaoying1129"},"content":"        * Added documentation for find, sort and remark command [#101]","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"xiaoying1129"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"xiaoying1129"},"content":"        * Added documentation for find, sort and remark command [#101]","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"xiaoying1129"},"content":"* **Community**:","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"xiaoying1129"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"xiaoying1129"},"content":"* **Tools**:","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"xiaoying1129"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"xiaoying1129":52}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":" * Changes the remarks of an existing student in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"            + \": Edits the remarks of the student identified \"","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"            + \"Existing remarks will be overwritten by the input.\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"Hoodineee"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"e1010101"},"content":"Now let’s move on to writing a parser that will extract the index and remarks from the input provided by the user.","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"e1010101"},"content":"Create a `RemarkCommandParser` class in the `seedu.watson.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"Hoodineee"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of student data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the student’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a student.","lastModifiedDate":"2022-10-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Hoodineee"},"content":"Create a new `Remark` in `seedu.watson.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"Hoodineee"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each student.","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Hoodineee"},"content":"Simply add the following to [`seedu.watson.ui.StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"Hoodineee"},"content":"public PersonCard(Person student, int displayedIndex) {","lastModifiedDate":"2022-10-28"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"Hoodineee"},"content":"    remark.setText(student.getRemark().value);","lastModifiedDate":"2022-10-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"Hoodineee"},"content":"        Person studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":347,"author":{"gitId":"Hoodineee"},"content":"        Person editedStudent \u003d new Person(","lastModifiedDate":"2022-10-28"},{"lineNumber":348,"author":{"gitId":"Hoodineee"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2022-10-28"},{"lineNumber":349,"author":{"gitId":"Hoodineee"},"content":"                studentToEdit.getAddress(), remark, studentToEdit.getTags());","lastModifiedDate":"2022-10-28"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"Hoodineee"},"content":"        model.setPerson(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"Hoodineee"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-28"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"Hoodineee"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-28"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"Hoodineee"},"content":"    private String generateSuccessMessage(Person studentToEdit) {","lastModifiedDate":"2022-10-28"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"Hoodineee"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2022-10-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"e1010101":6,"Hoodineee":20,"-":375}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"The `address` field in `Person` is actually an instance of the `seedu.watson.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"  \"students\": [ {","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Hoodineee":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.watson.logic.Logic`.","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"A quick look at the `seedu.watson.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Hoodineee"},"content":"       Person studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"Hoodineee"},"content":"       Person editedStudent \u003d createEditedPerson(studentToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"Hoodineee"},"content":"       if (!studentToEdit.isSamePerson(editedStudent) \u0026\u0026 model.hasPerson(editedStudent)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"Hoodineee"},"content":"       model.setPerson(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Hoodineee"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedStudent));","lastModifiedDate":"2022-10-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"Hoodineee"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the student data.","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"Hoodineee"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ students.\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"Hoodineee"},"content":"     FYI, The \u0027filtered list\u0027 is the list of students resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the students so that the user can see the edited student along with all other students. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"Hoodineee"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of students is being tracked.","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"Hoodineee"},"content":"        students.addAll(","lastModifiedDate":"2022-10-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"e1010101":2,"Hoodineee":10,"-":289}},{"path":"src/main/java/seedu/watson/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.FileUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        return configPath;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        return configPath.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"e1010101":16,"-":48}},{"path":"src/main/java/seedu/watson/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"e1010101":2,"-":24}},{"path":"src/main/java/seedu/watson/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Config;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Version;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.Logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.LogicManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.DatabaseStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.JsonDatabaseStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.Storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.StorageManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"import seedu.watson.ui.Ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"import seedu.watson.ui.UiManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Database ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        DatabaseStorage databaseStorage \u003d new JsonDatabaseStorage(userPrefs.getDatabaseFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        logger.info(\"Starting Database \" + MainApp.VERSION);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"    public void stop() {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"            storage.saveDatabase(model.getDatabase());","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s watson book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"     * The data from the sample watson book will be used instead if {@code storage}\u0027s watson book is not found,","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"     * or an empty watson book will be used instead if errors occur when reading {@code storage}\u0027s watson book.","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"        Optional\u003cReadOnlyDatabase\u003e addressBookOptional;","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"        ReadOnlyDatabase initialData;","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"            addressBookOptional \u003d storage.readDatabase();","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Database\");","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Database\");","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"            initialData \u003d new Database();","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Database\");","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"            initialData \u003d new Database();","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                           + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                           + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"e1010101"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Database\");","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":56,"-":128}},{"path":"src/main/java/seedu/watson/auth/AuthHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.auth;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" *","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"public class AuthHandler {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"    // HOW IT WORKS","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    // 1) Users will be given a hardcoded username/password","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    // 2) When the user logs in, the app will check its credentials against the hardcoded ones","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    // 3) If the credentials are correct, the app will allow the user to access the app","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    public AuthHandler() {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"     * Checks if the given username and password are correct.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * @param username The username to check.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     * @param password The password to check.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     * @return True if the username and password are correct, false otherwise.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public static boolean checkCredentials(String username, String password) {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        return username.equals(Credentials.getDebugUsername())","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"               \u0026\u0026 password.equals(Credentials.getDebugPassword());","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"e1010101":26}},{"path":"src/main/java/seedu/watson/auth/Credentials.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.auth;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * Contains default logins.","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"public class Credentials {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"    private static final String DEBUG_USERNAME \u003d \"admin\";","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    private static final String DEBUG_PASSWORD \u003d \"admin\";","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    public static String getDebugUsername() {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"        return DEBUG_USERNAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public static String getDebugPassword() {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        return DEBUG_PASSWORD;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"e1010101":18}},{"path":"src/main/java/seedu/watson/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"               \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":6,"-":57}},{"path":"src/main/java/seedu/watson/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"               \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"               \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":6,"-":73}},{"path":"src/main/java/seedu/watson/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"              .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":3,"-":110}},{"path":"src/main/java/seedu/watson/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":1,"Hoodineee":1,"-":11}},{"path":"src/main/java/seedu/watson/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                           Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                           Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                           versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    public int getMajor() {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        return major;","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"    public int getMinor() {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        return minor;","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"    public int getPatch() {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"        return patch;","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        return isEarlyAccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"    @JsonValue","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":28,"-":89}},{"path":"src/main/java/seedu/watson/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.core.index;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    public int getZeroBased() {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    public int getOneBased() {","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"               || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                   \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"e1010101":10,"-":44}},{"path":"src/main/java/seedu/watson/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":1,"-":10}},{"path":"src/main/java/seedu/watson/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause   of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":1,"-":20}},{"path":"src/main/java/seedu/watson/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.MainApp;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e1010101":2,"-":40}},{"path":"src/main/java/seedu/watson/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":4,"-":33}},{"path":"src/main/java/seedu/watson/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Config;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e1010101":3,"-":20}},{"path":"src/main/java/seedu/watson/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * @author {e1010101}-reused","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" *          Utility class containing DateTime related methods","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class DateUtil {","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private static final DateTimeFormatter parseFormatter \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"        new DateTimeFormatterBuilder().appendPattern(\"[dd-MM-yyyy HH:mm]\")","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"                                      .appendPattern(\"[dd/MM/yyyy HH:mm]\")","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"                                      .appendPattern(\"[dd-MM-yyyy h:mm a]\")","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"                                      .appendPattern(\"[dd MMM yyyy HH:mm]\")","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"                                      .toFormatter();","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     * Checks if a given String can be parsed into a DateTime object","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     * @param test the String to be checked","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     * @return true if the String can be parsed into a DateTime object, otherwise false","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    public static boolean isValidDateString(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(test, parseFormatter);","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"            return isDateValid(dateTime);","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"            return false;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    private static boolean isDateValid(LocalDateTime dateTime) {","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        return !dateTime.isBefore(LocalDateTime.now());","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"e1010101":37}},{"path":"src/main/java/seedu/watson/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":3,"-":82}},{"path":"src/main/java/seedu/watson/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    private static ObjectMapper objectMapper \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"                          .configure(","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"                              SerializationFeature.WRITE_DATES_AS_TIMESTAMPS,","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"                              false)","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"                          .configure(","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"                              DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES,","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"                              false)","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"                          .setVisibility(PropertyAccessor.ALL,","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"                                         JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"                          .setVisibility(PropertyAccessor.FIELD,","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"                                         JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                          .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"                                              .addSerializer(Level.class,","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"                                                             new ToStringSerializer())","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"                                              .addDeserializer(Level.class,","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"                                                               new LevelDeserializer(","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"                                                                   Level.class)));","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":24,"-":131}},{"path":"src/main/java/seedu/watson/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                     .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":4,"-":66}},{"path":"src/main/java/seedu/watson/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.Storage;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     * Hacks","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    Model getModel();","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"     * Hacks","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    Storage getStorage();","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     * Returns the Database.","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     * @see seedu.watson.model.Model#getDatabase()","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    ReadOnlyDatabase getAddressBook();","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"    ObservableList\u003cStudent\u003e getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     * Returns the user prefs\u0027 watson book file path.","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"e1010101":26,"Hoodineee":2,"-":37}},{"path":"src/main/java/seedu/watson/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.DatabaseParser;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.Storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    private final DatabaseParser databaseParser;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        databaseParser \u003d new DatabaseParser();","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        Command command \u003d databaseParser.parseCommand(commandText);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"            storage.saveDatabase(model.getDatabase());","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"     * Hacks","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     * @return the model","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    public Model getModel() {","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        return model;","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"     * Hacks","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"     * @return the storage","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"    public Storage getStorage() {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        return storage;","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"    public ReadOnlyDatabase getAddressBook() {","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        return model.getDatabase();","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"    public ObservableList\u003cStudent\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"e1010101":33,"Hoodineee":2,"-":62}},{"path":"src/main/java/seedu/watson/logic/algorithm/PredictionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.algorithm;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Attendance;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.Grades;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Utility class to handle grade prediction algorithm","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class PredictionUtil {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private static final double MAXIMUM_SCORE_POSSIBLE \u003d 100.0;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    // TEST COMMAND: predict n/Alice Pauline s/english","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * \"Predicts\" a student\u0027s grade for a subject based on the grades they have received so far.","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     * The prediction algorithm works off a few parameters.","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     * 1) Assessment difficulty is based at 1.0. The higher the assessment difficulty,","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     * the higher the weightage the student\u0027s score will have to calculate the predicted","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     * grade.","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     * @param grades the Grade object with which to predict with","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     * @param attendance the Attendance object with which to predict with","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     * @return the predicted grade as a double representing the percentage","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    public static double predictGrade(Grades grades, Attendance attendance, double assessmentDifficulty) {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        // v5.0: use attendance to factor in amount of learning completed","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        double[] rawPercents \u003d grades.getRawPercentages();","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        double[] difficulties \u003d grades.getDifficulties();","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        double[] normalizedScores \u003d new double[rawPercents.length];","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        for (int i \u003d 0; i \u003c rawPercents.length; i++) {","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"            double learningRating \u003d getAttendanceBonus(attendance);","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"            normalizedScores[i] \u003d (rawPercents[i] * 100)","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"                + getDifficultyBonus(difficulties[i], learningRating);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        double finalScore \u003d Arrays.stream(normalizedScores).sum() / normalizedScores.length","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"            + getDifficultyPenalty(assessmentDifficulty);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        // score cannot be more than 100%","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        return Math.min(MAXIMUM_SCORE_POSSIBLE, finalScore);","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    private static double getDifficultyPenalty(double difficulty) {","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"        return difficulty * -1.25;","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    private static double getDifficultyBonus(double difficulty, double learningRating) {","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        // exponential model","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        if (difficulty \u003c\u003d 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"            return 5; // paper is too easy -\u003e extra 5 marks","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        return Math.pow((1 / difficulty), learningRating);","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    private static double getAttendanceBonus(Attendance attendance) {","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        double totalAttendance \u003d Arrays.stream(attendance.getAttendanceDetails()).sum();","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        int totalClasses \u003d attendance.getAttendanceDetails().length;","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        double attendancePercentage \u003d totalAttendance / totalClasses;","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        double bonus \u003d 2;","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        // arbitrary bonuses at the moment","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"        if (attendancePercentage \u003c\u003d 0.5) {","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"            bonus +\u003d 0.65;","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        } else if (attendancePercentage \u003c\u003d 0.75) {","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"            bonus +\u003d 0.75;","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        } else if (attendancePercentage \u003c\u003d 0.9) {","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"            bonus +\u003d 0.85;","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"            bonus +\u003d 0.95;","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        return bonus;","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"e1010101":70,"Hoodineee":2}},{"path":"src/main/java/seedu/watson/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_STUDENTCLASS;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":" * Adds a student to the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the watson book. \"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                                               + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                                               + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                                               + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                                               + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                                               + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"                                               + PREFIX_STUDENTCLASS + \"STUDENTCLASS \"","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"                                               + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"                                               + \"[\" + PREFIX_REMARK + \"REMARK]...\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                                               + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                                               + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                                               + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                                               + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                                               + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"                                               + PREFIX_STUDENTCLASS + \"1A \" // New fields","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"                                               + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"                                               + PREFIX_REMARK + \"likes to eat ice cream \";","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This student already exists in the watson book\";","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"    private final Student toAdd;","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"        toAdd \u003d student;","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        return this.toAdd.toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":21,"Hoodineee":10,"-":46}},{"path":"src/main/java/seedu/watson/logic/commands/AttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * Marks the attendance of persons in address book with studentClass and indexNumber corresponding to the","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" * user\u0027s arguments.","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"public class AttendanceCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    // test command: markAtt d/31/10/2022 c/1.2 ind/1 2","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"markAtt\";","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks attendance of all students in the \"","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"                                               + \"specified class with index numbers matching the user input\\n\"","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"                                               + \"Parameters: d/DATE (DD/MM/YYYY) \"","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"                                               + \"c/CLASS (only one class should be entered)\"","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"                                               + \"ind/INDEX_NUMBERS (index numbers of students, separated by spaces)\\n\"","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"                                               + \"Example: \" + COMMAND_WORD + \" d/26/10/2022 c/1A ind/1 5 8 10\\n\"","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"                                               + \"Example: \" + COMMAND_WORD + \" d/05/08/2022 c/1B ind/4 7 9 10\";","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_MARK_ATTENDANCE_SUCCESS \u003d \"Attendance for the specified\"","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        + \" students has been marked!\";","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_MARK_ATTENDANCE_NONE \u003d \"No student\u0027s attendance has been marked.\";","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    private final String date;","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    private final String studentClass;","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    private final List\u003cInteger\u003e indexNumbers;","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     * Creates a AttendanceCommand to mark the attendance of persons with studentClass and indexNumbers","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     * matching the arguments.","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"     * @param date The date to mark attendance.","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     * @param studentClass The class that the student(s) belong to.","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     * @param indexNumbers The list of index numbers of students to mark attendance for.","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    public AttendanceCommand(String date, String studentClass, List\u003cString\u003e indexNumbers) {","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        this.studentClass \u003d studentClass;","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        List\u003cInteger\u003e ls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        String[] split \u003d indexNumbers.get(0).split(\" \");","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        for (String s : split) {","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"            ls.add(Integer.parseInt(s));","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        this.indexNumbers \u003d ls;","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-31"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        StringBuilder markedAttendance \u003d new StringBuilder();","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"        int curIdx \u003d 1;","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"        List\u003cStudent\u003e latestList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        boolean anyStudentsAttendanceMarked \u003d !latestList.isEmpty();","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        for (Student student : latestList) {","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"            if (student.getStudentClass().toString().equals(studentClass)) {","lastModifiedDate":"2022-10-31"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"                if (indexNumbers.contains(curIdx)) {","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"                    student.getAttendance().updateAttendance(date + \" 1\");","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"                    markedAttendance.append(\"- \")","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"                        .append(student.getName().toString())","lastModifiedDate":"2022-10-31"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"                        .append(\": Present\")","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2022-10-31"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"                } else {","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"                    student.getAttendance().updateAttendance(date + \" 0\");","lastModifiedDate":"2022-10-31"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"                    markedAttendance.append(\"- \")","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"                        .append(student.getName().toString())","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"                        .append(\": Absent\")","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"                }","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"                model.setPerson(student, student);","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"            curIdx++;","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"        return (anyStudentsAttendanceMarked)","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"               ? new CommandResult(MESSAGE_MARK_ATTENDANCE_SUCCESS","lastModifiedDate":"2022-10-31"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"            + \"\\n\" + markedAttendance.toString().trim())","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"               : new CommandResult(MESSAGE_MARK_ATTENDANCE_NONE);","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"e1010101":102}},{"path":"src/main/java/seedu/watson/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Clears the watson book.","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        model.setAddressBook(new Database());","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":5,"-":17}},{"path":"src/main/java/seedu/watson/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     * For debugging purposes only.","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     * @return the command string representation.","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        return this.getClass().getSimpleName();","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":12,"-":17}},{"path":"src/main/java/seedu/watson/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     * The application should exit.","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * Prediction information should be shown to the user.","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    private final boolean showPrediction;","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    private final String gradePredicted;","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jgyj123"},"content":"    private final boolean showGradeWindow;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    private List\u003cStudent\u003e studentsToGrade;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"jgyj123"},"content":"    private String assessmentString;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"jgyj123"},"content":"        this(feedbackToUser, showHelp, exit, false, false, \"0.0\");","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jgyj123"},"content":"                         boolean showPrediction, boolean showGradeWindow, String gradePredicted) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        this.showPrediction \u003d showPrediction;","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        this.gradePredicted \u003d gradePredicted;","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jgyj123"},"content":"        this.showGradeWindow \u003d showGradeWindow;","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"jgyj123"},"content":"        this(feedbackToUser, false, false, false, false, \"0.0\");","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"jgyj123"},"content":"     * Constructs a {@code CommandResult} with specific fields","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"jgyj123"},"content":"    public CommandResult(String feedbackToUser, boolean showGradeWindow,","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"                         List\u003cStudent\u003e studentsToGrade, String assessmentString) {","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"jgyj123"},"content":"        this(feedbackToUser, false, false, false, true, \"0.0\");","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"jgyj123"},"content":"        this.studentsToGrade \u003d studentsToGrade;","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"jgyj123"},"content":"        this.assessmentString \u003d assessmentString;","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"    public boolean isShowPrediction() {","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        return showPrediction;","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"jgyj123"},"content":"    public boolean isShowGradeWindow() {","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"jgyj123"},"content":"        return showGradeWindow;","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"    public String getGradePredicted() {","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"        return gradePredicted;","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"    public List\u003cStudent\u003e getStudentsToGrade() {","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"jgyj123"},"content":"        return studentsToGrade;","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"jgyj123"},"content":"    public String getAssessmentString() {","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"jgyj123"},"content":"        return assessmentString;","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"               \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"               \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jgyj123":28,"e1010101":36,"Hoodineee":4,"-":60}},{"path":"src/main/java/seedu/watson/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":" * Deletes a student identified using it\u0027s displayed index from the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"                                               + \": Deletes the student identified by\"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"                                               + \" the index number used in the displayed student list.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                                               + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                                               + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"        model.deletePerson(studentToDelete);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete));","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"               || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                   \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":5,"Hoodineee":9,"-":40}},{"path":"src/main/java/seedu/watson/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_INDEX_NUMBERS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_STUDENTCLASS;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Attendance;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.StudentClass;","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.SubjectHandler;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":" * Edits the details of an existing student in the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"                                               + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                                               + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                                               + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                                               + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"joosxi"},"content":"                                               + \"[\" + PREFIX_INDEX_NUMBERS + \"INDEX NUMBER] \"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                                               + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                                               + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                                               + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"joosxi"},"content":"                                               + \"[\" + PREFIX_STUDENTCLASS + \"CLASS] \"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"joosxi"},"content":"                                               + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                                               + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                                               + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                                               + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                                               + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This student already exists in the watson book.\";","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"     * @param index                of the student in the filtered student list to edit","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"     * @param editPersonDescriptor details to edit the student with","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"    private static Student createEditedPerson(Student studentToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(studentToEdit.getPhone());","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"Hoodineee"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(studentToEdit.getAddress());","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"        StudentClass updatedStudentClass \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"            editPersonDescriptor.getStudentClass().orElse(studentToEdit.getStudentClass());","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"        Attendance updatedAttendance \u003d editPersonDescriptor.getAttendance().orElse(studentToEdit.getAttendance());","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"        SubjectHandler updatedSubjectHandler \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"                editPersonDescriptor.getSubjectHandler().orElse(studentToEdit.getSubjectHandler());","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"        Set\u003cRemark\u003e updatedRemarks \u003d editPersonDescriptor.getRemarks().orElse(studentToEdit.getRemarks());","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"        return new Student(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"joosxi"},"content":"                          updatedStudentClass, updatedAttendance, updatedRemarks, updatedSubjectHandler,","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"joosxi"},"content":"                          updatedTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Hoodineee"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"Hoodineee"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"Hoodineee"},"content":"        Student editedStudent \u003d createEditedPerson(studentToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"        if (!studentToEdit.isSamePerson(editedStudent) \u0026\u0026 model.hasPerson(editedStudent)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"Hoodineee"},"content":"        model.setPerson(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"Hoodineee"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedStudent));","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"               \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"Hoodineee"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"Hoodineee"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"e1010101"},"content":"        private StudentClass studentClass;","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"e1010101"},"content":"        private Attendance attendance;","lastModifiedDate":"2022-10-22"},{"lineNumber":152,"author":{"gitId":"e1010101"},"content":"        private Set\u003cRemark\u003e remarksList;","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"e1010101"},"content":"        private SubjectHandler subjectHandler;","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"e1010101"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"e1010101"},"content":"            setStudentClass(toCopy.studentClass);","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"e1010101"},"content":"            setAttendance(toCopy.attendance);","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"e1010101"},"content":"            setRemarks(toCopy.remarksList);","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"e1010101"},"content":"            setSubjectHandler(toCopy.subjectHandler);","lastModifiedDate":"2022-10-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"e1010101"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, studentClass,","lastModifiedDate":"2022-10-31"},{"lineNumber":181,"author":{"gitId":"joosxi"},"content":"                                               tags, remarksList, subjectHandler);","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"e1010101"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"e1010101"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"e1010101"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"e1010101"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"e1010101"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"e1010101"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"e1010101"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"e1010101"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"e1010101"},"content":"        public Optional\u003cStudentClass\u003e getStudentClass() {","lastModifiedDate":"2022-10-14"},{"lineNumber":217,"author":{"gitId":"e1010101"},"content":"            return Optional.ofNullable(studentClass);","lastModifiedDate":"2022-10-14"},{"lineNumber":218,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"e1010101"},"content":"        public void setStudentClass(StudentClass studentClass) {","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"e1010101"},"content":"            this.studentClass \u003d studentClass;","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"e1010101"},"content":"        public Optional\u003cAttendance\u003e getAttendance() {","lastModifiedDate":"2022-10-22"},{"lineNumber":225,"author":{"gitId":"e1010101"},"content":"            return Optional.ofNullable(attendance);","lastModifiedDate":"2022-10-22"},{"lineNumber":226,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":227,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":228,"author":{"gitId":"e1010101"},"content":"        public void setAttendance(Attendance attendance) {","lastModifiedDate":"2022-10-22"},{"lineNumber":229,"author":{"gitId":"e1010101"},"content":"            this.attendance \u003d attendance;","lastModifiedDate":"2022-10-22"},{"lineNumber":230,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":231,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":232,"author":{"gitId":"e1010101"},"content":"        public Optional\u003cSet\u003cRemark\u003e\u003e getRemarks() {","lastModifiedDate":"2022-10-14"},{"lineNumber":233,"author":{"gitId":"e1010101"},"content":"            return (remarksList !\u003d null) ? Optional.of(Collections.unmodifiableSet(remarksList)) : Optional.empty();","lastModifiedDate":"2022-10-14"},{"lineNumber":234,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":235,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":236,"author":{"gitId":"e1010101"},"content":"        public void setRemarks(Set\u003cRemark\u003e remarksList) {","lastModifiedDate":"2022-10-16"},{"lineNumber":237,"author":{"gitId":"e1010101"},"content":"            this.remarksList \u003d (remarksList !\u003d null) ? new HashSet\u003c\u003e(remarksList) : null;","lastModifiedDate":"2022-10-16"},{"lineNumber":238,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":239,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":240,"author":{"gitId":"Hoodineee"},"content":"        public Optional\u003cSubjectHandler\u003e getSubjectHandler() {","lastModifiedDate":"2022-10-25"},{"lineNumber":241,"author":{"gitId":"Hoodineee"},"content":"            return Optional.ofNullable(subjectHandler);","lastModifiedDate":"2022-10-25"},{"lineNumber":242,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":243,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":244,"author":{"gitId":"e1010101"},"content":"        /**","lastModifiedDate":"2022-10-18"},{"lineNumber":245,"author":{"gitId":"e1010101"},"content":"         * A SubjectHandler handles the addition of new subjects and the editing of current subjects.","lastModifiedDate":"2022-10-18"},{"lineNumber":246,"author":{"gitId":"Hoodineee"},"content":"         * When editing a Student, to edit the Student\u0027s subjects, a new SubjectHandler is created","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"e1010101"},"content":"         * with the old subjects and the new changes.","lastModifiedDate":"2022-10-18"},{"lineNumber":248,"author":{"gitId":"e1010101"},"content":"         *","lastModifiedDate":"2022-10-18"},{"lineNumber":249,"author":{"gitId":"e1010101"},"content":"         * @param subjectHandler the new SubjectHandler","lastModifiedDate":"2022-10-18"},{"lineNumber":250,"author":{"gitId":"e1010101"},"content":"         */","lastModifiedDate":"2022-10-18"},{"lineNumber":251,"author":{"gitId":"e1010101"},"content":"        public void setSubjectHandler(SubjectHandler subjectHandler) {","lastModifiedDate":"2022-10-14"},{"lineNumber":252,"author":{"gitId":"e1010101"},"content":"            this.subjectHandler \u003d subjectHandler;","lastModifiedDate":"2022-10-14"},{"lineNumber":253,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":254,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"e1010101"},"content":"        /**","lastModifiedDate":"2022-10-16"},{"lineNumber":265,"author":{"gitId":"e1010101"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-16"},{"lineNumber":266,"author":{"gitId":"e1010101"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-16"},{"lineNumber":267,"author":{"gitId":"e1010101"},"content":"         */","lastModifiedDate":"2022-10-16"},{"lineNumber":268,"author":{"gitId":"e1010101"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-16"},{"lineNumber":269,"author":{"gitId":"e1010101"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-16"},{"lineNumber":270,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":271,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                   \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                   \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                   \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                   \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"e1010101":86,"Hoodineee":53,"joosxi":8,"-":147}},{"path":"src/main/java/seedu/watson/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"e1010101":2,"-":17}},{"path":"src/main/java/seedu/watson/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.FindCommandPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" * Finds and lists all persons in watson book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * Parameters such as \"watson/\", \"phone/\", \"class/\" etc. can be added to further filter results.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons matching the specified criteria \"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"                                               + \"the specified keywords (case-insensitive) and displays them\"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"                                               + \" as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"                                               + \"Parameters: n/NAMES (OPTIONAL) \"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"                                               + \"c/CLASS (OPTIONAL) s/SUBJECT (OPTIONAL)\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"                                               + \"However, the command should not be blank.\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"                                               + \"Example: \" + COMMAND_WORD + \" n/alice bob charlie\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"                                               + \"Example: \" + COMMAND_WORD + \" n/alice bob charlie c/1A s/English\";","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    private final FindCommandPredicate predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"     * Creates a FindCommand to find the specified {@code Student} with a given {@code FindCommandPredicate}.","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     * @param predicate The predicate to filter the list of persons with.","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    public FindCommand(FindCommandPredicate predicate) {","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        // Defensive programming - enforcing compulsory associations","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"               || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"                   \u0026\u0026 this.predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"            String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"e1010101":58,"Hoodineee":2}},{"path":"src/main/java/seedu/watson/logic/commands/GradeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" * Lists all persons in the watson book to the user.","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":" * This starts a while loop that allows the use to input grades for each student,","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":" * for a specified Subject and assessment.","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"public class GradeCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"grade\";","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"            + \": Allows for editing of grades by subject and assessment.\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"            + \"SUBJECT_\"","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"            + \"assessmentName_\"","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"            + \"totalScore_\"","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"            + \"assessmentWeightage_\"","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"            + \"assessmentDifficulty\\n\"","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"jgyj123"},"content":"            + \"MATH_\"","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"jgyj123"},"content":"            + \"CA1_\"","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"            + \"100_\"","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"            + \"0.4_\"","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"            + \"2\";","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    public static final String NO_STUDENTS_TAKING_SUBJECT \u003d \"There are no students taking this subject.\";","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"jgyj123"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Updating Grades...\";","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"jgyj123"},"content":"    private final String subject;","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"jgyj123"},"content":"    private final String assessmentString;","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     * Creates a GradeCommand to edit the grades of the specified {@code Subject}","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"jgyj123"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"     * @param subject        the Subject to edit grades for","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"jgyj123"},"content":"     * @param assessmentString the name of the assessment to edit grades for","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"jgyj123"},"content":"    public GradeCommand(String subject, String assessmentString) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        this.subject \u003d subject.toUpperCase();","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"jgyj123"},"content":"        this.assessmentString \u003d assessmentString;","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        model.updateFilteredPersonList(person -\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"            person.getSubjectHandler().getSubjectsTaken().toString().contains(subject));","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"        List\u003cStudent\u003e studentList \u003d new ArrayList\u003c\u003e(model.getFilteredPersonList());","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"        if (studentList.isEmpty()) {","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"            return new CommandResult(String.format(NO_STUDENTS_TAKING_SUBJECT));","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"        return new CommandResult(MESSAGE_SUCCESS, true, studentList, assessmentString);","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jgyj123":16,"e1010101":34,"Hoodineee":20}},{"path":"src/main/java/seedu/watson/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                                               + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":2,"-":19}},{"path":"src/main/java/seedu/watson/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Lists all persons in the watson book to the user.","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":4,"-":19}},{"path":"src/main/java/seedu/watson/logic/commands/PredictionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_FUTURE_ASSESSMENT_DIFFICULTY;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.algorithm.PredictionUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Attendance;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.Subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":" * Gets the predicted score for a given student\u0027s next assessment for a subject","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":" * that they take.","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"public class PredictionCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"predict\";","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Predicts the next assessment score\"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        + \"that a chosen student might get for a given Subject.\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        + \"Parameters: \"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        + PREFIX_SUBJECT + \"SUBJECT \"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        + PREFIX_FUTURE_ASSESSMENT_DIFFICULTY + \"DIFFICULTY (Difficulty should lie between 0 and 5 (inclusive))\";","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    public static final String SHOWING_PREDICTION_MESSAGE \u003d \"Opened prediction window.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    public static final String STUDENT_NOT_FOUND_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        \"Student not found! Remember to use the student\u0027s full name!\";","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_FORMAT \u003d \"Grade prediction for %s for their next %s assessment is %.2f percent\";","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    private final Name name;","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    private final String subjectName;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    private final double difficulty;","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     * Creates a PredictionCommand to get the predicted score for a given student\u0027s next assessment","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    public PredictionCommand(Name name, String subjectName, double futureAssessmentDifficulty) {","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        this.subjectName \u003d subjectName;","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        this.difficulty \u003d futureAssessmentDifficulty;","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        Student target;","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"            target \u003d model.getStudentByName(name);","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"            throw new CommandException(STUDENT_NOT_FOUND_ERROR_MESSAGE);","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        Attendance attendance \u003d target.getAttendance();","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        Subject targetSubject \u003d null;","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"        for (Subject subj : target.getSubjectsTaken()) {","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"            if (subj.getSubjectName().equalsIgnoreCase(subjectName)) {","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"                targetSubject \u003d target.getSubjectHandler().getSubject(subjectName);","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        if (targetSubject \u003d\u003d null) {","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"            throw new CommandException(\"Student does not take this subject\");","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        double gradePredicted \u003d PredictionUtil.predictGrade(targetSubject.getGrades(), attendance, difficulty);","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"jgyj123"},"content":"        return new CommandResult(SHOWING_PREDICTION_MESSAGE, false, false, true, false,","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"            String.format(MESSAGE_FORMAT, name, targetSubject.subjectName, gradePredicted));","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jgyj123":1,"e1010101":68,"Hoodineee":4}},{"path":"src/main/java/seedu/watson/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"xiaoying1129"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"xiaoying1129"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"xiaoying1129"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"xiaoying1129"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"xiaoying1129"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"xiaoying1129"},"content":" * Adds a remark to a student.","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"xiaoying1129"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"xiaoying1129"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"xiaoying1129"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"xiaoying1129"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a remark for a student \"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"xiaoying1129"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"            + \"[REMARK] (must not be blank)\\n\"","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"xiaoying1129"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"xiaoying1129"},"content":"            + \"He participates often in class\";","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"xiaoying1129"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added remark for %s: %s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"xiaoying1129"},"content":"    private final Index index;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"xiaoying1129"},"content":"    private final Remark remark;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"xiaoying1129"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"xiaoying1129"},"content":"     * Creates a remark command.","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"xiaoying1129"},"content":"     * @param remark remark to add","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"xiaoying1129"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"xiaoying1129"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"xiaoying1129"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"xiaoying1129"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"xiaoying1129"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"xiaoying1129"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"xiaoying1129"},"content":"     * Adds a remark to a student.","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"     * @param studentToAddRemark student to add remark","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"xiaoying1129"},"content":"     * @param remark remark to add","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"xiaoying1129"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"    private static Student addRemark(Student studentToAddRemark, Remark remark) {","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"        assert studentToAddRemark !\u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"        Set\u003cRemark\u003e remarksList \u003d studentToAddRemark.getRemarks();","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"xiaoying1129"},"content":"        if (remarksList \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"xiaoying1129"},"content":"            remarksList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"xiaoying1129"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"xiaoying1129"},"content":"        remarksList.add(remark);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"        studentToAddRemark.setRemarks(remarksList);","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"        return studentToAddRemark;","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"xiaoying1129"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"xiaoying1129"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"xiaoying1129"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"xiaoying1129"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"xiaoying1129"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"xiaoying1129"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"Hoodineee"},"content":"        Student studentToAddRemark \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"        Student studentAddedRemark \u003d addRemark(studentToAddRemark, remark);","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"        model.setPerson(studentToAddRemark, studentAddedRemark);","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"xiaoying1129"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, studentAddedRemark.getName(), remark));","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"xiaoying1129"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"e1010101":8,"Hoodineee":15,"xiaoying1129":58}},{"path":"src/main/java/seedu/watson/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"xiaoying1129"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"xiaoying1129"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"xiaoying1129"},"content":" * Sorts all persons by grades.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"xiaoying1129"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"xiaoying1129"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"xiaoying1129"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"xiaoying1129"},"content":"    public static final String ASCENDING_ARGS \u003d \"ASC\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"xiaoying1129"},"content":"    public static final String DESCENDING_ARGS \u003d \"DESC\";","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"xiaoying1129"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"            + \": Sorts the student list based on grades of a certain subject in ascending or descending. \"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"            + \"Not Case Sensitive.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"            + \"Parameters: asc (for ascending) OR desc (for descending) \"","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"            + PREFIX_SUBJECT + \"[SUBJECT]\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"            + \"Example: \" + COMMAND_WORD + \" asc \" + PREFIX_SUBJECT + \"english\";","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"xiaoying1129"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted students by grades\";","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"xiaoying1129"},"content":"    private final boolean isInAscending;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    private final String subjectName;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"xiaoying1129"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"xiaoying1129"},"content":"     * Creates a sort command to sort by grade.","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"xiaoying1129"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"    public SortCommand(boolean isInAscending, String subjectName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"xiaoying1129"},"content":"        this.isInAscending \u003d isInAscending;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"        this.subjectName \u003d subjectName;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"xiaoying1129"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"xiaoying1129"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"xiaoying1129"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"xiaoying1129"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"xiaoying1129"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"xiaoying1129"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"xiaoying1129"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"xiaoying1129"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"xiaoying1129"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"        model.sortListByGrade(isInAscending, subjectName);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"xiaoying1129"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"xiaoying1129"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"e1010101":4,"Hoodineee":8,"xiaoying1129":33}},{"path":"src/main/java/seedu/watson/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"e1010101":2,"-":17}},{"path":"src/main/java/seedu/watson/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_STUDENTCLASS;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Attendance;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.StudentClass;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.Subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.SubjectHandler;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"                                       PREFIX_EMAIL, PREFIX_TAG, PREFIX_STUDENTCLASS, PREFIX_REMARK);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"                                PREFIX_EMAIL, PREFIX_STUDENTCLASS) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        // New fields","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        StudentClass studentClass \u003d ParserUtil.parseStudentClass(argMultimap.getValue(PREFIX_STUDENTCLASS).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        Attendance attendance \u003d new Attendance(); // Adding a student results in empty attendance initially","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"        Set\u003cRemark\u003e remarksList \u003d ParserUtil.parseRemarks(argMultimap.getAllValues(PREFIX_REMARK));","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"jgyj123"},"content":"        Set\u003cSubject\u003e subjectList \u003d new HashSet\u003cSubject\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"jgyj123"},"content":"        subjectList.add(new Subject(\"MATH\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"jgyj123"},"content":"        subjectList.add(new Subject(\"Science\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"        SubjectHandler subjectHandler \u003d new SubjectHandler(subjectList);","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"        Student student \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"            new Student(name, phone, email, address, studentClass, attendance, remarksList, subjectHandler,","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"                        tagList);","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"        return new AddCommand(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jgyj123":4,"e1010101":22,"Hoodineee":16,"-":31}},{"path":"src/main/java/seedu/watson/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     **/","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"        return argMultimap.toString();","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"e1010101":18,"-":58}},{"path":"src/main/java/seedu/watson/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                     .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                     .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                                 : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"e1010101"},"content":"        private int startPosition;","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"e1010101":3,"-":145}},{"path":"src/main/java/seedu/watson/logic/parser/AttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joosxi"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_INDEX_NUMBERS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_STUDENTCLASS;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"joosxi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.AttendanceCommand;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"joosxi"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"joosxi"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":" * Parses input arguments and creates a new AttendanceCommand object","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"joosxi"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"public class AttendanceCommandParser implements Parser\u003cAttendanceCommand\u003e {","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"joosxi"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     * Parses the given {@code String} of arguments in the context of the AttendanceCommand","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     * and returns AttendanceCommand object for execution.","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"joosxi"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"joosxi"},"content":"     * @param args Input arguments of the user.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     * @return A AttendanceCommand object.","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"joosxi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"joosxi"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    public AttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"joosxi"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"joosxi"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"joosxi"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"joosxi"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"joosxi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"joosxi"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_STUDENTCLASS, PREFIX_INDEX_NUMBERS);","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_STUDENTCLASS, PREFIX_INDEX_NUMBERS)","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"joosxi"},"content":"        String date \u003d argMultimap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"joosxi"},"content":"        String studentClass \u003d argMultimap.getValue(PREFIX_STUDENTCLASS).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"joosxi"},"content":"        List\u003cString\u003e indexNumbers \u003d argMultimap.getAllValues(PREFIX_INDEX_NUMBERS);","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"joosxi"},"content":"        if (date.isEmpty() || studentClass.isEmpty() || indexNumbers \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"joosxi"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"joosxi"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        return new AttendanceCommand(date, studentClass, indexNumbers);","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"joosxi"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"e1010101":16,"joosxi":38}},{"path":"src/main/java/seedu/watson/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    // New fields","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    public static final Prefix PREFIX_STUDENTCLASS \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"rem/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    public static final Prefix PREFIX_SUBJECT \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"joosxi"},"content":"    // Fields for marking attendance","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"joosxi"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"joosxi"},"content":"    public static final Prefix PREFIX_INDEX_NUMBERS \u003d new Prefix(\"ind/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    // For prediction","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    public static final Prefix PREFIX_FUTURE_ASSESSMENT_DIFFICULTY \u003d new Prefix(\"diff/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jgyj123":1,"e1010101":8,"Hoodineee":2,"joosxi":4,"-":13}},{"path":"src/main/java/seedu/watson/logic/parser/DatabaseParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.AttendanceCommand;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.FindCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.GradeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.ListCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.PredictionCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.SortCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"public class DatabaseParser {","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"jgyj123"},"content":"        case GradeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"jgyj123"},"content":"            return new GradeCommandParser().parse(arguments);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"        case PredictionCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"            return new PredictionCommandParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"        case AttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"            return new AttendanceCommandParser().parse(arguments);","lastModifiedDate":"2022-10-31"},{"lineNumber":84,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"xiaoying1129"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"xiaoying1129"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"xiaoying1129"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"xiaoying1129"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jgyj123":3,"e1010101":24,"joosxi":1,"xiaoying1129":6,"-":62}},{"path":"src/main/java/seedu/watson/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"e1010101":6,"-":24}},{"path":"src/main/java/seedu/watson/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_STUDENTCLASS;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"joosxi"},"content":"                                       PREFIX_ADDRESS, PREFIX_STUDENTCLASS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"joosxi"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"joosxi"},"content":"                argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"joosxi"},"content":"        if (argMultimap.getValue(PREFIX_STUDENTCLASS).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"joosxi"},"content":"            editPersonDescriptor.setStudentClass(ParserUtil.parseStudentClass(","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"joosxi"},"content":"                argMultimap.getValue(PREFIX_STUDENTCLASS).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"joosxi"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"joosxi"},"content":"        parseRemarksForEdit(argMultimap.getAllValues(PREFIX_REMARK))","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"joosxi"},"content":"            .ifPresent(editPersonDescriptor::setRemarks);","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"joosxi"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG))","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"joosxi"},"content":"            .ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"joosxi"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"joosxi"},"content":"     * Same implementation as parseTagsForEdit.","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"joosxi"},"content":"     * Method can be combined with parseTagsForEdit in the future if possible.","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"joosxi"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"joosxi"},"content":"    private Optional\u003cSet\u003cRemark\u003e\u003e parseRemarksForEdit(Collection\u003cString\u003e remarks) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"joosxi"},"content":"        assert remarks !\u003d null;","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"joosxi"},"content":"        if (remarks.isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"joosxi"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"joosxi"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"joosxi"},"content":"        Collection\u003cString\u003e remarkSet \u003d remarks.size() \u003d\u003d 1 \u0026\u0026 remarks.contains(\"\")","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"joosxi"},"content":"                                    ? Collections.emptySet()","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"joosxi"},"content":"                                    : remarks;","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"joosxi"},"content":"        return Optional.of(ParserUtil.parseRemarks(remarkSet));","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"e1010101":16,"Hoodineee":1,"joosxi":28,"-":67}},{"path":"src/main/java/seedu/watson/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_STUDENTCLASS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.FindCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.FindCommandPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        System.out.println(args);","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        ArrayList\u003cString\u003e findCommandKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENTCLASS, PREFIX_SUBJECT);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"            System.out.println(\"name\");","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"joosxi"},"content":"            String foundName \u003d String.join(\" \", argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"joosxi"},"content":"            findCommandKeywords.add(0, foundName.trim());","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"joosxi"},"content":"        } else {","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"joosxi"},"content":"            findCommandKeywords.add(0, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        if (argMultimap.getValue(PREFIX_STUDENTCLASS).isPresent()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"joosxi"},"content":"            String foundClass \u003d String.join(\" \", argMultimap.getAllValues(PREFIX_STUDENTCLASS));","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"joosxi"},"content":"            findCommandKeywords.add(1, foundClass.trim());","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"joosxi"},"content":"        } else {","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"joosxi"},"content":"            findCommandKeywords.add(1, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        if (argMultimap.getValue(PREFIX_SUBJECT).isPresent()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"joosxi"},"content":"            String foundSubjects \u003d String.join(\" \", argMultimap.getAllValues(PREFIX_SUBJECT));","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"joosxi"},"content":"            findCommandKeywords.add(2, foundSubjects.trim());","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"joosxi"},"content":"        } else {","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"joosxi"},"content":"            findCommandKeywords.add(2, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"joosxi"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        return new FindCommand(new FindCommandPredicate(findCommandKeywords));","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"e1010101":47,"Hoodineee":1,"joosxi":14}},{"path":"src/main/java/seedu/watson/logic/parser/GradeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.GradeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"import seedu.watson.model.student.subject.Assessment;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"public class GradeCommandParser implements Parser\u003cGradeCommand\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"jgyj123"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"jgyj123"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"    public GradeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"jgyj123"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        String[] parsedString \u003d trimmedArgs.split(\"_\");","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"        if (trimmedArgs.isEmpty() || parsedString.length !\u003d 5) {","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"jgyj123"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"jgyj123"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GradeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"jgyj123"},"content":"        } else if (!Assessment.getErrorMessage(args).equals(\"\")) {","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"jgyj123"},"content":"            throw new ParseException(","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"jgyj123"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, Assessment.getErrorMessage(args)));","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"jgyj123"},"content":"        String subject \u003d args.split(\"_\")[0].trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"jgyj123"},"content":"        return new GradeCommand(subject, args.trim());","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"jgyj123":29,"e1010101":4,"Hoodineee":2}},{"path":"src/main/java/seedu/watson/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"e1010101":4,"-":13}},{"path":"src/main/java/seedu/watson/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Attendance;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.StudentClass;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.Subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.SubjectHandler;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"     * Parses a {@code String watson} into an {@code Address}.","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"     * @throws ParseException if the given {@code watson} is invalid.","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"     * Parses a {@code string} into an {@code StudentClass}.","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"Hoodineee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"Hoodineee"},"content":"     * @throws ParseException if the given {@code clazz} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"    public static StudentClass parseStudentClass(String studentClass) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"        requireNonNull(studentClass);","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"        String trimmedStudentClass \u003d studentClass.trim();","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"        if (!StudentClass.isValidStudentClass(trimmedStudentClass)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"            throw new ParseException(StudentClass.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"        return new StudentClass(trimmedStudentClass);","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":120,"author":{"gitId":"e1010101"},"content":"     * Parses a {@code String} into an {@code Attendance}.","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-22"},{"lineNumber":122,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":123,"author":{"gitId":"e1010101"},"content":"    public static Attendance parseAttendance(String attendance) throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":124,"author":{"gitId":"e1010101"},"content":"        requireNonNull(attendance);","lastModifiedDate":"2022-10-22"},{"lineNumber":125,"author":{"gitId":"e1010101"},"content":"        return new Attendance(Attendance.parseAttendanceFromJson(attendance));","lastModifiedDate":"2022-10-22"},{"lineNumber":126,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":127,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":128,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"Hoodineee"},"content":"     * Parses a {@code String subjectHandler} into an {@code SubjectHandler}.","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"Hoodineee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"Hoodineee"},"content":"    public static SubjectHandler parseSubjectHandler(String subjectHandler) {","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(subjectHandler);","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"e1010101"},"content":"        String trimmedSubjectHandler \u003d subjectHandler.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"e1010101"},"content":"        return new SubjectHandler(trimmedSubjectHandler);","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"e1010101"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"Hoodineee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"e1010101"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"e1010101"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"e1010101"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"e1010101"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"e1010101"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"e1010101"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"e1010101"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"e1010101"},"content":"     * Parses {@code Collection\u003cString\u003e remarks} into a {@code Set\u003cRemark\u003e}.","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"e1010101"},"content":"    public static Set\u003cRemark\u003e parseRemarks(Collection\u003cString\u003e remarks) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"e1010101"},"content":"        requireNonNull(remarks);","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"e1010101"},"content":"        final Set\u003cRemark\u003e remarkSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":159,"author":{"gitId":"e1010101"},"content":"        for (String remark : remarks) {","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"e1010101"},"content":"            remarkSet.add(parseRemark(remark));","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"e1010101"},"content":"        return remarkSet;","lastModifiedDate":"2022-10-14"},{"lineNumber":163,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"e1010101"},"content":"     * Parses {@code Collection\u003cString\u003e remarks} into a {@code Set\u003cRemark\u003e}.","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"e1010101"},"content":"    public static Set\u003cSubject\u003e parseSubjects(Collection\u003cString\u003e subjects) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"e1010101"},"content":"        requireNonNull(subjects);","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"e1010101"},"content":"        final Set\u003cSubject\u003e subjectSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"e1010101"},"content":"        for (String subject : subjects) {","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"e1010101"},"content":"            subjectSet.add(parseSubject(subject));","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"e1010101"},"content":"        return subjectSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"Hoodineee"},"content":"     * Parses a {@code String subject} into an {@code Subject}.","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"Hoodineee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"Hoodineee"},"content":"     * @throws ParseException if the given {@code subject} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"Hoodineee"},"content":"    public static Subject parseSubject(String subject) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(subject);","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"Hoodineee"},"content":"        String trimmedSubject \u003d subject.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"jgyj123"},"content":"        if (!Subject.isValidSubject(trimmedSubject)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"Hoodineee"},"content":"            throw new ParseException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"Hoodineee"},"content":"        return new Subject(trimmedSubject);","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"e1010101"},"content":"     * Parses a {@code String} into a {@code double}.","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"e1010101"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"e1010101"},"content":"     * @throws NumberFormatException if the given {@code String} is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"e1010101"},"content":"    public static double parseFutureAssessmentDifficulty(String difficulty)","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"e1010101"},"content":"            throws NumberFormatException {","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"e1010101"},"content":"        requireNonNull(difficulty);","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"e1010101"},"content":"        String trimmedSubject \u003d difficulty.trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"e1010101"},"content":"        double parsedDifficulty \u003d Double.parseDouble(trimmedSubject);","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"e1010101"},"content":"        // Difficulty must be between 0 and 5 (inclusive)","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"e1010101"},"content":"        if (parsedDifficulty \u003c 0 || parsedDifficulty \u003e 5) {","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"e1010101"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"e1010101"},"content":"        return parsedDifficulty;","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jgyj123":2,"e1010101":76,"Hoodineee":45,"-":113}},{"path":"src/main/java/seedu/watson/logic/parser/PredictionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_FUTURE_ASSESSMENT_DIFFICULTY;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.PredictionCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.Subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":" * Parses input arguments and creates a new PredictionCommand object","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"public class PredictionCommandParser implements Parser\u003cPredictionCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    public PredictionCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_SUBJECT,","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"                PREFIX_FUTURE_ASSESSMENT_DIFFICULTY);","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_SUBJECT,","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"            PREFIX_FUTURE_ASSESSMENT_DIFFICULTY)","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PredictionCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        Subject subject \u003d ParserUtil.parseSubject(argMultimap.getValue(PREFIX_SUBJECT).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        double difficulty \u003d ParserUtil.parseFutureAssessmentDifficulty(argMultimap.getValue(","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"            PREFIX_FUTURE_ASSESSMENT_DIFFICULTY).get());","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        return new PredictionCommand(name, subject.getSubjectName(), difficulty);","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"e1010101":36,"Hoodineee":2}},{"path":"src/main/java/seedu/watson/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        return getPrefix();","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"e1010101":5,"-":34}},{"path":"src/main/java/seedu/watson/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"xiaoying1129"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"xiaoying1129"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"xiaoying1129"},"content":" * Parses input arguments and creates a new RemarkCommand object","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"xiaoying1129"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"xiaoying1129"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"xiaoying1129"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"xiaoying1129"},"content":"     * Parses the given {@code String} of arguments in the context of the RemarkCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"xiaoying1129"},"content":"     * and returns a RemarkCommand object for execution.","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"xiaoying1129"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"xiaoying1129"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"xiaoying1129"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"xiaoying1129"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"xiaoying1129"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"xiaoying1129"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        if (trimmedArgs.isEmpty() || trimmedArgs.split(\"\\\\s+\").length \u003c 2) {","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"xiaoying1129"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"xiaoying1129"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"xiaoying1129"},"content":"        String[] remarkKeywords \u003d trimmedArgs.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"xiaoying1129"},"content":"        Index index \u003d ParserUtil.parseIndex(remarkKeywords[0]);","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"xiaoying1129"},"content":"        Remark remark \u003d ParserUtil.parseRemark(remarkKeywords[1]);","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"xiaoying1129"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"xiaoying1129"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"e1010101":7,"Hoodineee":1,"xiaoying1129":27}},{"path":"src/main/java/seedu/watson/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import java.util.Locale;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.SortCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"xiaoying1129"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"xiaoying1129"},"content":" * Parses input argument and creates a new SortCommand object","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"xiaoying1129"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"xiaoying1129"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"xiaoying1129"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"xiaoying1129"},"content":"    public SortCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"        if (!userInput.contains(PREFIX_SUBJECT.toString())) {","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"        String userInputTrimmed \u003d userInput.trim();","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"        String[] split \u003d userInputTrimmed.split(PREFIX_SUBJECT.getPrefix());","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        String subjectName \u003d split[1].trim().toUpperCase(Locale.ROOT);","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"        String userRequest \u003d split[0].trim().toUpperCase(Locale.ROOT);","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"        if (userRequest.equals(SortCommand.ASCENDING_ARGS)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"            return new SortCommand(true, subjectName);","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"        } else if (userRequest.equals(SortCommand.DESCENDING_ARGS)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"            return new SortCommand(false, subjectName);","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"xiaoying1129"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"xiaoying1129"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"xiaoying1129"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"xiaoying1129"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"xiaoying1129"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"e1010101":4,"Hoodineee":14,"xiaoying1129":15}},{"path":"src/main/java/seedu/watson/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"e1010101":2,"-":15}},{"path":"src/main/java/seedu/watson/model/Database.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.UniquePersonList;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * Wraps all data at the database level","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"public class Database implements ReadOnlyDatabase {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    private final UniquePersonList persons \u003d new UniquePersonList();","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public Database() {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     * Creates a Database using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    public Database(ReadOnlyDatabase toBeCopied) {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    public void setPersons(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        this.persons.setPersons(students);","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"     * Resets the existing data of this {@code Database} with {@code newData}.","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    public void resetData(ReadOnlyDatabase newData) {","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"    //// student-level operations","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the database.","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"    public boolean hasPerson(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"        return persons.contains(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"     * Adds a student to the database.","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"     * The student must not already exist in the database.","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"    public void addPerson(Student p) {","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"     * {@code target} must exist in the database.","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the database.","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"    public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"        persons.setPerson(target, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"     * Removes {@code key} from this {@code Database}.","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"     * {@code key} must exist in the database.","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"    public void removePerson(Student key) {","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"xiaoying1129"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"xiaoying1129"},"content":"     * Sorts the list of students by grades.","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"xiaoying1129"},"content":"     * @param isInAscending sorts by ascending if true, descending otherwise","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"xiaoying1129"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"    public void sortByGrade(boolean isInAscending, String subjectName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"        persons.sortByGrade(isInAscending, subjectName);","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"    public ObservableList\u003cStudent\u003e getPersonList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"        return persons.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"               || (other instanceof Database // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"                   \u0026\u0026 persons.equals(((Database) other).persons));","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":21,"Hoodineee":23,"xiaoying1129":6,"-":68}},{"path":"src/main/java/seedu/watson/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    public Predicate\u003cStudent\u003e createPersonIsInClassPredicate(String studentClass);","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     * Returns the user prefs\u0027 watson book file path.","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     * Sets the user prefs\u0027 watson book file path.","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"     * Returns the Database","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    ReadOnlyDatabase getDatabase();","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"     * Replaces watson book data with the data in {@code addressBook}.","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"    void setAddressBook(ReadOnlyDatabase addressBook);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"    boolean hasPerson(Student student);","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"    Student getStudentByName(Name name);","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"     * Deletes the given student.","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"     * The student must exist in the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"    void deletePerson(Student target);","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"     * Adds the given student.","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"     * {@code student} must not already exist in the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"    void addPerson(Student student);","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"     * {@code target} must exist in the watson book.","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"     * in the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"    void setPerson(Student target, Student editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"     * Returns an unmodifiable view of the filtered student list","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"    ObservableList\u003cStudent\u003e getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"    void updateFilteredPersonList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"xiaoying1129"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"xiaoying1129"},"content":"     * Sorts the list of students by grade","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"xiaoying1129"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"    void sortListByGrade(boolean isInAscending, String subjectName);","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"e1010101":23,"Hoodineee":21,"joosxi":1,"xiaoying1129":4,"-":56}},{"path":"src/main/java/seedu/watson/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":" * Represents the in-memory model of the watson book data.","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    private final Database database;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     * Initializes a ModelManager with the given database and userPrefs.","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    public ModelManager(ReadOnlyDatabase addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        logger.fine(\"Initializing with watson book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        this.database \u003d new Database(addressBook);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.database.getPersonList());","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        this(new Database(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"        return userPrefs.getDatabaseFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        userPrefs.setDatabaseFilePath(addressBookFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Database \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"    public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        return database;","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"    public void setAddressBook(ReadOnlyDatabase database) {","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"        this.database.resetData(database);","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"    public boolean hasPerson(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"        return database.hasPerson(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"    public Student getStudentByName(Name name) {","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"Hoodineee"},"content":"        ObservableList\u003cStudent\u003e studentList \u003d database.getPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"Hoodineee"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"            if (student.getName().equals(name)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"                return student;","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"        throw new NoSuchElementException();","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"Hoodineee"},"content":"    public void deletePerson(Student target) {","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"        database.removePerson(target);","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"Hoodineee"},"content":"    public void addPerson(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"Hoodineee"},"content":"        database.addPerson(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"Hoodineee"},"content":"    public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"Hoodineee"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"Hoodineee"},"content":"        database.setPerson(target, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"Hoodineee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"Hoodineee"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"Hoodineee"},"content":"    public ObservableList\u003cStudent\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"Hoodineee"},"content":"        return filteredStudents;","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"Hoodineee"},"content":"    public void updateFilteredPersonList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"Hoodineee"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"xiaoying1129"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"xiaoying1129"},"content":"     * sorts the student list by grade","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"xiaoying1129"},"content":"     * @param isInAscending if true the list is set to ascending order, else descending","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"xiaoying1129"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"xiaoying1129"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"Hoodineee"},"content":"    public void sortListByGrade(boolean isInAscending, String subjectName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"Hoodineee"},"content":"        this.database.sortByGrade(isInAscending, subjectName);","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"joosxi"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"Hoodineee"},"content":"    public Predicate\u003cStudent\u003e createPersonIsInClassPredicate(String studentClass) {","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"joosxi"},"content":"        return person -\u003e person.getStudentClass().isSameClass(studentClass);","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"e1010101"},"content":"        return database.equals(other.database)","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"               \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"Hoodineee"},"content":"               \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":34,"Hoodineee":27,"joosxi":4,"xiaoying1129":7,"-":106}},{"path":"src/main/java/seedu/watson/model/ReadOnlyDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * Unmodifiable view of a database","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public interface ReadOnlyDatabase {","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"    ObservableList\u003cStudent\u003e getPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":3,"Hoodineee":2,"-":12}},{"path":"src/main/java/seedu/watson/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"e1010101":3,"-":13}},{"path":"src/main/java/seedu/watson/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    private Path databaseFilePath \u003d Paths.get(\"data\", \"addressbook.json\");","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public UserPrefs() {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        setDatabaseFilePath(newUserPrefs.getDatabaseFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        return databaseFilePath;","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    public void setDatabaseFilePath(Path databaseFilePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        requireNonNull(databaseFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        this.databaseFilePath \u003d databaseFilePath;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        return Objects.hash(guiSettings, databaseFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"               \u0026\u0026 databaseFilePath.equals(o.databaseFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        sb.append(\"\\nLocal data file location : \" + databaseFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":16,"-":72}},{"path":"src/main/java/seedu/watson/model/student/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":" * Represents a Student\u0027s watson in the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"     * The first character of the watson must not be a whitespace,","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     * @param address A valid watson.","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"               || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                   \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        return value;","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":7,"Hoodineee":2,"-":48}},{"path":"src/main/java/seedu/watson/model/student/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.DateUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":" * Represents the attendance of the student","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"public class Attendance {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"        \"Attendance should only contain a date followed by a \\\"1\\\" or a \\\"0\\\", and should not be in the past!\";","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    private static final Pattern FORMAT \u003d Pattern.compile(\"date/(?\u003cdate\u003e.+) attendance/(?\u003cattendance\u003e[01])\");","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    private final HashMap\u003cString, Integer\u003e personAttendance;","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     * Constructs an {@code Attendance} object.","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    public Attendance() {","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        this(new HashMap\u003c\u003e());","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     * Constructs an {@code Attendance} object with a given date/value HashMap.","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    public Attendance(HashMap\u003cString, Integer\u003e hashMap) {","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        personAttendance \u003d hashMap;","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     * Checks if a given String can be parsed into a valid Attendance object.","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     * @param test the String to be checked","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     * @return true if the String can be parsed into a valid Attendance object, otherwise false","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    public static boolean isValidAttendance(String test) {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        // Input should be in the form date/DATE attendance/[1/0]","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"        // e.g. date/13 Jan 2022 attendance/1","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        if (test.isBlank()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"            return true; // a student will start with a blank attendance","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        Matcher matcher \u003d FORMAT.matcher(test.trim());","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"            return false;","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        String date \u003d matcher.group(\"date\");","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        date +\u003d \" 00:00\"; // scuffed implementation to avoid Temporal errors","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        return DateUtil.isValidDateString(date);","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"     * Parses a given String into an HashMap.","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     * @param json the String (json) to be parsed","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     * @return A HashMap representing the attendance of the student","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"     * @throws ParseException","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"    public static HashMap\u003cString, Integer\u003e parseAttendanceFromJson(String json)","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        // For empty attendances","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        if (json.isBlank()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"            return new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        String trimmedInput \u003d json.trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        String[] toParse \u003d trimmedInput.split(\"%%\");","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"        HashMap\u003cString, Integer\u003e tempMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"        for (String s : toParse) {","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"            if (!Attendance.isValidAttendance(s)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"                throw new ParseException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"            } else {","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"                Matcher matcher \u003d FORMAT.matcher(s.trim());","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"                if (!matcher.matches()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"                    System.out.println(\"failed valid check: \" + s);","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"                    throw new ParseException(Attendance.MESSAGE_CONSTRAINTS); // \"initializes\" matcher","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"                }","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"                String date \u003d matcher.group(\"date\");","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"                int attendance \u003d Integer.parseInt(matcher.group(\"attendance\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"                tempMap.put(date, attendance);","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"        return tempMap;","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"     * Gets the attendance for the specified day","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"     * @param command the command with which to parse attendance","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"    public void updateAttendance(String command) {","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"joosxi"},"content":"        //checkArgument(isValidAttendance(command), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"        // e.g. \"1/3/2022 1\" -\u003e sets attendance to 1 for 1/3/2022","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"        String[] commandSplit \u003d command.split(\" \");","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"joosxi"},"content":"        String date \u003d commandSplit[0];","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"joosxi"},"content":"        String attendance \u003d commandSplit[1];","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"        int attended \u003d Integer.parseInt(attendance);","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"        personAttendance.put(date, attended);","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"     * @return an integer array with 1) Total number of days attended, and 2) Total number of days","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"    public int[] getAttendanceDetails() {","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"        ArrayList\u003cInteger\u003e totalAttendanceArray \u003d new ArrayList\u003c\u003e(personAttendance.values());","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"        int length \u003d totalAttendanceArray.size();","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"Hoodineee"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"        for (Integer integer : totalAttendanceArray) {","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"            count +\u003d integer;","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"        return new int[]{count, length};","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"        return personAttendance.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"e1010101"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-22"},{"lineNumber":125,"author":{"gitId":"e1010101"},"content":"        for (String key : personAttendance.keySet()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":126,"author":{"gitId":"e1010101"},"content":"            sb.append(\"date/\").append(key).append(\" attendance/\").append(personAttendance.get(key)).append(\"%%\");","lastModifiedDate":"2022-10-22"},{"lineNumber":127,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":128,"author":{"gitId":"e1010101"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-22"},{"lineNumber":129,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"Hoodineee"},"content":"     * Returns the Attendance into a String to be shown in the GUI.","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"Hoodineee"},"content":"     * @return a String which represents the Attendance of the student.","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"Hoodineee"},"content":"    public String guiString() {","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"Hoodineee"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"Hoodineee"},"content":"        if (personAttendance.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"e1010101"},"content":"            sb.append(\"No attendance recorded yet!\");","lastModifiedDate":"2022-10-31"},{"lineNumber":140,"author":{"gitId":"Hoodineee"},"content":"            return sb.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"Hoodineee"},"content":"        int[] attendance \u003d this.getAttendanceDetails();","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"e1010101"},"content":"        sb.append(attendance[0]).append(\"/\").append(attendance[1]);","lastModifiedDate":"2022-10-31"},{"lineNumber":144,"author":{"gitId":"Hoodineee"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"joosxi"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":148,"author":{"gitId":"joosxi"},"content":"     * Checks if a student has above 80% attendance.","lastModifiedDate":"2022-10-31"},{"lineNumber":149,"author":{"gitId":"joosxi"},"content":"     *","lastModifiedDate":"2022-10-31"},{"lineNumber":150,"author":{"gitId":"joosxi"},"content":"     * @return A boolean value.","lastModifiedDate":"2022-10-31"},{"lineNumber":151,"author":{"gitId":"joosxi"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":152,"author":{"gitId":"joosxi"},"content":"    public boolean hasGoodAttendance() {","lastModifiedDate":"2022-10-31"},{"lineNumber":153,"author":{"gitId":"joosxi"},"content":"        int[] attendance \u003d getAttendanceDetails();","lastModifiedDate":"2022-10-31"},{"lineNumber":154,"author":{"gitId":"e1010101"},"content":"        if (attendance[1] \u003d\u003d 0) {","lastModifiedDate":"2022-11-01"},{"lineNumber":155,"author":{"gitId":"e1010101"},"content":"            return false;","lastModifiedDate":"2022-11-01"},{"lineNumber":156,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":157,"author":{"gitId":"e1010101"},"content":"        return ((float) attendance[0] / attendance[1] \u003e\u003d 0.8);","lastModifiedDate":"2022-11-01"},{"lineNumber":158,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":159,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":160,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"e1010101"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"e1010101"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"e1010101"},"content":"            || (other instanceof Attendance // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"e1010101"},"content":"            \u0026\u0026 personAttendance.equals(((Attendance) other).personAttendance)); // state check","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":166,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jgyj123":7,"e1010101":108,"Hoodineee":39,"joosxi":12}},{"path":"src/main/java/seedu/watson/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":" * Represents a Student\u0027s email in the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"        \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                                                   + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                                    + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     * @param email A valid email watson.","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"               || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                   \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        return value;","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":8,"Hoodineee":2,"-":62}},{"path":"src/main/java/seedu/watson/model/student/FindCommandPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"joosxi"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"public class FindCommandPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public FindCommandPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"joosxi"},"content":"        boolean checkName \u003d keywords.get(0).isBlank()","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"joosxi"},"content":"                ? false","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"joosxi"},"content":"                : Arrays.asList(keywords.get(0).split(\" \")).stream()","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"                                  .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName,","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"                                                                                           keyword));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"joosxi"},"content":"        boolean checkClass \u003d keywords.get(1).isBlank()","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"joosxi"},"content":"                ? false","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"joosxi"},"content":"                : Arrays.asList(keywords.get(1).split(\" \")).stream()","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"                                     .anyMatch(","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"                                         keyword -\u003e StringUtil.containsWordIgnoreCase(student.getStudentClass().value,","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"                                                                                      keyword));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"joosxi"},"content":"        boolean checkSubject \u003d keywords.get(2).isBlank()","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"joosxi"},"content":"                ? false","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"joosxi"},"content":"                : Arrays.asList(keywords.get(2).split(\" \")).stream()","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"                                       .anyMatch(keyword -\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"joosxi"},"content":"                student.getSubjectsTaken().toString().toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        return checkName || checkClass || checkSubject;","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"               || (other instanceof FindCommandPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"                   \u0026\u0026 keywords.equals(((FindCommandPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"e1010101":29,"Hoodineee":6,"joosxi":11}},{"path":"src/main/java/seedu/watson/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":" * Represents a Student\u0027s name in the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"     * The first character of the watson must not be a whitespace,","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}[\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"               || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                   \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        return fullName;","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":7,"Hoodineee":2,"-":49}},{"path":"src/main/java/seedu/watson/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":" * Represents a Student\u0027s phone number in the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"               || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        return value;","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":5,"Hoodineee":2,"-":45}},{"path":"src/main/java/seedu/watson/model/student/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * Represents a word describing the personality of the student","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public class Remark {","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"        \"Remarks should only contain alphabets and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    /*","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"     * The first character of the watson must not be a whitespace,","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S.*\";","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    // For consistency","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public final String value;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        value \u003d remark;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     * Returns true if a given string is a valid Remark.","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     * Remarks just need to be non-empty.","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"               || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"                   \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        return value;","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"e1010101":60,"Hoodineee":1}},{"path":"src/main/java/seedu/watson/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xiaoying1129"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"import java.util.List;","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"import java.util.Objects;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.Subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.SubjectHandler;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":" * Represents a Student in the watson book.","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"public class Student {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    // New fields","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    private final StudentClass studentClass;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    private final Set\u003cRemark\u003e remarksList;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    private final SubjectHandler subjectHandler;","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    private final Attendance attendance;","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     * Every field must be present and not null (except attendance, remark and grade).","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    public Student(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"joosxi"},"content":"                   StudentClass studentClass, Attendance attendance, Set\u003cRemark\u003e remarksList,","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"joosxi"},"content":"                   SubjectHandler subjectsTaken, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        requireAllNonNull(name, phone, email, address, studentClass, attendance,","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"joosxi"},"content":"                          remarksList, subjectsTaken, tags);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        // Added in v1.2","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        this.studentClass \u003d studentClass;","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        this.remarksList \u003d remarksList;","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"        this.subjectHandler \u003d subjectsTaken;","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"    public StudentClass getStudentClass() {","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        return studentClass;","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"    public Attendance getAttendance() {","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"        return attendance;","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"    public Set\u003cRemark\u003e getRemarks() {","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"xiaoying1129"},"content":"        return remarksList;","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jgyj123"},"content":"    public String getRemarksString() {","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"jgyj123"},"content":"        List\u003cString\u003e remarksStringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"jgyj123"},"content":"        Iterator\u003cRemark\u003e remarkIterator \u003d remarksList.iterator();","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"jgyj123"},"content":"        while (remarkIterator.hasNext()) {","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"jgyj123"},"content":"            remarksStringList.add(remarkIterator.next().toString());","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"jgyj123"},"content":"        String remarksString \u003d String.join(\", \", remarksStringList);","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"jgyj123"},"content":"        return remarksString;","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"    public SubjectHandler getSubjectHandler() {","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"        return subjectHandler;","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"    public Set\u003cSubject\u003e getSubjectsTaken() {","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"        return subjectHandler.getSubjectsTaken();","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"jgyj123"},"content":"    // public String getGrades() {return getSubjectsTaken().getGrades();}","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"xiaoying1129"},"content":"    public void setRemarks(Set\u003cRemark\u003e remarksList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"xiaoying1129"},"content":"        remarksList \u003d (remarksList !\u003d null) ? new HashSet\u003c\u003e(remarksList) : null;","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"Hoodineee"},"content":"    public boolean isSamePerson(Student otherStudent) {","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"Hoodineee"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"Hoodineee"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"Hoodineee"},"content":"               \u0026\u0026 otherStudent.getName().equals(getName());","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"e1010101"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"e1010101"},"content":"        return Objects.hash(name, phone, email, address, studentClass, remarksList, subjectHandler, tags);","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"Hoodineee"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"Hoodineee"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"Hoodineee"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"Hoodineee"},"content":"               \u0026\u0026 otherStudent.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"Hoodineee"},"content":"               \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"Hoodineee"},"content":"               \u0026\u0026 otherStudent.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"Hoodineee"},"content":"               \u0026\u0026 otherStudent.getTags().equals(getTags())","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"Hoodineee"},"content":"               \u0026\u0026 otherStudent.getStudentClass().equals(getStudentClass())","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"Hoodineee"},"content":"               \u0026\u0026 otherStudent.getAttendance().equals(getAttendance())","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"Hoodineee"},"content":"               \u0026\u0026 otherStudent.getRemarks().equals(getRemarks());","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"               .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"               .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"               .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"               .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"               .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"Hoodineee"},"content":"               .append(getAddress())","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"Hoodineee"},"content":"               .append(\"; Class: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"e1010101"},"content":"               .append(getStudentClass())","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"e1010101"},"content":"               .append(\"; Attendance: \")","lastModifiedDate":"2022-10-22"},{"lineNumber":177,"author":{"gitId":"e1010101"},"content":"               .append(getAttendance())","lastModifiedDate":"2022-10-22"},{"lineNumber":178,"author":{"gitId":"e1010101"},"content":"               .append(\"; Remarks: \")","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"e1010101"},"content":"               .append(getRemarks())","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"Hoodineee"},"content":"               .append(\"; Subject: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"e1010101"},"content":"               .append(getSubjectHandler());","lastModifiedDate":"2022-10-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"xiaoying1129"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"xiaoying1129"},"content":"     * Compares this object with the specified object for order.  Returns a","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"xiaoying1129"},"content":"     * negative integer, zero, or a positive integer as this object is less","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"xiaoying1129"},"content":"     * than, equal to, or greater than the specified object.","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"xiaoying1129"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"xiaoying1129"},"content":"     * @param p the object to be compared.","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"xiaoying1129"},"content":"     * @return a negative integer, zero, or a positive integer as this object","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"xiaoying1129"},"content":"     *     is less than, equal to, or greater than the specified object.","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"xiaoying1129"},"content":"     * @throws NullPointerException if the specified object is null","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"xiaoying1129"},"content":"     * @throws ClassCastException   if the specified object\u0027s type prevents it","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"xiaoying1129"},"content":"     *                              from being compared to this object.","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"xiaoying1129"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"Hoodineee"},"content":"    public int compareTo(Student p, String subjectName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(p, subjectName);","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"Hoodineee"},"content":"        double thisScore \u003d 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"Hoodineee"},"content":"        double otherScore \u003d 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"Hoodineee"},"content":"        Subject thisSubject \u003d this.getSubjectHandler().getSubject(subjectName);","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"Hoodineee"},"content":"        Subject otherSubject \u003d p.getSubjectHandler().getSubject(subjectName);","lastModifiedDate":"2022-10-28"},{"lineNumber":209,"author":{"gitId":"Hoodineee"},"content":"        if (thisSubject !\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"Hoodineee"},"content":"            thisScore \u003d thisSubject.getTotalPercentage();","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":212,"author":{"gitId":"Hoodineee"},"content":"        if (otherSubject !\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"Hoodineee"},"content":"            otherScore \u003d otherSubject.getTotalPercentage();","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"Hoodineee"},"content":"        return thisScore - otherScore \u003e 0 ? 1 : -1;","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jgyj123":18,"e1010101":43,"Hoodineee":42,"joosxi":3,"xiaoying1129":19,"-":92}},{"path":"src/main/java/seedu/watson/model/student/StudentClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":" * Represents a class in the school. Renamed to Clazz as the word \"class\" is a reserve word","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"public class StudentClass {","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"        \"A student\u0027s Class should only contain numbers, letters and the decimal point, and it should not be blank\";","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z\\\\d.]+\";","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    // For consistency","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    public final String value;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    private ArrayList\u003cStudent\u003e personsInClasses;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     * Constructs a {@code StudentClass}.","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     * @param studentClass A valid StudentClass object.","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    public StudentClass(String studentClass) {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        requireNonNull(studentClass);","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"        personsInClasses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        value \u003d studentClass;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    public static boolean isValidStudentClass(String test) {","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jgyj123"},"content":"     * Adds a student to the class","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jgyj123"},"content":"     * @param student to be added","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"    public void add(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"jgyj123"},"content":"        assert student !\u003d null : \"Student cannot be null\";","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"        personsInClasses.add(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"joosxi"},"content":"    public boolean isSameClass(String studentClass) {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"joosxi"},"content":"        return studentClass.equals(value);","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"     * Returns true if both classes have the same name.","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"     * @param other The other class to compare with.","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     * @return True if both classes have the same name.","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"               || (other instanceof StudentClass // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"                   \u0026\u0026 value.equals(((StudentClass) other).value)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        return value;","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jgyj123":12,"e1010101":27,"Hoodineee":29,"joosxi":4,"xiaoying1129":1}},{"path":"src/main/java/seedu/watson/model/student/SubjectContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"xiaoying1129"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"xiaoying1129"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"xiaoying1129"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"xiaoying1129"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"xiaoying1129"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"public class SubjectContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"xiaoying1129"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"xiaoying1129"},"content":"    public SubjectContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"xiaoying1129"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"xiaoying1129"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        // return keywords.stream()","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"        // .anyMatch(keyword -\u003e arrayListContainsWord(student.getSubjectsTaken().getArrayOfSubjects(), keyword));","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"xiaoying1129"},"content":"    private boolean arrayListContainsWord(ArrayList\u003cString\u003e arrayList, String keyword) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"xiaoying1129"},"content":"        assert arrayList !\u003d null : \"List cannot be null\";","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"xiaoying1129"},"content":"        assert keyword !\u003d null : \"Keyword cannot be null\";","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"xiaoying1129"},"content":"        for (String string : arrayList) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"xiaoying1129"},"content":"            if (string.equals(keyword)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"xiaoying1129"},"content":"                return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"xiaoying1129"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"xiaoying1129"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"xiaoying1129"},"content":"        return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"xiaoying1129"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"xiaoying1129"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"xiaoying1129"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"xiaoying1129"},"content":"               || (other instanceof SubjectContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"xiaoying1129"},"content":"                   \u0026\u0026 keywords.equals(((SubjectContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"xiaoying1129"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"e1010101":2,"Hoodineee":5,"xiaoying1129":35}},{"path":"src/main/java/seedu/watson/model/student/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":" * A student is considered unique by comparing using {@code Student#isSamePerson(Student)}. As such, adding","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":" * and updating of persons uses Student#isSamePerson(Student) for equality so as to ensure that the student","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":" * being added or updated is unique in terms of identity in the UniquePersonList. However, the removal of a","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":" * student uses Student#equals(Object) so as to ensure that the student with exactly the same fields","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":" * will be removed.","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":" *","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":" * @see Student#isSamePerson(Student)","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"public class UniquePersonList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"     * Adds a student to the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"    public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"        if (!target.isSamePerson(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"Hoodineee"},"content":"     * The student must exist in the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"Hoodineee"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"Hoodineee"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"    public void setPersons(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"        if (!personsAreUnique(students)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"Hoodineee"},"content":"        internalList.setAll(students);","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"Hoodineee"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"Hoodineee"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"Hoodineee"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"Hoodineee"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"Hoodineee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"Hoodineee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"Hoodineee"},"content":"               || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"Hoodineee"},"content":"                   \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"Hoodineee"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"Hoodineee"},"content":"    private boolean personsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"Hoodineee"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"Hoodineee"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"Hoodineee"},"content":"                if (students.get(i).isSamePerson(students.get(j))) {","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"Hoodineee"},"content":"                    return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"Hoodineee"},"content":"        return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"Hoodineee"},"content":"     * Utilizes Student\u0027s compareTo() function provide a comparator for ObservableList\u003c\u003e.sort","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"Hoodineee"},"content":"     * @param isInAscending sorts by ascending if true, descending otherwise","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"Hoodineee"},"content":"    public void sortByGrade(boolean isInAscending, String subjectName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"Hoodineee"},"content":"        internalList.sort((Student p1, Student p2) -\u003e isInAscending","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"Hoodineee"},"content":"                ? p1.compareTo(p2, subjectName)","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"Hoodineee"},"content":"                : -p1.compareTo(p2, subjectName));","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"Hoodineee":148}},{"path":"src/main/java/seedu/watson/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student.exceptions;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Hoodineee":3,"-":8}},{"path":"src/main/java/seedu/watson/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student.exceptions;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"public class StudentNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"Hoodineee":7}},{"path":"src/main/java/seedu/watson/model/student/subject/Assessment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student.subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * Represents an assessment that is part of a Subject object","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"public class Assessment {","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"        \"Assessment name should only contain letters and numbers, and it should not be blank\";","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_CONSTRAINTS_MARKS \u003d","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"        \"Assessment score has to be more than 0 and less than the total score\";","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_CONSTRAINTS_TOTAL_SCORE \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"        \"Assessment total score has to be more than 0\";","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_CONSTRAINTS_WEIGHTAGE \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"        \"Assessment weightage has to be more than 0 and less than 1\";","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_CONSTRAINTS_DIFFICULTY \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"        \"Assessment difficulty has to be more than 0 and less than 5\";","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"jgyj123"},"content":"    public static final String MESSAGE_CONSTRAINTS_SUBJECT \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"jgyj123"},"content":"            \"Subjects should only contain alphabets, and it should not be blank\";","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    // Checks for alphanumeric characters and includes spaces after the first word.","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    // Also accepts dots and underscores.","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public static final String VALIDATION_REGEX \u003d \"([\\\\w.]+\\\\s*)+\";","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    private String assessmentName;","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    private double assessmentWeightage;","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    private double assessmentScore;","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    private double assessmentTotalScore;","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    // Can create an arbitrary formula for this","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    private double assessmentDifficulty;","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"     * Constructs an {@code Assessment} object.","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     * @param assessmentName the name of the assessment","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     * @param assessmentWeightage the weightage of the assessment","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     * @param assessmentScore the student\u0027s score of the assessment","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     * @param assessmentTotalScore the total score of the assessment","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    public Assessment(String assessmentName, double assessmentScore,","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        double assessmentTotalScore, double assessmentWeightage, double assessmentDifficulty) {","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        checkArgument(isValidAssessment(assessmentName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"        checkArgument(isValidTotalScore(assessmentTotalScore), MESSAGE_CONSTRAINTS_TOTAL_SCORE);","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"        checkArgument(isValidWeightage(assessmentWeightage), MESSAGE_CONSTRAINTS_WEIGHTAGE);","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"        checkArgument(isValidDifficulty(assessmentDifficulty), MESSAGE_CONSTRAINTS_DIFFICULTY);","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"        checkArgument(isValidScore(assessmentScore, assessmentTotalScore), MESSAGE_CONSTRAINTS_MARKS);","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        this.assessmentName \u003d assessmentName;","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        this.assessmentScore \u003d assessmentScore;","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        this.assessmentTotalScore \u003d assessmentTotalScore;","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        this.assessmentWeightage \u003d assessmentWeightage;","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        this.assessmentDifficulty \u003d assessmentDifficulty;","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    public static boolean isValidAssessment(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"     * Checks if the score typed is a valid score.","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"     * @param score","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"     * @param totalScore","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"     * @return true if the score is valid and false if it is an invalid score input.","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"    public static boolean isValidScore(double score, double totalScore) {","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"        if (score \u003e\u003d 0 \u0026\u0026 score \u003c\u003d totalScore) {","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"Hoodineee"},"content":"            return true;","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"        return false;","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":80,"author":{"gitId":"Hoodineee"},"content":"     * Checks if the score typed is a valid score.","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-31"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"     * @param assessmentTotalScore","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"     * @return true if the assessment total score is valid and false if it is an invalid","lastModifiedDate":"2022-10-31"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"     *      assessment total score input.","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"    public static boolean isValidTotalScore(double assessmentTotalScore) {","lastModifiedDate":"2022-10-31"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"        if (assessmentTotalScore \u003e\u003d 0) {","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"Hoodineee"},"content":"            return true;","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"        return false;","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"     * Checks if the score typed is a valid score.","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"Hoodineee"},"content":"     * @param assessmentWeightage","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"     * @return true if the assessment weightage is valid and false if it is an invalid","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"Hoodineee"},"content":"     *      assessment weightage input.","lastModifiedDate":"2022-10-31"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"Hoodineee"},"content":"    public static boolean isValidWeightage(double assessmentWeightage) {","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"Hoodineee"},"content":"        if (assessmentWeightage \u003e\u003d 0 \u0026\u0026 assessmentWeightage \u003c\u003d 1) {","lastModifiedDate":"2022-10-31"},{"lineNumber":102,"author":{"gitId":"Hoodineee"},"content":"            return true;","lastModifiedDate":"2022-10-31"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"        return false;","lastModifiedDate":"2022-10-31"},{"lineNumber":105,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":106,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":107,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":108,"author":{"gitId":"Hoodineee"},"content":"     * Checks if the score typed is a valid score.","lastModifiedDate":"2022-10-31"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-31"},{"lineNumber":110,"author":{"gitId":"Hoodineee"},"content":"     * @param assessmentDifficulty","lastModifiedDate":"2022-10-31"},{"lineNumber":111,"author":{"gitId":"Hoodineee"},"content":"     * @return true if the assessment difficulty is valid and false if it is an invalid","lastModifiedDate":"2022-10-31"},{"lineNumber":112,"author":{"gitId":"Hoodineee"},"content":"     *      assessment difficulty input.","lastModifiedDate":"2022-10-31"},{"lineNumber":113,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"    public static boolean isValidDifficulty(double assessmentDifficulty) {","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"Hoodineee"},"content":"        if (assessmentDifficulty \u003e\u003d 0 \u0026\u0026 assessmentDifficulty \u003c\u003d 5) {","lastModifiedDate":"2022-10-31"},{"lineNumber":116,"author":{"gitId":"Hoodineee"},"content":"            return true;","lastModifiedDate":"2022-10-31"},{"lineNumber":117,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":118,"author":{"gitId":"Hoodineee"},"content":"        return false;","lastModifiedDate":"2022-10-31"},{"lineNumber":119,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":120,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":121,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":122,"author":{"gitId":"jgyj123"},"content":"     * Obtains error message from AssessmentString if invalid.","lastModifiedDate":"2022-11-05"},{"lineNumber":123,"author":{"gitId":"jgyj123"},"content":"     * @param assessmentString","lastModifiedDate":"2022-11-05"},{"lineNumber":124,"author":{"gitId":"jgyj123"},"content":"     * @return string containing error message of invalid field, or empty string if all fields are valid","lastModifiedDate":"2022-11-05"},{"lineNumber":125,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":126,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":127,"author":{"gitId":"jgyj123"},"content":"    public static String getErrorMessage(String assessmentString) {","lastModifiedDate":"2022-11-05"},{"lineNumber":128,"author":{"gitId":"jgyj123"},"content":"        String[] parsedString \u003d assessmentString.split(\"_\");","lastModifiedDate":"2022-11-05"},{"lineNumber":129,"author":{"gitId":"jgyj123"},"content":"        String subjectName \u003d parsedString[0].trim().toUpperCase();","lastModifiedDate":"2022-11-05"},{"lineNumber":130,"author":{"gitId":"jgyj123"},"content":"        String name \u003d parsedString[1].trim().toUpperCase();","lastModifiedDate":"2022-11-05"},{"lineNumber":131,"author":{"gitId":"jgyj123"},"content":"        double totalScore \u003d Double.parseDouble(parsedString[2].trim());","lastModifiedDate":"2022-11-05"},{"lineNumber":132,"author":{"gitId":"jgyj123"},"content":"        double weightage \u003d Double.parseDouble(parsedString[3].trim());","lastModifiedDate":"2022-11-05"},{"lineNumber":133,"author":{"gitId":"jgyj123"},"content":"        double difficulty \u003d Double.parseDouble(parsedString[4].trim());","lastModifiedDate":"2022-11-05"},{"lineNumber":134,"author":{"gitId":"jgyj123"},"content":"        if (!Subject.isValidSubject(subjectName)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":135,"author":{"gitId":"jgyj123"},"content":"            return MESSAGE_CONSTRAINTS_SUBJECT;","lastModifiedDate":"2022-11-05"},{"lineNumber":136,"author":{"gitId":"jgyj123"},"content":"        } else if (!isValidAssessment(name)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":137,"author":{"gitId":"jgyj123"},"content":"            return MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":138,"author":{"gitId":"jgyj123"},"content":"        } else if (!isValidTotalScore(totalScore)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":139,"author":{"gitId":"jgyj123"},"content":"            return MESSAGE_CONSTRAINTS_TOTAL_SCORE;","lastModifiedDate":"2022-11-05"},{"lineNumber":140,"author":{"gitId":"jgyj123"},"content":"        } else if (!isValidWeightage(weightage)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":141,"author":{"gitId":"jgyj123"},"content":"            return MESSAGE_CONSTRAINTS_WEIGHTAGE;","lastModifiedDate":"2022-11-05"},{"lineNumber":142,"author":{"gitId":"jgyj123"},"content":"        } else if (!isValidDifficulty(difficulty)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":143,"author":{"gitId":"jgyj123"},"content":"            return MESSAGE_CONSTRAINTS_DIFFICULTY;","lastModifiedDate":"2022-11-05"},{"lineNumber":144,"author":{"gitId":"jgyj123"},"content":"        } else {","lastModifiedDate":"2022-11-05"},{"lineNumber":145,"author":{"gitId":"jgyj123"},"content":"            return \"\";","lastModifiedDate":"2022-11-05"},{"lineNumber":146,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":147,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":148,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":149,"author":{"gitId":"e1010101"},"content":"    public String getAssessmentName() {","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"e1010101"},"content":"        return assessmentName;","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"e1010101"},"content":"    public double getAssessmentWeightage() {","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"e1010101"},"content":"        return assessmentWeightage;","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"e1010101"},"content":"    public double getAssessmentScore() {","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"e1010101"},"content":"        return assessmentScore;","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":161,"author":{"gitId":"e1010101"},"content":"    public double getAssessmentTotalScore() {","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"e1010101"},"content":"        return assessmentTotalScore;","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"e1010101"},"content":"    public double getAssessmentDifficulty() {","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"e1010101"},"content":"        return assessmentDifficulty;","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"e1010101"},"content":"    public double[] getScoreArray() {","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"Hoodineee"},"content":"        return new double[]{assessmentScore, assessmentTotalScore, assessmentWeightage, assessmentDifficulty};","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":172,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":173,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":174,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-18"},{"lineNumber":175,"author":{"gitId":"e1010101"},"content":"        return \"ASSESSMENT NAME: \" + assessmentName + \"\\nWEIGHTAGE: \" + assessmentWeightage","lastModifiedDate":"2022-10-18"},{"lineNumber":176,"author":{"gitId":"e1010101"},"content":"            + \"\\nSTUDENT SCORE: \" + assessmentScore + \"\\nTOTAL SCORE: \" + assessmentTotalScore;","lastModifiedDate":"2022-10-18"},{"lineNumber":177,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":178,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"jgyj123":31,"e1010101":73,"Hoodineee":74}},{"path":"src/main/java/seedu/watson/model/student/subject/Grades.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student.subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * A high-level class that represents the grades of a student stored by subject","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"public class Grades {","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"        \"Grades should only contain an alphabet, and it should not be blank\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    private static final String EXCEPTION_NO_GRADE_FOUND \u003d \"No grade found for assessment %s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    // the double array contains 3 values: the score for the assessment,","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    // the total score for the assessment, and the weightage of the assessment","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    private final LinkedHashMap\u003cString, double[]\u003e assessmentMarks;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xiaoying1129"},"content":"    private double currentPercentageObtained;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     * Constructs a {@code Grades}.","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    public Grades() {","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        assessmentMarks \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"     * Updates the {@code marks} HashMap with the specified assessment","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"     * @param updatedAssessment the Assessment object to add","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    public void updateAssessment(Assessment updatedAssessment) {","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        if (assessmentMarks.containsKey(updatedAssessment.getAssessmentName())) {","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"            double[] updatedMarks \u003d new double[4];","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"            updatedMarks[0] \u003d updatedAssessment.getAssessmentScore();","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"            updatedMarks[1] \u003d updatedAssessment.getAssessmentTotalScore();","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"            updatedMarks[2] \u003d updatedAssessment.getAssessmentWeightage();","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"            updatedMarks[3] \u003d updatedAssessment.getAssessmentDifficulty();","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"            assessmentMarks.put(updatedAssessment.getAssessmentName(), updatedMarks);","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        } else {","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"            assessmentMarks.put(updatedAssessment.getAssessmentName(), updatedAssessment.getScoreArray());","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    public ArrayList\u003cString\u003e getAllAssessments() {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        return new ArrayList\u003c\u003e(assessmentMarks.keySet());","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"xiaoying1129"},"content":"    public double getCurrentPercentage() {","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"        return getCurrentPercentageObtained(assessmentMarks);","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"    public double getCurrentPercentageObtained(HashMap\u003cString, double[]\u003e subjectMarks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        ArrayList\u003cdouble[]\u003e totalMarksArray \u003d new ArrayList\u003c\u003e(subjectMarks.values());","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"        double totalMarks \u003d 0;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"        double totalWeightage \u003d 0;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        for (double[] doubles : totalMarksArray) {","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"jgyj123"},"content":"            totalMarks +\u003d (doubles[0] / doubles[1]) * doubles[2];","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"jgyj123"},"content":"            totalWeightage +\u003d doubles[2];","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jgyj123"},"content":"        return (totalMarks / totalWeightage) * 100;","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"    public double[] getGradeForAssessment(String assessment) {","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"        if (assessmentMarks.containsKey(assessment)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"            return assessmentMarks.get(assessment);","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"            throw new NoSuchElementException(String.format(EXCEPTION_NO_GRADE_FOUND, assessment));","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"    public double[] getRawPercentages() {","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"        double[] rawPercentages \u003d new double[assessmentMarks.size()];","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"        for (double[] marks : assessmentMarks.values()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"            rawPercentages[i] \u003d marks[0] / marks[1];","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"            i++;","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"        return rawPercentages;","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"    public double[] getDifficulties() {","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"        double[] difficulties \u003d new double[assessmentMarks.size()];","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"        for (double[] marks : assessmentMarks.values()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"            difficulties[i] \u003d marks[3];","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"            i++;","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"        return difficulties;","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"        return assessmentMarks.hashCode();","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"     * Returns the grades into a String datatype to be stored in Json.","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"Hoodineee"},"content":"     * @return a String which represents the data of the grades of the individual subject taken by the student.","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"Hoodineee"},"content":"    public String dataString() {","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"Hoodineee"},"content":"        Set\u003cString\u003e keys \u003d assessmentMarks.keySet();","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"Hoodineee"},"content":"        for (String key : keys) {","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"Hoodineee"},"content":"            String keyValue \u003d Arrays.toString(assessmentMarks.get(key));","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"            str.append(key).append(\":\").append(keyValue).append(\", \");","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":115,"author":{"gitId":"Hoodineee"},"content":"        int stringLength \u003d str.length();","lastModifiedDate":"2022-10-22"},{"lineNumber":116,"author":{"gitId":"jgyj123"},"content":"        if (str.length() \u003e\u003d 2) {","lastModifiedDate":"2022-11-01"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"            str \u003d new StringBuilder(str.substring(0, stringLength - 2));","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"        return str.toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":121,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":122,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"Hoodineee"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"xiaoying1129"},"content":"        currentPercentageObtained \u003d getCurrentPercentageObtained(assessmentMarks);","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"Hoodineee"},"content":"        String grade;","lastModifiedDate":"2022-11-01"},{"lineNumber":126,"author":{"gitId":"Hoodineee"},"content":"        if (assessmentMarks.isEmpty()) {","lastModifiedDate":"2022-11-01"},{"lineNumber":127,"author":{"gitId":"Hoodineee"},"content":"            grade \u003d \"There is currently no grade.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":128,"author":{"gitId":"Hoodineee"},"content":"        } else {","lastModifiedDate":"2022-11-01"},{"lineNumber":129,"author":{"gitId":"jgyj123"},"content":"            grade \u003d String.format(\"Grade \u003d %.2f\", currentPercentageObtained);","lastModifiedDate":"2022-11-05"},{"lineNumber":130,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":131,"author":{"gitId":"jgyj123"},"content":"        return grade;","lastModifiedDate":"2022-11-01"},{"lineNumber":132,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":136,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"jgyj123":11,"e1010101":71,"Hoodineee":48,"xiaoying1129":6}},{"path":"src/main/java/seedu/watson/model/student/subject/Subject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student.subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import java.util.Locale;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":" * Represents a subject taken by the student","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"public class Subject {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"        \"Subjects should only contain alphabets, and it should not be blank\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    /*","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     * The first character of the watson must not be a whitespace,","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z]*$\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    public final String subjectName;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private final Grades grades;","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     * Constructs a {@code Subject}.","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * @param subjectName A valid subject.","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public Subject(String subjectName) {","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        requireNonNull(subjectName);","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        checkArgument(isValidSubject(subjectName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        this.subjectName \u003d subjectName;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        this.grades \u003d new Grades();","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"     * Returns true if a given string is a valid Subject.","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"    public static boolean isValidSubject(String test) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    public String getSubjectName() {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        return subjectName;","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     * Gets the attendance for the specified day","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     * @param updatedAssessment the Assessment object to add to the Grades object","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    public void updateGradeAssessment(Assessment updatedAssessment) {","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        grades.updateAssessment(updatedAssessment);","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     * Gets the grade for the specified assessment","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"     * @param assessmentName the assessment to get the grade for","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"     * @return the grade for the assessment specified","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"    public double[] getGradeForAssessment(String assessmentName) {","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        return grades.getGradeForAssessment(assessmentName);","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"    public Grades getGrades() {","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        return grades;","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"xiaoying1129"},"content":"    public double getTotalPercentage() {","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"xiaoying1129"},"content":"        return grades.getCurrentPercentage();","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"        return subjectName.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"               || (other instanceof Subject // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"                   \u0026\u0026 subjectName.equals(((Subject) other).subjectName)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"Hoodineee"},"content":"     * Returns the subject into a String datatype to be stored in Json.","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"     * @return a String which represents the data of the subject taken by the student.","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"    public String dataString() {","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"        str +\u003d subjectName.toUpperCase(Locale.ROOT) + \": \";","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"Hoodineee"},"content":"        str +\u003d grades.dataString() + \"%%\";","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"        return str;","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Hoodineee"},"content":"        return subjectName.toUpperCase(Locale.ROOT) + \": [ \" + grades.toString() + \" ]\";","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jgyj123":4,"e1010101":36,"Hoodineee":59,"xiaoying1129":6}},{"path":"src/main/java/seedu/watson/model/student/subject/SubjectHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student.subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import java.util.Locale;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" * Handles a Student\u0027s subjects in the application.","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"public class SubjectHandler {","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private final HashMap\u003cString, Subject\u003e subjectsTaken;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     * Constructs a {@code SubjectHandler}.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public SubjectHandler() {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        subjectsTaken \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     * Constructs a {@code SubjectHandler} with a specified Set of Subjects.","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    public SubjectHandler(Set\u003cSubject\u003e subjects) {","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        subjectsTaken \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        for (Subject subject : subjects) {","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"            subjectsTaken.put(subject.getSubjectName(), subject);","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"     * Constructs a {@code SubjectHandler} with a String data from json.","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    public SubjectHandler(String subjectData) {","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        subjectsTaken \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"        dataToSubject(subjectData);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     * Adds a subject to the list of subjects taken by the student","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     * @param subject the subject to be added","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    public void addSubject(Subject subject) {","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        subjectsTaken.put(subject.getSubjectName(), subject);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"     * Gets a subject from the list of subjects taken by the student","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"     * @param subjectName the name of the subject to be retrieved","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    public Subject getSubject(String subjectName) {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        return subjectsTaken.get(subjectName);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"    public Set\u003cSubject\u003e getSubjectsTaken() {","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        return subjectsTaken.keySet().stream().map(subjectsTaken::get).collect(","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"            Collectors.toSet());","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"joosxi"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"     * Checks if the HashMap containing subjects taken by a student contains the subject(s) given as","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"joosxi"},"content":"     * keyword(s) in the find command.","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"joosxi"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"joosxi"},"content":"     * @param keywords Keywords separated by spaces and are given by user using the find command.","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"joosxi"},"content":"     * @return A boolean for if keyword(s) is contained in sentence.","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"joosxi"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"joosxi"},"content":"    public boolean subjectsTakenContainsWord(String keywords) {","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"joosxi"},"content":"        Set\u003cString\u003e subjectsSet \u003d subjectsTaken.keySet();","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"joosxi"},"content":"        String subjectsString \u003d String.join(\" \", subjectsSet);","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"joosxi"},"content":"        String[] keywordArr \u003d keywords.split(\" \");","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"joosxi"},"content":"        for (String keyword : keywordArr) {","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"joosxi"},"content":"            if (StringUtil.containsWordIgnoreCase(subjectsString, keyword)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"joosxi"},"content":"                return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"joosxi"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"joosxi"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"joosxi"},"content":"        return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"     * Converts the String datatype stored in json into subjects.","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"     * @param subjectData String data of the subjects taken by Student.","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"Hoodineee"},"content":"    public void dataToSubject(String subjectData) {","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"        String[] dataString \u003d subjectData.trim().split(\"%%\");","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"        if (dataString.length \u003d\u003d 0) {","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"            return;","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"        for (int i \u003d 0; i \u003c dataString.length; i++) {","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"            //System.out.println(dataString[i] + \"start\");","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"Hoodineee"},"content":"            String subjectName;","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"            subjectName \u003d dataString[i].substring(0, dataString[i].indexOf(\":\")).toUpperCase(Locale.ROOT);","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"Hoodineee"},"content":"            if (dataString[i].substring(subjectName.length()).length() \u003e 2) {","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"                dataString[i] \u003d","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"Hoodineee"},"content":"                    dataString[i].substring(dataString[i].indexOf(\":\") + 2); //dataString without the subject name","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"Hoodineee"},"content":"                dataString[i] \u003d \"\";","lastModifiedDate":"2022-11-01"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"            //System.out.println(subjectName + \": \" + dataString[i] + \"after subjectname\");","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"Hoodineee"},"content":"            Subject subject \u003d new Subject(subjectName);","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"Hoodineee"},"content":"            while (dataString[i].length() \u003e 5) {","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"Hoodineee"},"content":"                String assessmentName \u003d dataString[i].substring(0, dataString[i].indexOf(\":\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"Hoodineee"},"content":"                dataString[i] \u003d dataString[i].substring(dataString[i].indexOf(\":\") + 2);","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"                //System.out.println(assessmentName + \": \" + dataString[i] + \"after assessName\");","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"Hoodineee"},"content":"                Double assessmentScore \u003d Double.parseDouble(dataString[i].substring(0, dataString[i].indexOf(\",\")));","lastModifiedDate":"2022-11-01"},{"lineNumber":111,"author":{"gitId":"Hoodineee"},"content":"                dataString[i] \u003d dataString[i].substring(dataString[i].indexOf(\",\") + 2);","lastModifiedDate":"2022-11-01"},{"lineNumber":112,"author":{"gitId":"Hoodineee"},"content":"                //System.out.println(assessmentScore + \": \" + dataString[i] + \"after assessScore\");","lastModifiedDate":"2022-11-01"},{"lineNumber":113,"author":{"gitId":"Hoodineee"},"content":"                Double assessmentTotalScore \u003d","lastModifiedDate":"2022-11-01"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"                    Double.parseDouble(dataString[i].substring(0, dataString[i].indexOf(\",\")));","lastModifiedDate":"2022-11-01"},{"lineNumber":115,"author":{"gitId":"Hoodineee"},"content":"                dataString[i] \u003d dataString[i].substring(dataString[i].indexOf(\",\") + 2);","lastModifiedDate":"2022-11-01"},{"lineNumber":116,"author":{"gitId":"Hoodineee"},"content":"                //System.out.println(assessmentTotalScore + \": \" + dataString[i] + \"after assessTotalScore\");","lastModifiedDate":"2022-11-01"},{"lineNumber":117,"author":{"gitId":"Hoodineee"},"content":"                Double assessmentWeightage \u003d Double.parseDouble(dataString[i].substring(0, dataString[i].indexOf(\",\")));","lastModifiedDate":"2022-11-01"},{"lineNumber":118,"author":{"gitId":"Hoodineee"},"content":"                dataString[i] \u003d dataString[i].substring(dataString[i].indexOf(\",\") + 2);","lastModifiedDate":"2022-11-01"},{"lineNumber":119,"author":{"gitId":"Hoodineee"},"content":"                //System.out.println(assessmentWeightage + \": \" + dataString[i] + \"after assessWeightage\");","lastModifiedDate":"2022-11-01"},{"lineNumber":120,"author":{"gitId":"Hoodineee"},"content":"                Double assessmentDifficulty \u003d","lastModifiedDate":"2022-11-01"},{"lineNumber":121,"author":{"gitId":"Hoodineee"},"content":"                    Double.parseDouble(dataString[i].substring(0, dataString[i].indexOf(\"]\")));","lastModifiedDate":"2022-11-01"},{"lineNumber":122,"author":{"gitId":"Hoodineee"},"content":"                if (dataString[i].substring(dataString[i].indexOf(\"]\")).length() \u003e 2) {","lastModifiedDate":"2022-11-01"},{"lineNumber":123,"author":{"gitId":"Hoodineee"},"content":"                    dataString[i] \u003d dataString[i].substring(dataString[i].indexOf(\"]\") + 3);","lastModifiedDate":"2022-11-01"},{"lineNumber":124,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"Hoodineee"},"content":"                    dataString[i] \u003d \"\";","lastModifiedDate":"2022-11-01"},{"lineNumber":126,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"Hoodineee"},"content":"                Assessment assessment \u003d new Assessment(assessmentName, assessmentScore, assessmentTotalScore,","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"Hoodineee"},"content":"                                                       assessmentWeightage, assessmentDifficulty);","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"Hoodineee"},"content":"                subject.updateGradeAssessment(assessment);","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"Hoodineee"},"content":"                //System.out.println(assessmentDifficulty + \": \" + dataString[i] + \"after assess\");","lastModifiedDate":"2022-11-01"},{"lineNumber":131,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"Hoodineee"},"content":"            subjectsTaken.put(subjectName, subject);","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"e1010101"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"e1010101"},"content":"        if (obj instanceof SubjectHandler) {","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"e1010101"},"content":"            return subjectsTaken.equals(((SubjectHandler) obj).subjectsTaken);","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"e1010101"},"content":"        return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":145,"author":{"gitId":"Hoodineee"},"content":"     * Returns the subjects into a String datatype to be stored in Json.","lastModifiedDate":"2022-10-22"},{"lineNumber":146,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":147,"author":{"gitId":"Hoodineee"},"content":"     * @return a String which represents the data of the subjects taken by the student.","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":149,"author":{"gitId":"Hoodineee"},"content":"    public String dataString() {","lastModifiedDate":"2022-10-22"},{"lineNumber":150,"author":{"gitId":"e1010101"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"Hoodineee"},"content":"        Set\u003cString\u003e keys \u003d subjectsTaken.keySet();","lastModifiedDate":"2022-10-22"},{"lineNumber":152,"author":{"gitId":"e1010101"},"content":"        if (subjectsTaken.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"e1010101"},"content":"            return str.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"Hoodineee"},"content":"        for (String key : keys) {","lastModifiedDate":"2022-10-22"},{"lineNumber":156,"author":{"gitId":"Hoodineee"},"content":"            Subject keyValue \u003d subjectsTaken.get(key);","lastModifiedDate":"2022-10-22"},{"lineNumber":157,"author":{"gitId":"e1010101"},"content":"            str.append(keyValue.dataString());","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":159,"author":{"gitId":"e1010101"},"content":"        str \u003d new StringBuilder(str.substring(0, str.length() - 2));","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"e1010101"},"content":"        return str.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":162,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":163,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"Hoodineee"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"Hoodineee"},"content":"        Set\u003cString\u003e keys \u003d subjectsTaken.keySet();","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"Hoodineee"},"content":"        if (subjectsTaken.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"Hoodineee"},"content":"            return str.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"Hoodineee"},"content":"        for (String key : keys) {","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"Hoodineee"},"content":"            Subject keyValue \u003d subjectsTaken.get(key);","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"Hoodineee"},"content":"            str.append(keyValue.toString() + \"\\n\");","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"Hoodineee"},"content":"        return str.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":177,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"e1010101":71,"Hoodineee":87,"joosxi":19}},{"path":"src/main/java/seedu/watson/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model.tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * Represents a Tag in the watson book.","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be not be blank!\";","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}\u0027 ]+\";","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        return !test.isBlank() \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        return tagName.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"               || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e1010101":8,"-":46}},{"path":"src/main/java/seedu/watson/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Attendance;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.StudentClass;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.SubjectHandler;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":" * Contains utility methods for populating {@code Database} with sample data.","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    public static Student[] getSamplePersons() {","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"        return new Student[]{","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"joosxi"},"content":"                       new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"                       new Address(\"Blk 30 Geylang Street 29, #06-40\"), new StudentClass(\"1.2\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"                       new Attendance(), getRemarkSet(\"Good at Math\"),","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"                       new SubjectHandler(\"english: CA1:[80.0, 100.0, 0.2, 1.0], CA2:[30.0, \"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"                               + \"50.0, 0.4, 2.0]%%math: CA1:[81.0, 100.0, 0.2, 1.0],\"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"                                          + \"CA2:[44.0, 50.0, 0.4, 2.0]\"),","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"                       getTagSet(\"Student Council\")),","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"            new Student(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"joosxi"},"content":"                       new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"                       new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new StudentClass(\"2.1\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"                       new Attendance(), getRemarkSet(\"Friendly\"),","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"                       new SubjectHandler(\"english: CA1:[75.0, 100.0, 0.2, 1.0], CA2:[36.0, \"","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"                               + \"50.0, 0.4, 2.0]%%math: CA1:[66.0, 100.0, 0.2, 1.0],\"","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"                                          + \"CA2:[40.0, 50.0, 0.4, 2.0]\"),","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"                       getTagSet(\"Student Council\", \"Dean\u0027s List\")),","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"joosxi"},"content":"                       new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"                       new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new StudentClass(\"3.6\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"                       new Attendance(), getRemarkSet(),","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"                       new SubjectHandler(\"english: CA1:[92.0, 100.0, 0.2, 1.0], CA2:[32.0, \"","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"                               + \"50.0, 0.4, 2.0]%%math: CA1:[86.0, 100.0, 0.2, 1.0],\"","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"                                          + \"CA2:[31.0, 50.0, 0.4, 2.0]\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"            new Student(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"joosxi"},"content":"                       new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"                       new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new StudentClass(\"4.2\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"                       new Attendance(), getRemarkSet(\"Good at English\"),","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"                       new SubjectHandler(\"english: CA1:[60.0, 100.0, 0.2, 1.0], CA2:[25.0, \"","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"                               + \"50.0, 0.4, 2.0]%%math: CA1:[90.0, 100.0, 0.2, 1.0],\"","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"                                          + \"CA2:[31.0, 50.0, 0.4, 2.0]\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"joosxi"},"content":"                       new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"                       new Address(\"Blk 47 Tampines Street 20, #17-35\"), new StudentClass(\"2.6\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"                       new Attendance(), getRemarkSet(\"Introverted\"),","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"                       new SubjectHandler(\"english: CA1:[55.0, 100.0, 0.2, 1.0], CA2:[50.0, \"","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"                               + \"50.0, 0.4, 2.0]%%math: CA1:[76.0, 100.0, 0.2, 1.0],\"","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"                                          + \"CA2:[20.0, 50.0, 0.4, 2.0]\"),","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"                       getTagSet(\"Dean\u0027s List\", \"Financial Aid\")),","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"joosxi"},"content":"                       new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"                       new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new StudentClass(\"3.10\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"                       new Attendance(), getRemarkSet(),","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"                       new SubjectHandler(\"english: CA1:[88.0, 100.0, 0.2, 1.0], CA2:[38.0, \"","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"                               + \"50.0, 0.4, 2.0]%%math: CA1:[91.0, 100.0, 0.2, 1.0],\"","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"                                          + \"CA2:[40.0, 50.0, 0.4, 2.0]\"), new HashSet\u003c\u003e())","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"    public static ReadOnlyDatabase getSampleAddressBook() {","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"        Database sampleAb \u003d new Database();","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"        for (Student sampleStudent : getSamplePersons()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"Hoodineee"},"content":"            sampleAb.addPerson(sampleStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                     .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                     .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"     * Returns a remark set containing the list of strings given.","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"    public static Set\u003cRemark\u003e getRemarkSet(String... strings) {","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"                     .map(Remark::new)","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"                     .collect(Collectors.toSet());","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"e1010101":54,"Hoodineee":16,"joosxi":6,"-":24}},{"path":"src/main/java/seedu/watson/storage/DatabaseStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * Represents a storage for {@link Database}.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"public interface DatabaseStorage {","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     * Returns Database data as a {@link ReadOnlyDatabase}.","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     * @see #getDatabaseFilePath()","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"     * Saves the given {@link ReadOnlyDatabase} to the storage.","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     * @param database cannot be null.","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    void saveDatabase(ReadOnlyDatabase database) throws IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     * @see #saveDatabase(ReadOnlyDatabase)","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e1010101":18,"-":30}},{"path":"src/main/java/seedu/watson/storage/JsonAdaptedRemark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" * Jackson-friendly version of {@link Remark}.","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"public class JsonAdaptedRemark {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private final String remark;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     * Constructs a {@code JsonAdaptedRemark} with the given {@code remark}.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    public JsonAdaptedRemark(String remark) {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     * Converts a given {@code Remark} into this class for Jackson use.","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    public JsonAdaptedRemark(Remark source) {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        remark \u003d source.value;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    @JsonValue","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    public String getRemark() {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        return remark;","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     * Converts this Jackson-friendly adapted remark object into the model\u0027s {@code Remark} object.","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted remark.","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    public Remark toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        if (!Remark.isValidRemark(remark)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"            throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        return new Remark(remark);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"e1010101":47,"Hoodineee":1}},{"path":"src/main/java/seedu/watson/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Attendance;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.StudentClass;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.SubjectHandler;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    private final String studentClass;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    private final String attendance;","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"    private final String subjectHandler;","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    private final List\u003cJsonAdaptedRemark\u003e remarks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"joosxi"},"content":"                              @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"jgyj123"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"                              @JsonProperty(\"studentClass\") String studentClass,","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"                              @JsonProperty(\"attendance\") String attendance,","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"                              @JsonProperty(\"subjectHandler\") String subjectHandler,","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"                              @JsonProperty(\"remarks\") List\u003cJsonAdaptedRemark\u003e remarks,","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        this.studentClass \u003d studentClass;","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"        this.subjectHandler \u003d subjectHandler;","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"        if (remarks !\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"            this.remarks.addAll(remarks);","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        studentClass \u003d source.getStudentClass().value;","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"        attendance \u003d source.getAttendance().toString();","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"        subjectHandler \u003d source.getSubjectHandler().dataString();","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"        // Remarks follow the tag system","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"        remarks.addAll(source.getRemarks().stream()","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"                             .map(JsonAdaptedRemark::new)","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"                             .collect(Collectors.toList()));","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"        // Remarks follow the tag system","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"        final List\u003cRemark\u003e personRemarks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"        for (JsonAdaptedRemark remark : remarks) {","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"            personRemarks.add(remark.toModelType());","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"e1010101"},"content":"        if (studentClass \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"e1010101"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"e1010101"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentClass.class.getSimpleName()));","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"e1010101"},"content":"        final StudentClass modelStudentClass \u003d new StudentClass(studentClass);","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"e1010101"},"content":"        if (attendance \u003d\u003d null) {","lastModifiedDate":"2022-10-22"},{"lineNumber":146,"author":{"gitId":"e1010101"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-22"},{"lineNumber":147,"author":{"gitId":"e1010101"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Attendance.class.getSimpleName()));","lastModifiedDate":"2022-10-22"},{"lineNumber":148,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":149,"author":{"gitId":"e1010101"},"content":"        final Attendance modelAttendance \u003d new Attendance(Attendance.parseAttendanceFromJson(attendance));","lastModifiedDate":"2022-10-22"},{"lineNumber":150,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":151,"author":{"gitId":"Hoodineee"},"content":"        if (subjectHandler \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"Hoodineee"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"Hoodineee"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, SubjectHandler.class.getSimpleName()));","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"Hoodineee"},"content":"        final SubjectHandler modelSubjectHandler \u003d new SubjectHandler(subjectHandler);","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":159,"author":{"gitId":"e1010101"},"content":"        final Set\u003cRemark\u003e modelRemarks \u003d new HashSet\u003c\u003e(personRemarks);","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"e1010101"},"content":"        return new Student(modelName, modelPhone, modelEmail, modelAddress, modelStudentClass,","lastModifiedDate":"2022-10-31"},{"lineNumber":162,"author":{"gitId":"e1010101"},"content":"                          modelAttendance, modelRemarks, modelSubjectHandler, modelTags);","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jgyj123":2,"e1010101":47,"Hoodineee":32,"joosxi":1,"-":83}},{"path":"src/main/java/seedu/watson/storage/JsonAdaptedSubject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.Subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" * Jackson-friendly version of {@link Subject}.","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"public class JsonAdaptedSubject {","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private final String subjectName;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     * Constructs a {@code JsonAdaptedSubject} with the given {@code Subject}.","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    public JsonAdaptedSubject(String subjectName) {","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"        this.subjectName \u003d subjectName;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     * Converts a given {@code Subject} into this class for Jackson use.","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    public JsonAdaptedSubject(Subject source) {","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        subjectName \u003d source.getSubjectName();","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    @JsonValue","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    public String getSubjectName() {","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        return subjectName;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     * Converts this Jackson-friendly adapted subject object into the model\u0027s {@code Subject} object.","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted subject.","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    public Subject toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        if (!Subject.isValidSubject(subjectName)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"            throw new IllegalValueException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        return new Subject(subjectName);","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"e1010101":44,"Hoodineee":4}},{"path":"src/main/java/seedu/watson/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e1010101":3,"-":45}},{"path":"src/main/java/seedu/watson/storage/JsonDatabaseStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.FileUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.JsonUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":" * A class to access Database data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"public class JsonDatabaseStorage implements DatabaseStorage {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDatabaseStorage.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    private final Path filePath;","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    public JsonDatabaseStorage(Path filePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        return readDatabase(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     * Similar to {@link #readDatabase()}.","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        Optional\u003cJsonSerializableDatabase\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"            filePath, JsonSerializableDatabase.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"            logger.info(\"There was an issue parsing the JSON file. Using sample data instead.\");","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"            return Optional.of(SampleDataUtil.getSampleAddressBook());","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"    public void saveDatabase(ReadOnlyDatabase database) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"        saveDatabase(database, filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"     * Similar to {@link #saveDatabase(ReadOnlyDatabase)}.","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"    public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        requireNonNull(database);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDatabase(database), filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e1010101":28,"-":52}},{"path":"src/main/java/seedu/watson/storage/JsonSerializableDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":" * An Immutable Database that is serializable to JSON format.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"class JsonSerializableDatabase {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate student(s).\";","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"    private final List\u003cJsonAdaptedStudent\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     * Constructs a {@code JsonSerializableDatabase} with the given persons.","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"    public JsonSerializableDatabase(@JsonProperty(\"persons\") List\u003cJsonAdaptedStudent\u003e persons) {","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"     * Converts a given {@code ReadOnlyDatabase} into this class for Jackson use.","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableDatabase}.","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    public JsonSerializableDatabase(ReadOnlyDatabase source) {","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     * Converts this watson book into the model\u0027s {@code Database} object.","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    public Database toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        Database database \u003d new Database();","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : persons) {","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"            if (database.hasPerson(student)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"            database.addPerson(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        return database;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e1010101":14,"Hoodineee":9,"-":37}},{"path":"src/main/java/seedu/watson/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.JsonUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e1010101":8,"-":40}},{"path":"src/main/java/seedu/watson/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"public interface Storage extends DatabaseStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    void saveDatabase(ReadOnlyDatabase database) throws IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"e1010101":9,"-":23}},{"path":"src/main/java/seedu/watson/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":" * Manages storage of Database data in local storage.","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    private final DatabaseStorage databaseStorage;","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     * Creates a {@code StorageManager} with the given {@code DatabaseStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    public StorageManager(DatabaseStorage databaseStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        this.databaseStorage \u003d databaseStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Database methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        return databaseStorage.getDatabaseFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        return readDatabase(databaseStorage.getDatabaseFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        return databaseStorage.readDatabase(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"    public void saveDatabase(ReadOnlyDatabase database) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        saveDatabase(database, databaseStorage.getDatabaseFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"    public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"        databaseStorage.saveDatabase(database, filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":27,"-":50}},{"path":"src/main/java/seedu/watson/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * Represents a storage for {@link seedu.watson.model.UserPrefs}.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     * Saves the given {@link seedu.watson.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e1010101":8,"-":30}},{"path":"src/main/java/seedu/watson/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"         * @see seedu.watson.logic.Logic#execute(String)","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"e1010101":5,"-":80}},{"path":"src/main/java/seedu/watson/ui/GradeWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.Logic;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.Assessment;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.Subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.Storage;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"jgyj123"},"content":" * Controller for a GradeWindow page","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"jgyj123"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"jgyj123"},"content":"public class GradeWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"jgyj123"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(GradeWindow.class);","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"jgyj123"},"content":"    private static final String FXML \u003d \"GradeWindow.fxml\";","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"jgyj123"},"content":"    private String assessmentString;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"jgyj123"},"content":"    private int index \u003d 0;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"    private List\u003cStudent\u003e studentList;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    private final Logic logic;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    private final Storage storage;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"jgyj123"},"content":"    private Button submitButton;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"jgyj123"},"content":"    private Label assessmentName;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"jgyj123"},"content":"    private Label assessmentWeightage;","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"jgyj123"},"content":"    private Label studentClass;","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"jgyj123"},"content":"    private Label studentName;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"jgyj123"},"content":"    private Label assessmentSubject;","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"jgyj123"},"content":"    private Label assessmentTotalScore;","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"jgyj123"},"content":"    private TextField enteredScore;","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"jgyj123"},"content":"    private Label errorMessage;","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"jgyj123"},"content":"     * Creates a new GradeWindow.","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"jgyj123"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"jgyj123"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"    public GradeWindow(Stage root, Logic logic) {","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"jgyj123"},"content":"        super(FXML, root);","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"        this.storage \u003d logic.getStorage();","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        enteredScore.setOnKeyPressed(ke -\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"jgyj123"},"content":"            if (ke.getCode().equals(KeyCode.ENTER)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"                try {","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"jgyj123"},"content":"                    enterGradeForStudent();","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"jgyj123"},"content":"                }","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"jgyj123"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"jgyj123"},"content":"        });","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"jgyj123"},"content":"     * Creates a new GradeWindow.","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"    public GradeWindow(Logic logic) {","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"        this(new Stage(), logic);","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"jgyj123"},"content":"     * Shows the help window.","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"jgyj123"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"jgyj123"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"jgyj123"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"jgyj123"},"content":"     *                               if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"jgyj123"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"jgyj123"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"jgyj123"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"jgyj123"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"jgyj123"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"jgyj123"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"jgyj123"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"jgyj123"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"jgyj123"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"jgyj123"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"jgyj123"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"    public void show(List\u003cStudent\u003e studentList, String assessmentString) {","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"jgyj123"},"content":"        logger.fine(\"Showing the grading page.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"Hoodineee"},"content":"        this.studentList \u003d studentList;","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"jgyj123"},"content":"        this.assessmentString \u003d assessmentString;","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"jgyj123"},"content":"        startGrading();","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"jgyj123"},"content":"        updateUiToNextStudent();","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"Hoodineee"},"content":"     * updates UI Labels to the next student to be updated","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"jgyj123"},"content":"    public void updateUiToNextStudent() {","lastModifiedDate":"2022-11-01"},{"lineNumber":116,"author":{"gitId":"Hoodineee"},"content":"        if (index \u003e studentList.size() - 1) {","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"jgyj123"},"content":"            closeWindowAndResetIndex();","lastModifiedDate":"2022-10-31"},{"lineNumber":118,"author":{"gitId":"jgyj123"},"content":"            return;","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"jgyj123"},"content":"        errorMessage.setText(\"\");","lastModifiedDate":"2022-10-31"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"        // parse assessment string","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"jgyj123"},"content":"        String[] parsedString \u003d assessmentString.split(\"_\");","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"Hoodineee"},"content":"        String subject \u003d parsedString[0].trim().toUpperCase();","lastModifiedDate":"2022-10-31"},{"lineNumber":124,"author":{"gitId":"Hoodineee"},"content":"        String name \u003d parsedString[1].trim().toUpperCase();","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"jgyj123"},"content":"        String totalScore \u003d parsedString[2].trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"jgyj123"},"content":"        String weightage \u003d parsedString[3].trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"Hoodineee"},"content":"        Student currentStudent \u003d studentList.get(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"jgyj123"},"content":"        assessmentSubject.setText(\"Subject: \" + subject);","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"jgyj123"},"content":"        assessmentName.setText(\"Assessment: \" + name);","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"jgyj123"},"content":"        assessmentWeightage.setText(\"Weightage: \" + weightage);","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"jgyj123"},"content":"        assessmentTotalScore.setText(\"Total Score: \" + totalScore);","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"Hoodineee"},"content":"        studentName.setText(\"Student Name: \" + currentStudent.getName().toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"Hoodineee"},"content":"        studentClass.setText(\"Student Class: \" + currentStudent.getStudentClass());","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"jgyj123"},"content":"     * Updates Grades of current student in focus","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"jgyj123"},"content":"     * @param mark score received for the assignment","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"jgyj123"},"content":"    public void updateGradesForCurrentStudent(String mark) {","lastModifiedDate":"2022-10-31"},{"lineNumber":141,"author":{"gitId":"jgyj123"},"content":"        try {","lastModifiedDate":"2022-10-31"},{"lineNumber":142,"author":{"gitId":"jgyj123"},"content":"            String[] parsedString \u003d assessmentString.split(\"_\");","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"Hoodineee"},"content":"            String subjectName \u003d parsedString[0].trim().toUpperCase();","lastModifiedDate":"2022-10-31"},{"lineNumber":144,"author":{"gitId":"Hoodineee"},"content":"            String name \u003d parsedString[1].trim().toUpperCase();","lastModifiedDate":"2022-10-31"},{"lineNumber":145,"author":{"gitId":"jgyj123"},"content":"            double score \u003d Double.parseDouble(mark);","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"jgyj123"},"content":"            double totalScore \u003d Double.parseDouble(parsedString[2].trim());","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"jgyj123"},"content":"            double weightage \u003d Double.parseDouble(parsedString[3].trim());","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"jgyj123"},"content":"            double difficulty \u003d Double.parseDouble(parsedString[4].trim());","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"Hoodineee"},"content":"            Assessment newAssessment \u003d new Assessment(name, score, totalScore, weightage, difficulty);","lastModifiedDate":"2022-10-30"},{"lineNumber":150,"author":{"gitId":"Hoodineee"},"content":"            Student currentStudent \u003d studentList.get(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"Hoodineee"},"content":"            Subject subject \u003d currentStudent.getSubjectHandler().getSubject(subjectName);","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"e1010101"},"content":"            subject.updateGradeAssessment(newAssessment);","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"Hoodineee"},"content":"            logic.getModel().setPerson(currentStudent, currentStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"e1010101"},"content":"            storage.saveDatabase(logic.getModel().getDatabase());","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"jgyj123"},"content":"            updateIndexToNextStudent();","lastModifiedDate":"2022-11-01"},{"lineNumber":156,"author":{"gitId":"jgyj123"},"content":"            updateUiToNextStudent();","lastModifiedDate":"2022-11-01"},{"lineNumber":157,"author":{"gitId":"jgyj123"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-31"},{"lineNumber":158,"author":{"gitId":"jgyj123"},"content":"            errorMessage.setText(\"Please enter a valid number\");","lastModifiedDate":"2022-10-31"},{"lineNumber":159,"author":{"gitId":"jgyj123"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-31"},{"lineNumber":160,"author":{"gitId":"jgyj123"},"content":"            errorMessage.setText(e.getMessage());","lastModifiedDate":"2022-10-31"},{"lineNumber":161,"author":{"gitId":"jgyj123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-31"},{"lineNumber":162,"author":{"gitId":"jgyj123"},"content":"            errorMessage.setText(e.getMessage());","lastModifiedDate":"2022-10-31"},{"lineNumber":163,"author":{"gitId":"jgyj123"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-10-31"},{"lineNumber":164,"author":{"gitId":"jgyj123"},"content":"            errorMessage.setText(\"Please enter a number\");","lastModifiedDate":"2022-10-31"},{"lineNumber":165,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":166,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"jgyj123"},"content":"     * Returns true if the grading window is currently being shown.","lastModifiedDate":"2022-11-05"},{"lineNumber":169,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"jgyj123"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"jgyj123"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"jgyj123"},"content":"     * Hides the grading window.","lastModifiedDate":"2022-11-05"},{"lineNumber":176,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"jgyj123"},"content":"    public void hide() {","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"jgyj123"},"content":"        getRoot().hide();","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"jgyj123"},"content":"     * Focuses on the grading window.","lastModifiedDate":"2022-11-05"},{"lineNumber":183,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"jgyj123"},"content":"    public void focus() {","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"jgyj123"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"jgyj123"},"content":"    public void updateIndexToNextStudent() {","lastModifiedDate":"2022-11-01"},{"lineNumber":188,"author":{"gitId":"jgyj123"},"content":"        index +\u003d 1;","lastModifiedDate":"2022-10-31"},{"lineNumber":189,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":190,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":191,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":192,"author":{"gitId":"jgyj123"},"content":"     * Starts the grading process","lastModifiedDate":"2022-11-01"},{"lineNumber":193,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":194,"author":{"gitId":"jgyj123"},"content":"    public void startGrading() {","lastModifiedDate":"2022-11-01"},{"lineNumber":195,"author":{"gitId":"jgyj123"},"content":"        getRoot().show();","lastModifiedDate":"2022-11-01"},{"lineNumber":196,"author":{"gitId":"jgyj123"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-11-01"},{"lineNumber":197,"author":{"gitId":"jgyj123"},"content":"        //reset index to 0","lastModifiedDate":"2022-11-01"},{"lineNumber":198,"author":{"gitId":"jgyj123"},"content":"        index \u003d 0;","lastModifiedDate":"2022-11-01"},{"lineNumber":199,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":200,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":201,"author":{"gitId":"jgyj123"},"content":"     * Closes the GradeWindow and resets the index to 0","lastModifiedDate":"2022-11-01"},{"lineNumber":202,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":203,"author":{"gitId":"jgyj123"},"content":"    public void closeWindowAndResetIndex() {","lastModifiedDate":"2022-10-31"},{"lineNumber":204,"author":{"gitId":"jgyj123"},"content":"        hide();","lastModifiedDate":"2022-10-31"},{"lineNumber":205,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":206,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"jgyj123"},"content":"     * Method to handle when a grade is entered for a student","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"e1010101"},"content":"    public void enterGradeForStudent() throws IOException {","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"jgyj123"},"content":"        updateGradesForCurrentStudent(enteredScore.getText());","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"jgyj123"},"content":"        enteredScore.clear();","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"jgyj123":175,"e1010101":20,"Hoodineee":19}},{"path":"src/main/java/seedu/watson/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"xiaoying1129"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-t08-1.github.io/tp/UserGuide.html \";","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *                               if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e1010101":4,"xiaoying1129":1,"-":97}},{"path":"src/main/java/seedu/watson/ui/LoginErrorWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" * Controller for a login error page","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"public class LoginErrorWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public static final String ERROR_MESSAGE \u003d \"Error: Invalid credentials!\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        LoginErrorWindow.class","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    );","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    private static final String FXML \u003d \"LoginErrorWindow.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private Label errorMessage;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * Creates a new LoginErrorWindow.","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * @param root Stage to use as the root of the LoginErrorWindow.","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public LoginErrorWindow(Stage root) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        super(FXML, root);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        errorMessage.setText(ERROR_MESSAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"     * Creates a new LoginErrorWindow.","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    public LoginErrorWindow() {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        this(new Stage());","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     * Shows the help window.","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    public void show() {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        logger.fine(\"Error: Invalid credentials!\");","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        getRoot().show();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     * Hides the help window.","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    public void hide() {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        getRoot().hide();","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"     * Focuses on the help window.","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"    public void focus() {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"e1010101":71}},{"path":"src/main/java/seedu/watson/ui/LoginWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.text.FontPosture;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"jgyj123"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.auth.AuthHandler;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.Logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":" * Class that handles the login window.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"public class LoginWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    private static final String FXML \u003d \"Login.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    private Stage primaryStage;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    private Logic logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    private LoginErrorWindow loginErrorWindow;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     * Creates a {@code LoginWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    public LoginWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        // Set dependencies","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"        this.loginErrorWindow \u003d new LoginErrorWindow();","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"jgyj123"},"content":"        //Welcome Header","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"jgyj123"},"content":"        Text welcomeHeader \u003d new Text(\"Welcome to Watson!\");","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"jgyj123"},"content":"        welcomeHeader.setFont(Font.font(\"verdana\", FontWeight.BOLD, FontPosture.REGULAR, 30));","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"jgyj123"},"content":"        //Description Header","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"jgyj123"},"content":"        Text descriptionHeader \u003d new Text(\"Your friendly teaching assistant\");","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"jgyj123"},"content":"        descriptionHeader.setFont(Font.font(\"verdana\", FontWeight.NORMAL, FontPosture.REGULAR, 15));","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"jgyj123"},"content":"        //prompt text","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"jgyj123"},"content":"        Text promptLogin \u003d new Text(\"For testing purposes, use username:admin, password:admin\");","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"jgyj123"},"content":"        promptLogin.setFont(Font.font(\"verdana\", FontWeight.NORMAL, FontPosture.REGULAR, 15));","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"jgyj123"},"content":"        promptLogin.setFill(Color.RED);","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"jgyj123"},"content":"        // Logo","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"jgyj123"},"content":"        Image logo \u003d new Image(\"images/teachings.png\");","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"jgyj123"},"content":"        ImageView imageView \u003d new ImageView(logo);","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"jgyj123"},"content":"        imageView.setFitWidth(150);","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"jgyj123"},"content":"        imageView.setFitHeight(150);","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        // Holder for text fields","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        VBox vb \u003d new VBox();","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"        HBox nameHolder \u003d new HBox();","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        HBox passwordHolder \u003d new HBox();","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        // Name field","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jgyj123"},"content":"        Label nameLabel \u003d new Label(\"Username:\");","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"jgyj123"},"content":"        nameLabel.setMinWidth(70);","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        final TextField nameField \u003d new TextField();","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"        nameHolder.getChildren().addAll(nameLabel, nameField);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        nameHolder.setAlignment(Pos.CENTER);","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        // Password field","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"        Label passwordLabel \u003d new Label(\"Password:\");","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jgyj123"},"content":"        passwordLabel.setMinWidth(70);","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"        final TextField passwordField \u003d new TextField();","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"        passwordHolder.getChildren().addAll(passwordLabel, passwordField);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"        passwordHolder.setAlignment(Pos.CENTER);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        // Submit button","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"jgyj123"},"content":"        Button submit \u003d new Button(\"Login\");","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"        // Textfield event handler","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"        // Setting an action for the Submit button","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"        submit.setOnAction(","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"            new EventHandler\u003cActionEvent\u003e() {","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"                // Dynamically make an event handler for each button","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"                @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"                public void handle(ActionEvent e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"                    if ((nameField.getText() !\u003d null \u0026\u0026 !nameField.getText().isEmpty())","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"                        \u0026\u0026 (passwordField.getText() !\u003d null \u0026\u0026 !passwordField.getText().isEmpty())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"                        String nameText \u003d nameField.getText();","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"                        String passwordText \u003d passwordField.getText();","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"                        if (AuthHandler.checkCredentials(nameText, passwordText)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"                            // If the credentials are correct, show the main window","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"                            primaryStage.hide();","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"                            MainWindow mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"                            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"                            mainWindow.fillInnerParts();","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"                        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"                            // If the credentials are wrong, show an error message","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"                            if (!loginErrorWindow.isShowing()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"                                loginErrorWindow.show();","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"                            } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"                                loginErrorWindow.focus();","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"                            }","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"                        }","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"                    } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"                        throw new IllegalArgumentException(\"Password cannot be empty\");","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"                    }","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"        // Combining all components","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"jgyj123"},"content":"        vb.getChildren().addAll(welcomeHeader, descriptionHeader, imageView,","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"jgyj123"},"content":"                nameHolder, passwordHolder, submit, promptLogin);","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"e1010101"},"content":"        vb.setSpacing(10);","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"e1010101"},"content":"        vb.setAlignment(Pos.CENTER);","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"e1010101"},"content":"        Scene scene1 \u003d new Scene(vb, 400, 250);","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"e1010101"},"content":"        primaryStage.setScene(scene1);","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"e1010101"},"content":"        // Configure the UI","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"e1010101"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"e1010101"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"e1010101"},"content":"        return primaryStage;","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"e1010101"},"content":"    void show() {","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"e1010101"},"content":"        primaryStage.show();","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"e1010101"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"e1010101"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"e1010101"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"e1010101"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"e1010101"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"e1010101"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"e1010101"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jgyj123":32,"e1010101":118}},{"path":"src/main/java/seedu/watson/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.Logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    private PredictionWindow predictionWindow;","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jgyj123"},"content":"    private GradeWindow gradeWindow;","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        predictionWindow \u003d new PredictionWindow();","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"        gradeWindow \u003d new GradeWindow(logic);","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"Hoodineee"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"Hoodineee"},"content":"        personListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"e1010101"},"content":"     * Opens the prediction window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-10-21"},{"lineNumber":159,"author":{"gitId":"e1010101"},"content":"     * Displays the predicted grade for the next assessment the student would take","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"e1010101"},"content":"     * for the queried subject.","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"e1010101"},"content":"     * @param predictedGrade the predicted grade to show","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"e1010101"},"content":"    public void handlePrediction(String predictedGrade) {","lastModifiedDate":"2022-10-22"},{"lineNumber":165,"author":{"gitId":"e1010101"},"content":"        if (!predictionWindow.isShowing()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"e1010101"},"content":"            predictionWindow.show(predictedGrade);","lastModifiedDate":"2022-10-22"},{"lineNumber":167,"author":{"gitId":"e1010101"},"content":"        } else {","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"e1010101"},"content":"            predictionWindow.focus();","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"joosxi"},"content":"     * Opens the grade window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-10-31"},{"lineNumber":174,"author":{"gitId":"jgyj123"},"content":"     * Displays the predicted grade for the next assessment the student would take","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"jgyj123"},"content":"     * for the queried subject.","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"Hoodineee"},"content":"    public void handleGrade(List\u003cStudent\u003e studentList, String assessmentString) {","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"jgyj123"},"content":"        if (!gradeWindow.isShowing()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"Hoodineee"},"content":"            gradeWindow.show(studentList, assessmentString);","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"jgyj123"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"jgyj123"},"content":"            gradeWindow.focus();","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                                                  (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":202,"author":{"gitId":"Hoodineee"},"content":"    public StudentListPanel getPersonListPanel() {","lastModifiedDate":"2022-10-28"},{"lineNumber":203,"author":{"gitId":"Hoodineee"},"content":"        return studentListPanel;","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"e1010101"},"content":"     * @see seedu.watson.logic.Logic#execute(String)","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"e1010101"},"content":"            if (commandResult.isShowPrediction()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":222,"author":{"gitId":"e1010101"},"content":"                handlePrediction(commandResult.getGradePredicted());","lastModifiedDate":"2022-10-21"},{"lineNumber":223,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":224,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":225,"author":{"gitId":"jgyj123"},"content":"            if (commandResult.isShowGradeWindow()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"jgyj123"},"content":"                handleGrade(commandResult.getStudentsToGrade(), commandResult.getAssessmentString());","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"jgyj123"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jgyj123":17,"e1010101":31,"Hoodineee":8,"joosxi":1,"-":183}},{"path":"src/main/java/seedu/watson/ui/PredictionWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" * Controller for a help page","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"public class PredictionWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PredictionWindow.class);","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    private static final String FXML \u003d \"PredictionWindow.fxml\";","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private Label prediction;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public PredictionWindow(Stage root) {","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        super(FXML, root);","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    public PredictionWindow() {","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        this(new Stage());","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     * Shows the help window.","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"     *                               if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"    public void show(String inputPrediction) {","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"        prediction.setText(inputPrediction);","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        getRoot().show();","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"     * Hides the help window.","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"    public void hide() {","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        getRoot().hide();","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"     * Focuses on the help window.","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"    public void focus() {","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"    private void copyUrl() {","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"e1010101":97}},{"path":"src/main/java/seedu/watson/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e1010101":1,"-":27}},{"path":"src/main/java/seedu/watson/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":1,"-":27}},{"path":"src/main/java/seedu/watson/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"joosxi"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"joosxi"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"joosxi"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"joosxi"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on Database level 4\u003c/a\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"    public final Student student;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    private Label studentClass;","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"jgyj123"},"content":"    private Label attendance;","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"jgyj123"},"content":"    private Label grade;","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"jgyj123"},"content":"    private Label subjects;","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"joosxi"},"content":"    private Label blankLine;","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"joosxi"},"content":"    @FXML","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":55,"author":{"gitId":"jgyj123"},"content":"    @FXML","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"jgyj123"},"content":"    private Label remarks;","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"     * Creates a {@code PersonCode} with the given {@code Student} and index to display.","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"        this.student \u003d student;","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"joosxi"},"content":"        name.setText(displayedIndex + \". \" + student.getName().fullName);","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"joosxi"},"content":"        phone.setText(\"Phone: \" + student.getPhone().value);","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"joosxi"},"content":"        address.setText(\"Address: \" + student.getAddress().value);","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"joosxi"},"content":"        email.setText(\"Email: \" + student.getEmail().value);","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"        studentClass.setText(\"Class: \" + student.getStudentClass().toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"jgyj123"},"content":"        remarks.setText(\"Remarks: \" + student.getRemarksString());","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"joosxi"},"content":"        attendance.setText(\"Attendance: \" + student.getAttendance().guiString());","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"joosxi"},"content":"        if (student.getAttendance().hasGoodAttendance()) {","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"joosxi"},"content":"            attendance.setBackground(new Background(new BackgroundFill(Color.GREEN,","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"joosxi"},"content":"                                                                       new CornerRadii(3), null)));","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"joosxi"},"content":"        } else {","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"joosxi"},"content":"            attendance.setBackground(new Background(new BackgroundFill(Color.RED,","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"joosxi"},"content":"                                                                       new CornerRadii(3), null)));","lastModifiedDate":"2022-10-31"},{"lineNumber":77,"author":{"gitId":"joosxi"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"        subjects.setText(student.getSubjectHandler().toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"joosxi"},"content":"        blankLine \u003d new Label();","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"        student.getTags().stream()","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"              .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"        return student.equals(card.student);","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jgyj123":9,"e1010101":5,"Hoodineee":13,"joosxi":20,"-":55}},{"path":"src/main/java/seedu/watson/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2022-10-29"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"        super(FXML);","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-10-29"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        studentListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2022-10-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"    class PersonListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"                setText(null);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"e1010101":3,"Hoodineee":46}},{"path":"src/main/java/seedu/watson/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"e1010101":4,"-":11}},{"path":"src/main/java/seedu/watson/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.MainApp;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.Logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/book.png\";","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    private LoginWindow login;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"            // Login page implemented (v1.2)","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"            login \u003d new LoginWindow(primaryStage, logic);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"            login.show();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    private static void showAlertDialogAndWait(","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        Stage owner,","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        AlertType type,","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"        String title,","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        String headerText,","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        String contentText","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"    ) {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"    void showAlertDialogAndWait(","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"        Alert.AlertType type,","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"        String title,","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"        String headerText,","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"        String contentText","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"    ) {","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        showAlertDialogAndWait(","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"            mainWindow.getPrimaryStage(),","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"            type,","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"            title,","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"            headerText,","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"            contentText","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"        showAlertDialogAndWait(","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"            Alert.AlertType.ERROR,","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"            title,","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"            e.getMessage(),","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"            e.toString()","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e1010101":36,"-":72}},{"path":"src/main/java/seedu/watson/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.MainApp;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e1010101":18,"-":75}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"e1010101":1,"-":7}},{"path":"src/main/resources/view/GradeWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"#copyButton, #assessmentName, #assessmentWeightage, #assessmentTotalScore, #assessmentSubject, #studentClass,","lastModifiedDate":"2022-10-31"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"#studentName {","lastModifiedDate":"2022-10-31"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"#errorMessage {","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"    -fx-text-fill: red;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"#copyButton {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"#copyButton:hover {","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"jgyj123"},"content":"#copyButton:armed {","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"jgyj123"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"jgyj123"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"jgyj123"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"jgyj123"},"content":"    -fx-spacing: 5;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"jgyj123":29}},{"path":"src/main/resources/view/GradeWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Enter Grade\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"jgyj123"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"jgyj123"},"content":"                \u003cURL value\u003d\"@GradeWindow.css\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"jgyj123"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"jgyj123"},"content":"            \u003cVBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"jgyj123"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"                    \u003cHBox prefHeight\u003d\"40.0\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"                        \u003cLabel fx:id\u003d\"errorMessage\" wrapText\u003d\"true\"/\u003e\u003c/HBox\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"                    \u003cLabel fx:id\u003d\"studentName\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"jgyj123"},"content":"                    \u003cLabel fx:id\u003d\"assessmentSubject\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"jgyj123"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"jgyj123"},"content":"                    \u003cLabel fx:id\u003d\"assessmentName\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"jgyj123"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"jgyj123"},"content":"                    \u003cLabel fx:id\u003d\"assessmentWeightage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"jgyj123"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"jgyj123"},"content":"                    \u003cLabel fx:id\u003d\"assessmentTotalScore\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"jgyj123"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"jgyj123"},"content":"                    \u003cLabel fx:id\u003d\"studentClass\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"jgyj123"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"jgyj123"},"content":"                    \u003cHBox fx:id \u003d \"inputBox\" alignment \u003d \"CENTER\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"                        \u003cTextField fx:id\u003d\"enteredScore\" promptText\u003d\"Enter grade here\"/\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"jgyj123"},"content":"                        \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction \u003d \"#enterGradeForStudent\" text\u003d\"Enter\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"jgyj123"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"jgyj123"},"content":"                                \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"jgyj123"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"jgyj123"},"content":"                        \u003c/Button\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"jgyj123"},"content":"                    \u003c/HBox\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"jgyj123"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jgyj123"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"jgyj123"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"jgyj123"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"jgyj123"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"jgyj123"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"jgyj123"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"jgyj123"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"jgyj123"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"jgyj123"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"jgyj123"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"jgyj123":51,"e1010101":5}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"jgyj123"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" \u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"jgyj123":1,"e1010101":3,"-":37}},{"path":"src/main/resources/view/Login.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"         title\u003d\"Login\" minWidth\u003d\"450\" minHeight\u003d\"600\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jgyj123":2,"e1010101":6}},{"path":"src/main/resources/view/LoginErrorWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Error\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"errorMessageContainer\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"                    \u003cLabel fx:id\u003d\"errorMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"e1010101":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"         title\u003d\"Watson\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"        \u003cImage url\u003d\"@/images/teachings.png\"/\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"                \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"                      VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jgyj123":2,"e1010101":4,"Hoodineee":1,"-":53}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"            \u003cLabel fx:id\u003d\"studentClass\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentClass\"/\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jgyj123"},"content":"            \u003cLabel fx:id\u003d\"attendance\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$attendance\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"joosxi"},"content":"            \u003cLabel fx:id\u003d\"blankLine\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"jgyj123"},"content":"            \u003cLabel fx:id\u003d\"subjects\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$subjects\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"jgyj123"},"content":"            \u003cLabel fx:id\u003d\"remarks\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remarks\"/\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    \u003cHBox alignment \u003d \"center\"\u003e\u003cImageView fitWidth \u003d \"120\" fitHeight \u003d \"120\"\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        \u003cImage url\u003d\"@/images/reading-book.png\"/\u003e\u003c/ImageView\u003e\u003c/HBox\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jgyj123":8,"e1010101":5,"joosxi":1,"-":34}},{"path":"src/main/resources/view/PredictionWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"#prediction {","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"#predictionMessageContainer {","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"e1010101":7}},{"path":"src/main/resources/view/PredictionWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Prediction\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"                \u003cURL value\u003d\"@PredictionWindow.css\"/\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"predictionMessageContainer\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"                    \u003cLabel fx:id\u003d\"prediction\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"e1010101":34}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"e1010101":2,"-":6}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"e1010101":1,"-":10}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"    \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":2,"-":5}},{"path":"src/test/java/seedu/watson/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"e1010101":1,"-":57}},{"path":"src/test/java/seedu/watson/auth/AuthHandlerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.auth;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"public class AuthHandlerTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    private final String testUsername \u003d \"admin\";","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    private final String testPassword \u003d \"admin\";","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public void testCheckCredentials() {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"        assertEquals(testUsername, Credentials.getDebugUsername());","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"        assertEquals(testPassword, Credentials.getDebugPassword());","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"e1010101":17}},{"path":"src/test/java/seedu/watson/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                                       + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"e1010101":1,"-":26}},{"path":"src/test/java/seedu/watson/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":2,"-":133}},{"path":"src/test/java/seedu/watson/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.core.index;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"e1010101":2,"-":58}},{"path":"src/test/java/seedu/watson/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"        assertNotNull(AppUtil.getImage(\"/images/book.png\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"e1010101":3,"-":33}},{"path":"src/test/java/seedu/watson/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"e1010101":3,"-":105}},{"path":"src/test/java/seedu/watson/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Config;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"               ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"               : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e1010101":4,"-":112}},{"path":"src/test/java/seedu/watson/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":2,"-":21}},{"path":"src/test/java/seedu/watson/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.testutil.TestUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":3,"-":42}},{"path":"src/test/java/seedu/watson/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                             .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"e1010101":2,"-":140}},{"path":"src/test/java/seedu/watson/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.STUDENTCLASS_DUMMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_SUBJECTHANDLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.ListCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.JsonDatabaseStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"import seedu.watson.storage.StorageManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        JsonDatabaseStorage databaseStorage \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"            new JsonDatabaseStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        StorageManager storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        // Setup LogicManager with JsonDatabaseIoExceptionThrowingStub","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"        JsonDatabaseStorage addressBookStorage \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"            new JsonDatabaseIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"joosxi"},"content":"                            + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"                            + ADDRESS_DESC_AMY + STUDENTCLASS_DUMMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().withRemarks()","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"Hoodineee"},"content":"                .withSubjectHandler(VALID_SUBJECTHANDLER).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"        expectedModel.addPerson(expectedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"e1010101"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"e1010101"},"content":"    private static class JsonDatabaseIoExceptionThrowingStub extends JsonDatabaseStorage {","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"e1010101"},"content":"        private JsonDatabaseIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"e1010101"},"content":"        public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"e1010101":41,"Hoodineee":6,"joosxi":1,"-":125}},{"path":"src/test/java/seedu/watson/logic/algorithm/PredictionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.algorithm;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Attendance;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.Grades;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"public class PredictionTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    private final double expectedResult \u003d 78.90970887629169;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    public void execute_validGradeInput_prediction() {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        double testResult \u003d PredictionUtil.predictGrade(new GradeStub(), new AttendanceStub(), 2.5);","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        assertEquals(expectedResult, testResult);","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    static class GradeStub extends Grades {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        private final ArrayList\u003cString\u003e assessments \u003d new ArrayList\u003c\u003e(Set.of(\"FirstTest\", \"SecondTest\", \"ThirdTest\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        public ArrayList\u003cString\u003e getAllAssessments() {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"            return assessments;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        public double[] getRawPercentages() {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"            return new double[]{0.80625, 0.78, 0.8625};","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        public double[] getDifficulties() {","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"            return new double[]{1.0, 2.5, 2.0};","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        public double[] getGradeForAssessment(String assessment) {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"            if (assessment.equals(\"FirstTest\")) {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"                return new double[]{64.5, 80, 0.1, 1.0};","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"            } else if (assessment.equals(\"SecondTest\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"                return new double[]{78, 100, 0.3, 2.5};","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"            } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"                return new double[]{69, 80, 0.1, 2.0};","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    static class AttendanceStub extends Attendance {","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        public int[] getAttendanceDetails() {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"            return new int[]{0, 1, 1};","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"e1010101":59,"Hoodineee":2}},{"path":"src/test/java/seedu/watson/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.getTypicalDatabase;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"        expectedModel.addPerson(validStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"                             String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"        Student studentInList \u003d model.getDatabase().getPersonList().get(0);","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"e1010101":8,"Hoodineee":9,"-":28}},{"path":"src/test/java/seedu/watson/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.personsAdded);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"Hoodineee"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"     * A default model stub that have all methods failing.","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"        public void setAddressBook(ReadOnlyDatabase newData) {","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"Hoodineee"},"content":"        public boolean hasPerson(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"e1010101"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"e1010101"},"content":"        public Student getStudentByName(Name name) {","lastModifiedDate":"2022-10-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"Hoodineee"},"content":"        public void deletePerson(Student target) {","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"Hoodineee"},"content":"        public void addPerson(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"Hoodineee"},"content":"        public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"Hoodineee"},"content":"        public ObservableList\u003cStudent\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"Hoodineee"},"content":"        public void updateFilteredPersonList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"Hoodineee"},"content":"        public Predicate\u003cStudent\u003e createPersonIsInClassPredicate(String studentClass) {","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"Hoodineee"},"content":"        public void sortListByGrade(boolean isInAscending, String subjectName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"Hoodineee"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"Hoodineee"},"content":"        private final Student student;","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"Hoodineee"},"content":"        ModelStubWithPerson(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"Hoodineee"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"Hoodineee"},"content":"            this.student \u003d student;","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"Hoodineee"},"content":"        public boolean hasPerson(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"Hoodineee"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"Hoodineee"},"content":"            return this.student.isSamePerson(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"Hoodineee"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"Hoodineee"},"content":"        final ArrayList\u003cStudent\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"Hoodineee"},"content":"        public void addPerson(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"Hoodineee"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"Hoodineee"},"content":"            personsAdded.add(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"e1010101"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"e1010101"},"content":"            return new Database();","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"Hoodineee"},"content":"        public boolean hasPerson(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"Hoodineee"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"Hoodineee"},"content":"            return personsAdded.stream().anyMatch(student::isSamePerson);","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"e1010101":17,"Hoodineee":37,"-":156}},{"path":"src/test/java/seedu/watson/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.getTypicalDatabase;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        expectedModel.setAddressBook(new Database());","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"e1010101":9,"Hoodineee":1,"-":22}},{"path":"src/test/java/seedu/watson/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"e1010101":1,"-":53}},{"path":"src/test/java/seedu/watson/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_INDEX_NUMBERS;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_STUDENTCLASS;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.FindCommandPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"joosxi"},"content":"    public static final String VALID_INDEX_NUMBER_AMY \u003d \"21\";","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"joosxi"},"content":"    public static final String VALID_INDEX_NUMBER_BOB \u003d \"17\";","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    public static final String INVALID_TAG \u003d \"#####\";","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    // New fields","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    public static final String VALID_STUDENTCLASS \u003d \"1A\";","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"    public static final String VALID_SUBJECTHANDLER \u003d \"english: CA1:[80.0, 100.0, 0.2, 1.0], \"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"                                                      + \"CA2:[30.0, 56.0, 0.4, 2.0]\";","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    // StudentClass examples","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"    public static final String STUDENTCLASS_DUMMY \u003d \" \" + PREFIX_STUDENTCLASS + VALID_STUDENTCLASS;","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    // Remark examples","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    public static final String VALID_REMARK_ICE_CREAM \u003d \"likes ice cream\";","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"xiaoying1129"},"content":"    public static final String VALID_REMARK_COFFEE \u003d \"likes coffee\";","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    public static final String REMARK_ICE_CREAM \u003d \" \" + PREFIX_REMARK + VALID_REMARK_ICE_CREAM;","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"joosxi"},"content":"    public static final String INDEX_NUMBER_DESC_AMY \u003d \" \" + PREFIX_INDEX_NUMBERS + VALID_INDEX_NUMBER_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"joosxi"},"content":"    public static final String INDEX_NUMBER_DESC_BOB \u003d \" \" + PREFIX_INDEX_NUMBERS + VALID_INDEX_NUMBER_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \"","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        + PREFIX_TAG + INVALID_TAG; // tag cannot contain special characters","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"                                                    .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"                                                    .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                                                    .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"                                                    .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"                                                    .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                                                    .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"Hoodineee"},"content":"     * - the watson book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"e1010101"},"content":"        Database expectedDatabase \u003d new Database(actualModel.getDatabase());","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"Hoodineee"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":135,"author":{"gitId":"e1010101"},"content":"        assertEquals(expectedDatabase, actualModel.getDatabase());","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"Hoodineee"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"e1010101"},"content":"     * {@code model}\u0027s watson book.","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"Hoodineee"},"content":"        Student student \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"Hoodineee"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":149,"author":{"gitId":"joosxi"},"content":"        List\u003cString\u003e predicateKeywordList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":150,"author":{"gitId":"joosxi"},"content":"        Collections.addAll(predicateKeywordList, splitName[0], \"\", \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":151,"author":{"gitId":"joosxi"},"content":"        List\u003cString\u003e unmodifiablePredicateKeywordList \u003d Collections.unmodifiableList(predicateKeywordList);","lastModifiedDate":"2022-11-01"},{"lineNumber":152,"author":{"gitId":"joosxi"},"content":"        model.updateFilteredPersonList(new FindCommandPredicate(unmodifiablePredicateKeywordList));","lastModifiedDate":"2022-11-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"e1010101":35,"Hoodineee":12,"joosxi":10,"xiaoying1129":1,"-":99}},{"path":"src/test/java/seedu/watson/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.getTypicalDatabase;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"        Student studentToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        expectedModel.deletePerson(studentToDelete);","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"        Student studentToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        System.out.println(model.getDatabase().getPersonList());","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"        expectedModel.deletePerson(studentToDelete);","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"        // ensures that outOfBoundIndex is still in bounds of watson book list","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getPersonList().size());","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"e1010101":17,"Hoodineee":9,"-":83}},{"path":"src/test/java/seedu/watson/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_SUBJECTHANDLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.getTypicalDatabase;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"        Student lastStudent \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"        StudentBuilder personInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"        Student editedStudent \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"                                          .withSubjectHandler(VALID_SUBJECTHANDLER)","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                                          .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"                                                                           .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"                                                                           .withSubjectHandler(VALID_SUBJECTHANDLER)","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"                                                                           .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"        expectedModel.setPerson(lastStudent, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"        Student editedStudent \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"        Student studentInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"                                                                         .withSubjectHandler(VALID_SUBJECTHANDLER)","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"                                                                         .build();","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"                                                  new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"Hoodineee"},"content":"                                                          .withSubjectHandler(VALID_SUBJECTHANDLER).build());","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"Hoodineee"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"Hoodineee"},"content":"        Student firstStudent \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"Hoodineee"},"content":"        // edit student in filtered list into a duplicate in watson book","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"Hoodineee"},"content":"        Student studentInList \u003d model.getDatabase().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"Hoodineee"},"content":"                                                  new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"e1010101"},"content":"     * but smaller than size of watson book","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"e1010101"},"content":"        // ensures that outOfBoundIndex is still in bounds of watson book list","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"e1010101"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getPersonList().size());","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"Hoodineee"},"content":"                                                  new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"e1010101":29,"Hoodineee":33,"-":118}},{"path":"src/test/java/seedu/watson/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"        // different watson -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"e1010101":10,"Hoodineee":7,"-":41}},{"path":"src/test/java/seedu/watson/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"e1010101":5,"-":15}},{"path":"src/test/java/seedu/watson/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.testutil.TypicalStudents.DANIEL;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"joosxi"},"content":"import static seedu.watson.testutil.TypicalStudents.GEORGE;","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.getTypicalDatabase;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"joosxi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.FindCommandPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        FindCommandPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"            new FindCommandPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        FindCommandPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"            new FindCommandPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"joosxi"},"content":"    /*@Test","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        FindCommandPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        FindCommandPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"joosxi"},"content":"    }*/","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"joosxi"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"joosxi"},"content":"    public void execute_nameKeywordNotInList_noPersonFound() {","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"joosxi"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"joosxi"},"content":"        String name \u003d \"Hoon\";","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"joosxi"},"content":"        keywords.add(0, name);","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"joosxi"},"content":"        keywords.add(1, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"joosxi"},"content":"        keywords.add(2, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"joosxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d preparePredicateUsingList(keywords);","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"joosxi"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"joosxi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"joosxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"joosxi"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"joosxi"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"joosxi"},"content":"    public void execute_singleNameKeyword_onePersonFound() {","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"joosxi"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"joosxi"},"content":"        String name \u003d \"Fiona\";","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"joosxi"},"content":"        keywords.add(0, name);","lastModifiedDate":"2022-11-01"},{"lineNumber":103,"author":{"gitId":"joosxi"},"content":"        keywords.add(1, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"joosxi"},"content":"        keywords.add(2, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"joosxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d preparePredicateUsingList(keywords);","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"joosxi"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"joosxi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"joosxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":111,"author":{"gitId":"joosxi"},"content":"        assertEquals(Arrays.asList(FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-11-01"},{"lineNumber":112,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":113,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":114,"author":{"gitId":"joosxi"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":115,"author":{"gitId":"joosxi"},"content":"    public void execute_singleNameKeyword_multiplePersonsWithSameNameFound() {","lastModifiedDate":"2022-11-02"},{"lineNumber":116,"author":{"gitId":"joosxi"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-02"},{"lineNumber":117,"author":{"gitId":"joosxi"},"content":"        String name \u003d \"Meier\";","lastModifiedDate":"2022-11-02"},{"lineNumber":118,"author":{"gitId":"joosxi"},"content":"        keywords.add(0, name);","lastModifiedDate":"2022-11-02"},{"lineNumber":119,"author":{"gitId":"joosxi"},"content":"        keywords.add(1, \"\");","lastModifiedDate":"2022-11-02"},{"lineNumber":120,"author":{"gitId":"joosxi"},"content":"        keywords.add(2, \"\");","lastModifiedDate":"2022-11-02"},{"lineNumber":121,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"joosxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-11-02"},{"lineNumber":123,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d preparePredicateUsingList(keywords);","lastModifiedDate":"2022-11-02"},{"lineNumber":124,"author":{"gitId":"joosxi"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":125,"author":{"gitId":"joosxi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":126,"author":{"gitId":"joosxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-02"},{"lineNumber":127,"author":{"gitId":"joosxi"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-11-02"},{"lineNumber":128,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":129,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":130,"author":{"gitId":"joosxi"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":131,"author":{"gitId":"joosxi"},"content":"    public void execute_multipleNameKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-11-01"},{"lineNumber":132,"author":{"gitId":"joosxi"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":133,"author":{"gitId":"joosxi"},"content":"        String name \u003d \"Fiona Daniel Kurz\";","lastModifiedDate":"2022-11-01"},{"lineNumber":134,"author":{"gitId":"joosxi"},"content":"        keywords.add(0, name);","lastModifiedDate":"2022-11-01"},{"lineNumber":135,"author":{"gitId":"joosxi"},"content":"        keywords.add(1, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":136,"author":{"gitId":"joosxi"},"content":"        keywords.add(2, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":137,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":138,"author":{"gitId":"joosxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-11-01"},{"lineNumber":139,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d preparePredicateUsingList(keywords);","lastModifiedDate":"2022-11-01"},{"lineNumber":140,"author":{"gitId":"joosxi"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":141,"author":{"gitId":"joosxi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":142,"author":{"gitId":"joosxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":143,"author":{"gitId":"joosxi"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-11-01"},{"lineNumber":144,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":145,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":146,"author":{"gitId":"joosxi"},"content":"    // Show that arguments are case-insensitive","lastModifiedDate":"2022-11-01"},{"lineNumber":147,"author":{"gitId":"joosxi"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":148,"author":{"gitId":"joosxi"},"content":"    public void execute_multipleNameKeywordsDifferentCase_multiplePersonsFound() {","lastModifiedDate":"2022-11-01"},{"lineNumber":149,"author":{"gitId":"joosxi"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":150,"author":{"gitId":"joosxi"},"content":"        String name \u003d \"FiOna daniel kurZ\";","lastModifiedDate":"2022-11-01"},{"lineNumber":151,"author":{"gitId":"joosxi"},"content":"        keywords.add(0, name);","lastModifiedDate":"2022-11-01"},{"lineNumber":152,"author":{"gitId":"joosxi"},"content":"        keywords.add(1, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":153,"author":{"gitId":"joosxi"},"content":"        keywords.add(2, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":154,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":155,"author":{"gitId":"joosxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-11-01"},{"lineNumber":156,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d preparePredicateUsingList(keywords);","lastModifiedDate":"2022-11-01"},{"lineNumber":157,"author":{"gitId":"joosxi"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":158,"author":{"gitId":"joosxi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":159,"author":{"gitId":"joosxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":160,"author":{"gitId":"joosxi"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-11-01"},{"lineNumber":161,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":162,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":163,"author":{"gitId":"joosxi"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":164,"author":{"gitId":"joosxi"},"content":"    public void execute_singleStudentClassKeyword_personsFromSameClassFound() {","lastModifiedDate":"2022-11-02"},{"lineNumber":165,"author":{"gitId":"joosxi"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":166,"author":{"gitId":"joosxi"},"content":"        String studentClass \u003d \"1A\";","lastModifiedDate":"2022-11-01"},{"lineNumber":167,"author":{"gitId":"joosxi"},"content":"        keywords.add(0, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":168,"author":{"gitId":"joosxi"},"content":"        keywords.add(1, studentClass);","lastModifiedDate":"2022-11-01"},{"lineNumber":169,"author":{"gitId":"joosxi"},"content":"        keywords.add(2, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":170,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":171,"author":{"gitId":"joosxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2022-11-01"},{"lineNumber":172,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d preparePredicateUsingList(keywords);","lastModifiedDate":"2022-11-01"},{"lineNumber":173,"author":{"gitId":"joosxi"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":174,"author":{"gitId":"joosxi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":175,"author":{"gitId":"joosxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":176,"author":{"gitId":"joosxi"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2022-11-01"},{"lineNumber":177,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":178,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":179,"author":{"gitId":"joosxi"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":180,"author":{"gitId":"joosxi"},"content":"    public void execute_singleSubjectKeyword_personsWithSameSubjectFound() {","lastModifiedDate":"2022-11-01"},{"lineNumber":181,"author":{"gitId":"joosxi"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":182,"author":{"gitId":"joosxi"},"content":"        String subjects \u003d \"MATH\";","lastModifiedDate":"2022-11-01"},{"lineNumber":183,"author":{"gitId":"joosxi"},"content":"        keywords.add(0, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":184,"author":{"gitId":"joosxi"},"content":"        keywords.add(1, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":185,"author":{"gitId":"joosxi"},"content":"        keywords.add(2, subjects);","lastModifiedDate":"2022-11-01"},{"lineNumber":186,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":187,"author":{"gitId":"joosxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2022-11-01"},{"lineNumber":188,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d preparePredicateUsingList(keywords);","lastModifiedDate":"2022-11-01"},{"lineNumber":189,"author":{"gitId":"joosxi"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":190,"author":{"gitId":"joosxi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":191,"author":{"gitId":"joosxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":192,"author":{"gitId":"joosxi"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2022-11-01"},{"lineNumber":193,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":194,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":195,"author":{"gitId":"joosxi"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":196,"author":{"gitId":"joosxi"},"content":"    public void execute_multipleSubjectKeywords_personsWithSameSubjectsFound() {","lastModifiedDate":"2022-11-01"},{"lineNumber":197,"author":{"gitId":"joosxi"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":198,"author":{"gitId":"joosxi"},"content":"        String subjects \u003d \"MATH ENGLISH\";","lastModifiedDate":"2022-11-01"},{"lineNumber":199,"author":{"gitId":"joosxi"},"content":"        keywords.add(0, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":200,"author":{"gitId":"joosxi"},"content":"        keywords.add(1, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":201,"author":{"gitId":"joosxi"},"content":"        keywords.add(2, subjects);","lastModifiedDate":"2022-11-01"},{"lineNumber":202,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":203,"author":{"gitId":"joosxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2022-11-01"},{"lineNumber":204,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d preparePredicateUsingList(keywords);","lastModifiedDate":"2022-11-01"},{"lineNumber":205,"author":{"gitId":"joosxi"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":206,"author":{"gitId":"joosxi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":207,"author":{"gitId":"joosxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":208,"author":{"gitId":"joosxi"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2022-11-01"},{"lineNumber":209,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":210,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":211,"author":{"gitId":"joosxi"},"content":"    // Test to confirm that subject keywords are case-insensitive","lastModifiedDate":"2022-11-01"},{"lineNumber":212,"author":{"gitId":"joosxi"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":213,"author":{"gitId":"joosxi"},"content":"    public void execute_multipleSubjectKeywordsDifferentCase_personsWithSameSubjectsFound() {","lastModifiedDate":"2022-11-01"},{"lineNumber":214,"author":{"gitId":"joosxi"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":215,"author":{"gitId":"joosxi"},"content":"        String subjects \u003d \"mAtH eNgliSH\";","lastModifiedDate":"2022-11-01"},{"lineNumber":216,"author":{"gitId":"joosxi"},"content":"        keywords.add(0, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":217,"author":{"gitId":"joosxi"},"content":"        keywords.add(1, \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":218,"author":{"gitId":"joosxi"},"content":"        keywords.add(2, subjects);","lastModifiedDate":"2022-11-01"},{"lineNumber":219,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":220,"author":{"gitId":"joosxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2022-11-01"},{"lineNumber":221,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d preparePredicateUsingList(keywords);","lastModifiedDate":"2022-11-01"},{"lineNumber":222,"author":{"gitId":"joosxi"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":223,"author":{"gitId":"joosxi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":224,"author":{"gitId":"joosxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-02"},{"lineNumber":225,"author":{"gitId":"joosxi"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2022-11-02"},{"lineNumber":226,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":227,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":228,"author":{"gitId":"joosxi"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":229,"author":{"gitId":"joosxi"},"content":"    public void execute_multipleDifferentKeywords_personsWithMatchingFieldsFound() {","lastModifiedDate":"2022-11-02"},{"lineNumber":230,"author":{"gitId":"joosxi"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-02"},{"lineNumber":231,"author":{"gitId":"joosxi"},"content":"        String names \u003d \"Meier Pauline\";","lastModifiedDate":"2022-11-02"},{"lineNumber":232,"author":{"gitId":"joosxi"},"content":"        String studentClass \u003d \"1A 1B\";","lastModifiedDate":"2022-11-02"},{"lineNumber":233,"author":{"gitId":"joosxi"},"content":"        String subjects \u003d \"mAtH eNgliSH\";","lastModifiedDate":"2022-11-02"},{"lineNumber":234,"author":{"gitId":"joosxi"},"content":"        keywords.add(0, \"\");","lastModifiedDate":"2022-11-02"},{"lineNumber":235,"author":{"gitId":"joosxi"},"content":"        keywords.add(1, \"\");","lastModifiedDate":"2022-11-02"},{"lineNumber":236,"author":{"gitId":"joosxi"},"content":"        keywords.add(2, subjects);","lastModifiedDate":"2022-11-02"},{"lineNumber":237,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":238,"author":{"gitId":"joosxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2022-11-02"},{"lineNumber":239,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d preparePredicateUsingList(keywords);","lastModifiedDate":"2022-11-02"},{"lineNumber":240,"author":{"gitId":"joosxi"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-02"},{"lineNumber":241,"author":{"gitId":"joosxi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":242,"author":{"gitId":"joosxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":243,"author":{"gitId":"joosxi"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2022-11-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":247,"author":{"gitId":"e1010101"},"content":"     * Parses {@code userInput} into a {@code FindCommandPredicate}.","lastModifiedDate":"2022-10-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":249,"author":{"gitId":"e1010101"},"content":"    private FindCommandPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-15"},{"lineNumber":250,"author":{"gitId":"e1010101"},"content":"        return new FindCommandPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":252,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":253,"author":{"gitId":"joosxi"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":254,"author":{"gitId":"joosxi"},"content":"     * Creates a new {@code FindCommandPredicate} using an ArrayList containing user input.","lastModifiedDate":"2022-11-01"},{"lineNumber":255,"author":{"gitId":"joosxi"},"content":"     * ArrayList contains 3 categories obtained from user input: names,  student classes and subjects.","lastModifiedDate":"2022-11-01"},{"lineNumber":256,"author":{"gitId":"joosxi"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":257,"author":{"gitId":"joosxi"},"content":"     * @param userInputs ArrayList containing user input.","lastModifiedDate":"2022-11-01"},{"lineNumber":258,"author":{"gitId":"joosxi"},"content":"     * @return A new FindCommandPredicate.","lastModifiedDate":"2022-11-01"},{"lineNumber":259,"author":{"gitId":"joosxi"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":260,"author":{"gitId":"joosxi"},"content":"    private FindCommandPredicate preparePredicateUsingList(ArrayList\u003cString\u003e userInputs) {","lastModifiedDate":"2022-11-01"},{"lineNumber":261,"author":{"gitId":"joosxi"},"content":"        return new FindCommandPredicate(userInputs);","lastModifiedDate":"2022-11-01"},{"lineNumber":262,"author":{"gitId":"joosxi"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"e1010101":22,"Hoodineee":6,"joosxi":181,"-":54}},{"path":"src/test/java/seedu/watson/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"e1010101":5,"-":15}},{"path":"src/test/java/seedu/watson/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.getTypicalDatabase;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"e1010101":9,"Hoodineee":1,"-":29}},{"path":"src/test/java/seedu/watson/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"xiaoying1129"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"xiaoying1129"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_REMARK_COFFEE;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_REMARK_ICE_CREAM;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.getTypicalDatabase;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"xiaoying1129"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"xiaoying1129"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"xiaoying1129"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"xiaoying1129"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"xiaoying1129"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"xiaoying1129"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_ICE_CREAM));","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"xiaoying1129"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"xiaoying1129"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"xiaoying1129"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"xiaoying1129"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"xiaoying1129"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        // ensures that outOfBoundIndex is still in bounds of watson book list","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getPersonList().size());","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xiaoying1129"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_ICE_CREAM));","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"xiaoying1129"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"xiaoying1129"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"xiaoying1129"},"content":"    public void equals() {","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"xiaoying1129"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_ICE_CREAM));","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"xiaoying1129"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"xiaoying1129"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"xiaoying1129"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"xiaoying1129"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"xiaoying1129"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"xiaoying1129"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"xiaoying1129"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"xiaoying1129"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON, new Remark(VALID_REMARK_ICE_CREAM))));","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"xiaoying1129"},"content":"        // different remarks -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"xiaoying1129"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_COFFEE))));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"xiaoying1129"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"e1010101":15,"Hoodineee":2,"xiaoying1129":45}},{"path":"src/test/java/seedu/watson/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.REMARK_ICE_CREAM;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.STUDENTCLASS_DUMMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_REMARK_ICE_CREAM;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_SUBJECTHANDLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        // New fields are added to the back of the userInput parameter to avoid confusion","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"joosxi"},"content":"                                   + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"joosxi"},"content":"                                   + STUDENTCLASS_DUMMY + REMARK_ICE_CREAM,","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"                           new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":63,"author":{"gitId":"joosxi"},"content":"                                   + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"                                   + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + STUDENTCLASS_DUMMY + REMARK_ICE_CREAM,","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"                           new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"joosxi"},"content":"                                   + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"                                   + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + STUDENTCLASS_DUMMY + REMARK_ICE_CREAM,","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"                           new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"joosxi"},"content":"                                   + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"                                   + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + STUDENTCLASS_DUMMY + REMARK_ICE_CREAM,","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"                           new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"        // multiple addresses - last watson accepted","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"joosxi"},"content":"                                   + EMAIL_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"joosxi"},"content":"                                   + TAG_DESC_FRIEND + STUDENTCLASS_DUMMY + REMARK_ICE_CREAM,","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"                           new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"        Student expectedStudentMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"                                                                     .withRemarks(VALID_REMARK_ICE_CREAM).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"joosxi"},"content":"                                   + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"joosxi"},"content":"                                   + STUDENTCLASS_DUMMY + REMARK_ICE_CREAM,","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"                           new AddCommand(expectedStudentMultipleTags));","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"Hoodineee"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().withRemarks()","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"                                                         .withSubjectHandler(VALID_SUBJECTHANDLER).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"joosxi"},"content":"                                   + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + STUDENTCLASS_DUMMY,","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"Hoodineee"},"content":"                           new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                           expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                           expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                           expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"        // missing watson prefix","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                           expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                           expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"e1010101"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"joosxi"},"content":"                                   + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"joosxi"},"content":"                                   + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"joosxi"},"content":"                                   + STUDENTCLASS_DUMMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"e1010101"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2022-10-31"},{"lineNumber":140,"author":{"gitId":"joosxi"},"content":"                                   + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"e1010101"},"content":"                                   + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + STUDENTCLASS_DUMMY,","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"e1010101"},"content":"                           Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"e1010101"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":146,"author":{"gitId":"joosxi"},"content":"                                   + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"e1010101"},"content":"                                   + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + STUDENTCLASS_DUMMY,","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"e1010101"},"content":"                           Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"e1010101"},"content":"        // invalid address","lastModifiedDate":"2022-10-30"},{"lineNumber":151,"author":{"gitId":"e1010101"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":152,"author":{"gitId":"joosxi"},"content":"                                   + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"e1010101"},"content":"                                   + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + STUDENTCLASS_DUMMY,","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"e1010101"},"content":"                           Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"e1010101"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":158,"author":{"gitId":"joosxi"},"content":"                                   + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"e1010101"},"content":"                                   + INVALID_TAG_DESC","lastModifiedDate":"2022-10-30"},{"lineNumber":160,"author":{"gitId":"joosxi"},"content":"                                   + STUDENTCLASS_DUMMY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"e1010101"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":164,"author":{"gitId":"joosxi"},"content":"                                   + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"e1010101"},"content":"                                   + STUDENTCLASS_DUMMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                           Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"e1010101"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB","lastModifiedDate":"2022-10-31"},{"lineNumber":170,"author":{"gitId":"joosxi"},"content":"                                   + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"joosxi"},"content":"                                   + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"joosxi"},"content":"                                   + STUDENTCLASS_DUMMY,","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                           String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"e1010101":66,"Hoodineee":19,"joosxi":22,"-":68}},{"path":"src/test/java/seedu/watson/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"e1010101":1,"-":149}},{"path":"src/test/java/seedu/watson/logic/parser/AttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"import static seedu.watson.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"import seedu.watson.logic.commands.AttendanceCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"public class AttendanceCommandParserTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"    private final AttendanceCommandParser parser \u003d new AttendanceCommandParser();","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"jgyj123"},"content":"        assertParseFailure(parser, \"markAtt\",","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"jgyj123"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"jgyj123":20}},{"path":"src/test/java/seedu/watson/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"e1010101":3,"-":36}},{"path":"src/test/java/seedu/watson/logic/parser/DatabaseParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.ListCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentUtil;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"public class DatabaseParserTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    private final DatabaseParser parser \u003d new DatabaseParser();","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"                                                                + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"                                                                + StudentUtil.getEditPersonDescriptorDetails(","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"            descriptor));","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"    //    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"    //    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"    //        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"    //        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"    //            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"    //        assertEquals(new FindCommand(new FindCommandPredicate(keywords)), command);","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"    //    }","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"e1010101":25,"Hoodineee":10,"-":62}},{"path":"src/test/java/seedu/watson/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"e1010101":6,"-":26}},{"path":"src/test/java/seedu/watson/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid watson","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                           Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                           + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"                                                                            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"                                                                            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"                                                                            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"                                                                            .withTags(VALID_TAG_HUSBAND,","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"                                                                                     VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                                                                            .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"Hoodineee"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"Hoodineee"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"e1010101"},"content":"        // watson","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"Hoodineee"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"Hoodineee"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                           + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                           + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"e1010101"},"content":"                                                                            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"e1010101"},"content":"                                                                            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"e1010101"},"content":"                                                                            .withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"e1010101"},"content":"                                                                                     VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                                                                            .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                    + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"Hoodineee"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                                                       .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"Hoodineee"},"content":"        EditPersonDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"e1010101":48,"Hoodineee":17,"-":152}},{"path":"src/test/java/seedu/watson/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"joosxi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"joosxi"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.FindCommand;","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.FindCommandPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"xiaoying1129"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"                           String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    public void parse_validArgs_returnsFindCommand() throws ParseException {","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"joosxi"},"content":"        List\u003cString\u003e predicateKeywordList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"joosxi"},"content":"        Collections.addAll(predicateKeywordList, \"Alice\", \"\", \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"joosxi"},"content":"        List\u003cString\u003e unmodifiablePredicateKeywordList \u003d Collections.unmodifiableList(predicateKeywordList);","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"joosxi"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"joosxi"},"content":"            new FindCommand(new FindCommandPredicate(unmodifiablePredicateKeywordList));","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        assertParseSuccess(parser, \" n/Alice\", expectedFindCommand);","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"e1010101":13,"Hoodineee":1,"joosxi":7,"xiaoying1129":1,"-":17}},{"path":"src/test/java/seedu/watson/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    private static final String INVALID_DOUBLE \u003d \"invalid\";","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    private static final String VALID_DOUBLE \u003d \"2.5\";","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"e1010101"},"content":"    public void parseFutureDifficulty_validValue_returnsDouble() {","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"e1010101"},"content":"        double expectedValue \u003d 2.5;","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"e1010101"},"content":"        assertEquals(expectedValue, ParserUtil.parseFutureAssessmentDifficulty(VALID_DOUBLE));","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"e1010101"},"content":"    public void parseFutureDifficulty_invalidValue_throwsNumberFormatException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"e1010101"},"content":"        assertThrows(NumberFormatException.class, () -\u003e ParserUtil.parseFutureAssessmentDifficulty(INVALID_DOUBLE));","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"e1010101":19,"Hoodineee":4,"-":186}},{"path":"src/test/java/seedu/watson/model/DatabaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.getTypicalDatabase;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"public class DatabaseTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    private final Database database \u003d new Database();","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        assertEquals(Collections.emptyList(), database.getPersonList());","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.resetData(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        Database newData \u003d getTypicalDatabase();","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        database.resetData(newData);","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        assertEquals(newData, database);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                                                     .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"        DatabaseStub newData \u003d new DatabaseStub(newStudents);","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e database.resetData(newData));","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.hasPerson(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"        assertFalse(database.hasPerson(ALICE));","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        database.addPerson(ALICE);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        assertTrue(database.hasPerson(ALICE));","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        database.addPerson(ALICE);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                                                     .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"        assertTrue(database.hasPerson(editedAlice));","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e database.getPersonList().remove(0));","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"     * A stub ReadOnlyDatabase whose students list can violate interface constraints.","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"    private static class DatabaseStub implements ReadOnlyDatabase {","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"        DatabaseStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"            this.students.setAll(students);","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"        public ObservableList\u003cStudent\u003e getPersonList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"Hoodineee"},"content":"            return students;","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"e1010101":19,"Hoodineee":17,"-":66}},{"path":"src/test/java/seedu/watson/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.FindCommandPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.testutil.DatabaseBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        assertEquals(new Database(), new Database(modelManager.getDatabase()));","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"watson/book/file/path\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"new/watson/book/file/path\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        Path path \u003d Paths.get(\"watson/book/file/path\");","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"        Database database \u003d new DatabaseBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"        Database differentDatabase \u003d new Database();","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"        modelManager \u003d new ModelManager(database, userPrefs);","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(database, userPrefs);","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"        // different database -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentDatabase, userPrefs)));","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"joosxi"},"content":"        String keywords \u003d ALICE.getName().fullName;","lastModifiedDate":"2022-11-01"},{"lineNumber":121,"author":{"gitId":"joosxi"},"content":"        modelManager.updateFilteredPersonList(new FindCommandPredicate(","lastModifiedDate":"2022-11-01"},{"lineNumber":122,"author":{"gitId":"joosxi"},"content":"            Arrays.asList(new String[]{keywords, \"\", \"\"})));","lastModifiedDate":"2022-11-01"},{"lineNumber":123,"author":{"gitId":"e1010101"},"content":"        assertFalse(modelManager.equals(new ModelManager(database, userPrefs)));","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"e1010101"},"content":"        differentUserPrefs.setDatabaseFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"e1010101"},"content":"        assertFalse(modelManager.equals(new ModelManager(database, differentUserPrefs)));","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"e1010101":18,"Hoodineee":3,"joosxi":3,"-":109}},{"path":"src/test/java/seedu/watson/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setDatabaseFilePath(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"e1010101":3,"-":18}},{"path":"src/test/java/seedu/watson/model/student/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        // null watson","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long watson","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e1010101":3,"Hoodineee":1,"-":32}},{"path":"src/test/java/seedu/watson/model/student/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public class AttendanceTest {","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    public void isValidAttendanceInput() {","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"        // null name","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"        assertThrows(NullPointerException.class, () -\u003e Attendance.isValidAttendance(null));","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        // invalid commands","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"        assertFalse(Attendance.isValidAttendance(\"13/2/2022 1\")); // no prefixes","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        assertFalse(Attendance.isValidAttendance(\"date/13/2/2022 1\")); // no \"attendance/\" prefix","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        assertFalse(Attendance.isValidAttendance(\"attendance/13/2/2022 date/1\")); // swapped prefixes","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        assertFalse(Attendance.isValidAttendance(\"date/13/2 attendance/1\")); // invalid date","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        // valid commands","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        assertTrue(Attendance.isValidAttendance(\"\")); // empty string is valid","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"jgyj123"},"content":"        assertTrue(Attendance.isValidAttendance(\"date/13/02/2024 attendance/1\")); // valid date and attendance","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"jgyj123"},"content":"        assertTrue(Attendance.isValidAttendance(\"date/13-02-2024 attendance/1\")); // date with different format","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"jgyj123":2,"e1010101":24,"Hoodineee":1}},{"path":"src/test/java/seedu/watson/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e1010101":1,"Hoodineee":1,"-":66}},{"path":"src/test/java/seedu/watson/model/student/FindCommandPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"joosxi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"public class FindCommandPredicateTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        FindCommandPredicate firstPredicate \u003d new FindCommandPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        FindCommandPredicate secondPredicate \u003d new FindCommandPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        FindCommandPredicate firstPredicateCopy \u003d new FindCommandPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"joosxi"},"content":"        List\u003cString\u003e predicateKeywordList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"joosxi"},"content":"        Collections.addAll(predicateKeywordList, \"Alice\", \"\", \"\");","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"joosxi"},"content":"        List\u003cString\u003e unmodifiablePredicateKeywordList \u003d Collections.unmodifiableList(predicateKeywordList);","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d new FindCommandPredicate(unmodifiablePredicateKeywordList);","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"joosxi"},"content":"        predicate \u003d new FindCommandPredicate(Arrays.asList(new String[]{\"Alice Bob\", \"\", \"\"}));","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"joosxi"},"content":"        predicate \u003d new FindCommandPredicate(Arrays.asList(new String[]{\"Bob Carol\", \"\", \"\"}));","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"joosxi"},"content":"        predicate \u003d new FindCommandPredicate(Arrays.asList(new String[]{\"aLIce bOB\", \"\", \"\"}));","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"joosxi"},"content":"        FindCommandPredicate predicate \u003d new FindCommandPredicate(Arrays.asList(new String[]{\"\", \"\", \"\"}));","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"joosxi"},"content":"        predicate \u003d new FindCommandPredicate(Arrays.asList(new String[]{\"Carol\", \"\", \"\"}));","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"e1010101":4,"Hoodineee":9,"joosxi":10,"-":51}},{"path":"src/test/java/seedu/watson/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e1010101":1,"Hoodineee":1,"-":38}},{"path":"src/test/java/seedu/watson/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e1010101":1,"Hoodineee":1,"-":38}},{"path":"src/test/java/seedu/watson/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"public class StudentTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"                                                     .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"                                                     .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"        editedBob \u003d new StudentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        // different watson -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"Hoodineee"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"e1010101":9,"Hoodineee":18,"-":65}},{"path":"src/test/java/seedu/watson/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                                                     .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"Hoodineee"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                                                     .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"Hoodineee"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"Hoodineee"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cStudent\u003e) null));","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"Hoodineee"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"Hoodineee"},"content":"        uniquePersonList.setPersons(studentList);","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"Hoodineee"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"Hoodineee"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicateStudents));","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"e1010101":3,"Hoodineee":18,"-":149}},{"path":"src/test/java/seedu/watson/model/student/remark/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student.remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"xiaoying1129"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"xiaoying1129"},"content":"public class RemarkTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"xiaoying1129"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"xiaoying1129"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"xiaoying1129"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"xiaoying1129"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"xiaoying1129"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"xiaoying1129"},"content":"        String invalidRemark \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"xiaoying1129"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Remark(invalidRemark));","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"xiaoying1129"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"xiaoying1129"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"xiaoying1129"},"content":"    public void isValidRemark() {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"xiaoying1129"},"content":"        // null remark","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"xiaoying1129"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"xiaoying1129"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"xiaoying1129"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"e1010101":1,"Hoodineee":2,"xiaoying1129":23}},{"path":"src/test/java/seedu/watson/model/student/subject/AssessmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package seedu.watson.model.student.subject;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public class AssessmentTest {","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"            new Assessment(null, 0.0, 0.0,","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"                0.0, 0.0));","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"            new Assessment(invalidName, 10.0, 10.0,","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"                10.0, 5.0));","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    public void isValidAssessmentName() {","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        // null name","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        assertThrows(NullPointerException.class, () -\u003e Assessment.isValidAssessment(null));","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        // invalid name","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        assertFalse(Assessment.isValidAssessment(\"\")); // empty string","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        assertFalse(Assessment.isValidAssessment(\" \")); // spaces only","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        assertFalse(Assessment.isValidAssessment(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        assertFalse(Assessment.isValidAssessment(\"CA1*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        // valid name","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        assertTrue(Assessment.isValidAssessment(\"continuous assessment\")); // alphabets only","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        assertTrue(Assessment.isValidAssessment(\"1\")); // numbers only","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        assertTrue(Assessment.isValidAssessment(\"CA1\")); // alphanumeric characters","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        assertTrue(Assessment.isValidAssessment(\"Continuous Assessment\")); // with capital letters","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        assertTrue(Assessment.isValidAssessment(\"Final Year Examination 2022\")); // long names","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"e1010101":43,"Hoodineee":1}},{"path":"src/test/java/seedu/watson/model/student/subject/GradesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"package seedu.watson.model.student.subject;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"public class GradesTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"    public void returnsCorrectPercentageForOneAssessment() {","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"        //setup variables","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"        Grades testGrade \u003d new Grades();","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"        testGrade.updateAssessment(new Assessment(\"test\", 10.0, 10.0,","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"                1.0, 5.0));","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"        assertTrue(testGrade.getCurrentPercentage() \u003d\u003d 100.0);","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"jgyj123"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"jgyj123"},"content":"    public void returnsCorrectPercentageForMultipleAssessments() {","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"        Grades testGrade \u003d new Grades();","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"jgyj123"},"content":"        testGrade.updateAssessment(new Assessment(\"test\", 10.0, 10.0,","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"jgyj123"},"content":"                0.5, 5.0));","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"jgyj123"},"content":"        testGrade.updateAssessment(new Assessment(\"test2\", 0, 10.0,","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"jgyj123"},"content":"                0.5, 5.0));","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"jgyj123"},"content":"        assertTrue(testGrade.getCurrentPercentage() \u003d\u003d 50.0);","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"jgyj123"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"jgyj123"},"content":"    public void returnsCorrectToString() {","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"jgyj123"},"content":"        Grades testGrade \u003d new Grades();","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"jgyj123"},"content":"        testGrade.updateAssessment(new Assessment(\"test\", 1.0, 10.0,","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"jgyj123"},"content":"                0.5, 5.0));","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"jgyj123"},"content":"        assertTrue(testGrade.toString().equals(\"Grade \u003d 10.00\")); // with one assessment","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"jgyj123"},"content":"        Grades emptyGrade \u003d new Grades();","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"jgyj123"},"content":"        assertTrue(emptyGrade.toString().equals(\"There is currently no grade.\")); //empty grade","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"jgyj123"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"jgyj123"},"content":"    public void returnsCorrectDataString() {","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"jgyj123"},"content":"        Grades testGrade \u003d new Grades();","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"jgyj123"},"content":"        testGrade.updateAssessment(new Assessment(\"test\", 1.0, 10.0,","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"jgyj123"},"content":"                0.5, 5.0));","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"jgyj123"},"content":"        assertTrue(testGrade.dataString().equals(\"test:[1.0, 10.0, 0.5, 5.0]\")); // with one assessment","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"jgyj123"},"content":"        Grades emptyGrade \u003d new Grades();","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"jgyj123"},"content":"        assertTrue(emptyGrade.dataString().equals(\"\")); //empty grade","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"jgyj123":48}},{"path":"src/test/java/seedu/watson/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.model.tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"e1010101":2,"-":24}},{"path":"src/test/java/seedu/watson/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.StudentClass;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    private static final String VALID_STUDENTCLASS \u003d BENSON.getStudentClass().toString();","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    private static final String VALID_ATTENDANCE \u003d BENSON.getAttendance().toString();","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"    private static final String VALID_SUBJECTHANDLER \u003d BENSON.getSubjectHandler().dataString();","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    private static final List\u003cJsonAdaptedRemark\u003e VALID_REMARKS \u003d BENSON.getRemarks().stream()","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"                                                                       .map(JsonAdaptedRemark::new)","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"                                                                       .collect(Collectors.toList());","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                                                                 .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                                                                 .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    private static final List\u003cJsonAdaptedSubject\u003e VALID_SUBJECTS \u003d BENSON.getSubjectsTaken().stream()","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        .map(JsonAdaptedSubject::new)","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"            new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"                                  VALID_STUDENTCLASS, VALID_ATTENDANCE, VALID_SUBJECTHANDLER,","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"                                  VALID_REMARKS, VALID_TAGS);","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(null, VALID_PHONE,","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"joosxi"},"content":"                                                         VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"joosxi"},"content":"                                                         VALID_STUDENTCLASS, VALID_ATTENDANCE,","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"joosxi"},"content":"                                                         VALID_SUBJECTHANDLER,","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"                                                         VALID_REMARKS, VALID_TAGS);","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"Hoodineee"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"            new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"                                  VALID_STUDENTCLASS, VALID_ATTENDANCE, VALID_SUBJECTHANDLER,","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"                                  VALID_REMARKS, VALID_TAGS);","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, null,","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"joosxi"},"content":"                                                         VALID_EMAIL, VALID_ADDRESS, VALID_STUDENTCLASS,","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"joosxi"},"content":"                                                         VALID_ATTENDANCE, VALID_SUBJECTHANDLER,","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"                                                         VALID_REMARKS, VALID_TAGS);","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"            new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"                                  VALID_STUDENTCLASS, VALID_ATTENDANCE, VALID_SUBJECTHANDLER,","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"                                  VALID_REMARKS, VALID_TAGS);","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-10-31"},{"lineNumber":105,"author":{"gitId":"joosxi"},"content":"                                                         null, VALID_ADDRESS, VALID_STUDENTCLASS,","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"joosxi"},"content":"                                                         VALID_ATTENDANCE, VALID_SUBJECTHANDLER,","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"Hoodineee"},"content":"                                                         VALID_REMARKS, VALID_TAGS);","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"            new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2022-10-31"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"                                  VALID_STUDENTCLASS, VALID_ATTENDANCE, VALID_SUBJECTHANDLER,","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"Hoodineee"},"content":"                                  VALID_REMARKS, VALID_TAGS);","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"e1010101"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"Hoodineee"},"content":"                                                           null, VALID_STUDENTCLASS, VALID_ATTENDANCE,","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"Hoodineee"},"content":"                                                           VALID_SUBJECTHANDLER, VALID_REMARKS, VALID_TAGS);","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"e1010101"},"content":"    public void toModelType_nullStudentClass_throwsIllegalValueException() {","lastModifiedDate":"2022-10-22"},{"lineNumber":133,"author":{"gitId":"e1010101"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"joosxi"},"content":"                                                         VALID_EMAIL, VALID_ADDRESS, null,","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"joosxi"},"content":"                                                         VALID_ATTENDANCE, VALID_SUBJECTHANDLER,","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"joosxi"},"content":"                                                         VALID_REMARKS, VALID_TAGS);","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"e1010101"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentClass.class.getSimpleName());","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"Hoodineee"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"Hoodineee"},"content":"    public void toModelType_invalidSubject_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"Hoodineee"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"e1010101"},"content":"            new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2022-10-31"},{"lineNumber":145,"author":{"gitId":"e1010101"},"content":"                                  VALID_STUDENTCLASS, VALID_ATTENDANCE, VALID_SUBJECTHANDLER,","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"Hoodineee"},"content":"                                  VALID_REMARKS, VALID_TAGS);","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"Hoodineee"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"Hoodineee"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"Hoodineee"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"e1010101"},"content":"            new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-31"},{"lineNumber":157,"author":{"gitId":"e1010101"},"content":"                                  VALID_STUDENTCLASS, VALID_ATTENDANCE, VALID_SUBJECTHANDLER,","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"Hoodineee"},"content":"                                  VALID_REMARKS, invalidTags);","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e1010101":30,"Hoodineee":38,"joosxi":10,"-":84}},{"path":"src/test/java/seedu/watson/storage/JsonDatabaseStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.HOON;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.IDA;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.getTypicalDatabase;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"public class JsonDatabaseStorageTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonDatabaseStorageTest\");","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        assertThrows(NullPointerException.class, () -\u003e readDatabase(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    private java.util.Optional\u003cReadOnlyDatabase\u003e readDatabase(String filePath) throws Exception {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        return new JsonDatabaseStorage(Paths.get(filePath)).readDatabase(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"               ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"               : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        assertFalse(readDatabase(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"        assertThrows(DataConversionException.class, () -\u003e readDatabase(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        Database original \u003d getTypicalDatabase();","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        JsonDatabaseStorage jsonDatabaseStorage \u003d new JsonDatabaseStorage(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        jsonDatabaseStorage.saveDatabase(original, filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"        ReadOnlyDatabase readBack \u003d jsonDatabaseStorage.readDatabase(filePath).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"        jsonDatabaseStorage.saveDatabase(original, filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        readBack \u003d jsonDatabaseStorage.readDatabase(filePath).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        jsonDatabaseStorage.saveDatabase(original); // file path not specified","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"        readBack \u003d jsonDatabaseStorage.readDatabase().get(); // file path not specified","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"    private void saveAddressBook(ReadOnlyDatabase addressBook, String filePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"            new JsonDatabaseStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"                .saveDatabase(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new Database(), null));","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e1010101":27,"Hoodineee":4,"-":69}},{"path":"src/test/java/seedu/watson/storage/JsonSerializableDatabaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.util.JsonUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.testutil.TypicalStudents;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"public class JsonSerializableDatabaseTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableDatabaseTest\");","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsAddressBook.json\");","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentAddressBook.json\");","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentAddressBook.json\");","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"                                                                         JsonSerializableDatabase.class).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        Database databaseFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"        Database typicalPersonsDatabase \u003d TypicalStudents.getTypicalDatabase();","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        assertEquals(databaseFromFile, typicalPersonsDatabase);","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"                                                                         JsonSerializableDatabase.class).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"                                                                         JsonSerializableDatabase.class).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableDatabase.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                     dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e1010101":16,"Hoodineee":5,"-":26}},{"path":"src/test/java/seedu/watson/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"               ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"               : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"data/addressbook.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e1010101":6,"-":117}},{"path":"src/test/java/seedu/watson/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import static seedu.watson.testutil.TypicalStudents.getTypicalDatabase;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        JsonDatabaseStorage databaseStorage \u003d new JsonDatabaseStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        storageManager \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"         * {@link JsonDatabaseStorage} class.","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonDatabaseStorageTest} class.","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        Database original \u003d getTypicalDatabase();","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        storageManager.saveDatabase(original);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        ReadOnlyDatabase retrieved \u003d storageManager.readDatabase().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        assertEquals(original, new Database(retrieved));","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        assertNotNull(storageManager.getDatabaseFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":14,"Hoodineee":1,"-":53}},{"path":"src/test/java/seedu/watson/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                    Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"e1010101":1,"-":33}},{"path":"src/test/java/seedu/watson/testutil/DatabaseBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * A utility class to help with building Database objects.","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * {@code Database ab \u003d new DatabaseBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class DatabaseBuilder {","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private Database database;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public DatabaseBuilder() {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        database \u003d new Database();","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public DatabaseBuilder(Database database) {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        this.database \u003d database;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"     * Adds a new {@code Student} to the {@code Database} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    public DatabaseBuilder withPerson(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"        database.addPerson(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    public Database build() {","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        return database;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":12,"Hoodineee":4,"-":18}},{"path":"src/test/java/seedu/watson/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.SubjectHandler;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"    public EditStudentDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"        descriptor.setAddress(student.getAddress());","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        // New fields","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"        descriptor.setStudentClass(student.getStudentClass());","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"        descriptor.setRemarks(student.getRemarks());","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"        descriptor.setSubjectHandler(student.getSubjectHandler());","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"    public EditStudentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"    public EditStudentDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"    public EditStudentDescriptorBuilder withSubjectHandler(String subjectHandler) {","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"        descriptor.setSubjectHandler(new SubjectHandler(subjectHandler));","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"e1010101":5,"Hoodineee":32,"-":64}},{"path":"src/test/java/seedu/watson/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                                                                          + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                                                                          + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"                                                                          + \"[ \\\"-999999999-01-01T00:00:00\\\", \"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"                                                                          + \"\\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                                                                          + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                                                          + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                                                                          + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                                                                          + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                                                                          + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                                                                          + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                                                                          + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":3,"-":70}},{"path":"src/test/java/seedu/watson/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Address;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Attendance;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Email;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Name;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Remark;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.StudentClass;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.subject.SubjectHandler;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"// need to edit based on new student model","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"public class StudentBuilder {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public static final String DEFAULT_STUDENTCLASS \u003d \"1.3\";","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"    public static final String DEFAULT_SUBJECTHANDLER \u003d \"english: CA1:[80.0, 100.0, 0.2, 1.0], \"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"                                                        + \"CA2:[30.0, 56.0, 0.4, 2.0]\";","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    private StudentClass studentClass;","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"    private SubjectHandler subjectHandler;","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    private Set\u003cRemark\u003e remarks;","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"    private Attendance attendance;","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder() {","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        studentClass \u003d new StudentClass(DEFAULT_STUDENTCLASS);","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        attendance \u003d new Attendance();","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"        subjectHandler \u003d new SubjectHandler(DEFAULT_SUBJECTHANDLER);","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        remarks \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"        address \u003d studentToCopy.getAddress();","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"        studentClass \u003d studentToCopy.getStudentClass();","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"        attendance \u003d studentToCopy.getAttendance();","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"        remarks \u003d new HashSet\u003c\u003e(studentToCopy.getRemarks());","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"        subjectHandler \u003d studentToCopy.getSubjectHandler();","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"     * Sets the {@code Address} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder withAddress(String address) {","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"     * Sets the {@code Phone} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"Hoodineee"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"Hoodineee"},"content":"     * Sets the {@code Clazz} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder withStudentClass(String withClass) {","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"        this.studentClass \u003d new StudentClass(withClass);","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"Hoodineee"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"Hoodineee"},"content":"     * Sets the {@code SubjectHandler} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder withSubjectHandler(String withSubjectHandler) {","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"Hoodineee"},"content":"        this.subjectHandler \u003d new SubjectHandler(withSubjectHandler);","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"Hoodineee"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"Hoodineee"},"content":"     * Sets the {@code Attendance} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder withAttendance(String withAttendance) {","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"e1010101"},"content":"            this.attendance \u003d new Attendance(Attendance.parseAttendanceFromJson(withAttendance));","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"e1010101"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"e1010101"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"e1010101"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"Hoodineee"},"content":"     * Sets the {@code Remark} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"Hoodineee"},"content":"    public StudentBuilder withRemarks(String... remarks) {","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"e1010101"},"content":"        this.remarks \u003d SampleDataUtil.getRemarkSet(remarks);","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"Hoodineee"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"jgyj123"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"Hoodineee"},"content":"     * Builds a student object given the attributes","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"jgyj123"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"Hoodineee"},"content":"    public Student build() {","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"e1010101"},"content":"        return new Student(name, phone, email, address, studentClass, attendance, remarks, subjectHandler,","lastModifiedDate":"2022-10-31"},{"lineNumber":155,"author":{"gitId":"Hoodineee"},"content":"                          tags);","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jgyj123":2,"e1010101":24,"Hoodineee":67,"-":64}},{"path":"src/test/java/seedu/watson/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_STUDENTCLASS;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import seedu.watson.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":" * A utility class for Student.","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"public class StudentUtil {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    public static String getPersonDetails(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        sb.append(PREFIX_NAME).append(student.getName().fullName).append(\" \");","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        sb.append(PREFIX_PHONE).append(student.getPhone().value).append(\" \");","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        sb.append(PREFIX_EMAIL).append(student.getEmail().value).append(\" \");","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        sb.append(PREFIX_ADDRESS).append(student.getAddress().value).append(\" \");","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        student.getTags().forEach(","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"            s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \")","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        sb.append(PREFIX_STUDENTCLASS).append(student.getStudentClass().value).append(\" \");","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"e1010101":17,"Hoodineee":8,"-":39}},{"path":"src/test/java/seedu/watson/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"    public static Student getPerson(Model model, Index index) {","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e1010101":3,"Hoodineee":5,"-":47}},{"path":"src/test/java/seedu/watson/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import seedu.watson.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"e1010101":2,"-":10}},{"path":"src/test/java/seedu/watson/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_REMARK_ICE_CREAM;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_STUDENTCLASS;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_SUBJECTHANDLER;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import seedu.watson.model.Database;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"import seedu.watson.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"public class TypicalStudents {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"                                                          .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"                                                          .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"                                                          .withPhone(\"94351253\").withTags(\"friends\")","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"                                                          .withStudentClass(\"1A\")","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"                                                          .withSubjectHandler(\"english: CA1:[80.0, 100.0, 0.2, 1.0], \"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"                                                                  + \"CA2:[30.0, 56.0, 0.4, 2.0] %%math: CA1:[80.0, \"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"                                                                  + \"100.0, 0.2, 1.0], CA2:[30.0, 56.0, 0.4, 2.0]\")","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"                                                          .build();","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                                                           .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"                                                           .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"                                                           .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"                                                           .withStudentClass(\"1A\")","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"jgyj123"},"content":"                                                           .withAttendance(\"date/12-02-2024 attendance/1\")","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"                                                           .withSubjectHandler(\"english: CA1:[80.0, 100.0, 0.2, 1.0], \"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"                                                                   + \"CA2:[30.0, 56.0, 0.4, 2.0] %%math: CA1:[80.0, \"","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"                                                                   + \"100.0, 0.2, 1.0], CA2:[30.0, 56.0, 0.4, 2.0]\")","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"                                                           .build();","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"joosxi"},"content":"                                                         .withPhone(\"95352563\")","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"                                                         .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"                                                         .withStudentClass(\"1A\")","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"                                                         .withSubjectHandler(\"english: CA1:[80.0, 100.0, 0.2, 1.0], \"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"                                                                 + \"CA2:[30.0, 56.0, 0.4, 2.0] %%math: CA1:[80.0, \"","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"                                                                 + \"100.0, 0.2, 1.0], CA2:[30.0, 56.0, 0.4, 2.0]\")","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"                                                         .build();","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"joosxi"},"content":"                                                           .withPhone(\"87652533\")","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"                                                           .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"                                                           .withTags(\"friends\")","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"                                                           .withStudentClass(\"1A\").withRemarks(\"friendly\")","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"                                                           .withSubjectHandler(\"english: CA1:[80.0, 100.0, 0.2, 1.0], \"","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"                                                                   + \"CA2:[30.0, 56.0, 0.4, 2.0] %%math: CA1:[80.0, \"","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"                                                                   + \"100.0, 0.2, 1.0], CA2:[30.0, 56.0, 0.4, 2.0]\")","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"                                                           .build();","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"joosxi"},"content":"                                                         .withPhone(\"9482224\")","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"                                                         .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"                                                         .withStudentClass(\"1A\")","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"                                                         .withSubjectHandler(\"english: CA1:[80.0, 100.0, 0.2, 1.0], \"","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"                                                                 + \"CA2:[30.0, 56.0, 0.4, 2.0] %%math: CA1:[80.0, \"","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"                                                                 + \"100.0, 0.2, 1.0], CA2:[30.0, 56.0, 0.4, 2.0]\")","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"                                                         .build();","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"joosxi"},"content":"                                                          .withPhone(\"9482427\")","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"                                                          .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"                                                          .withStudentClass(\"1A\")","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"                                                          .withSubjectHandler(\"english: CA1:[80.0, 100.0, 0.2, 1.0], \"","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"                                                                  + \"CA2:[30.0, 56.0, 0.4, 2.0] %%math: CA1:[80.0, \"","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"Hoodineee"},"content":"                                                                  + \"100.0, 0.2, 1.0], CA2:[30.0, 56.0, 0.4, 2.0]\")","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"                                                          .build();","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\")","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"joosxi"},"content":"                                                           .withPhone(\"9482442\")","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"                                                           .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"                                                           .withStudentClass(\"1A\")","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"                                                           .withSubjectHandler(\"english: CA1:[80.0, 100.0, 0.2, 1.0], \"","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"                                                                   + \"CA2:[30.0, 56.0, 0.4, 2.0] %%math: CA1:[80.0, \"","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"                                                                   + \"100.0, 0.2, 1.0], CA2:[30.0, 56.0, 0.4, 2.0]\")","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"                                                           .build();","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"joosxi"},"content":"                                                         .withPhone(\"8482424\")","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"                                                         .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"                                                         .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"joosxi"},"content":"                                                        .withPhone(\"8482131\")","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"                                                        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"                                                        .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"Hoodineee"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"joosxi"},"content":"                                                        .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"                                                        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"                                                        .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"                                                        .withStudentClass(VALID_STUDENTCLASS)","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"                                                        .withRemarks(VALID_REMARK_ICE_CREAM)","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"Hoodineee"},"content":"                                                        .withSubjectHandler(VALID_SUBJECTHANDLER)","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"                                                        .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"joosxi"},"content":"                                                        .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"                                                        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"                                                        .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"                                                        .withStudentClass(VALID_STUDENTCLASS)","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"                                                        .withRemarks(VALID_REMARK_ICE_CREAM)","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"Hoodineee"},"content":"                                                        .withSubjectHandler(VALID_SUBJECTHANDLER)","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                                        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":120,"author":{"gitId":"Hoodineee"},"content":"    private TypicalStudents() {","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":124,"author":{"gitId":"e1010101"},"content":"     * Returns an {@code Database} with all the typical persons.","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"e1010101"},"content":"    public static Database getTypicalDatabase() {","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"e1010101"},"content":"        Database database \u003d new Database();","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"Hoodineee"},"content":"        for (Student student : getTypicalPersons()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"Hoodineee"},"content":"            database.addPerson(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":131,"author":{"gitId":"e1010101"},"content":"        return database;","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":134,"author":{"gitId":"Hoodineee"},"content":"    public static List\u003cStudent\u003e getTypicalPersons() {","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jgyj123":1,"e1010101":53,"Hoodineee":47,"joosxi":9,"-":27}},{"path":"src/test/java/seedu/watson/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"               || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                   \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"e1010101":3,"-":33}},{"path":"src/test/java/seedu/watson/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package seedu.watson.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import static seedu.watson.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import seedu.watson.MainApp;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"e1010101":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"\u003c?import seedu.watson.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"e1010101":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"\u003c?import seedu.watson.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"seedu.watson.ui.TestFxmlObject\"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"         xmlns\u003d\"http://javafx.com/javafx\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"e1010101":3,"-":4}}]
