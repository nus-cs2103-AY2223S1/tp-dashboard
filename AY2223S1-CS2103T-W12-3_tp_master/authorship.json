[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nareus"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103T-W12-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-W12-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"nareus"},"content":"* This project is named `RC4 Housing Database` (`RC4HDB` for short). This is **a project created by NUS CS2103T Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"nareus"},"content":"* The project is designed to store and access information of the students residing in Residential College 4 (called _RC4 Housing Database_).","lastModifiedDate":"2022-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"nareus"},"content":"* This is a brownfield project based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-21"}],"authorContributionMap":{"nareus":4,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"mainClassName \u003d \u0027seedu.rc4hdb.Main\u0027","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"nseah21"},"content":"    archiveFileName \u003d \u0027rc4hdb.jar\u0027","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nseah21":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"### Jordan Quah","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"\u003cimg src\u003d\"images/jq1836.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"[[github](https://github.com/jq1836)]","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"[[portfolio](team/jq1836.md)]","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"### Alvin Jiang","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"\u003cimg src\u003d\"images/alvinjiang1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"[[github](http://github.com/alvinjiang1)]","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"[[portfolio](team/alvinjiang1.md)]","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"* Role: Developer","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"### Naren Sreekanth","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"\u003cimg src\u003d\"images/nareus.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"[[github](http://github.com/nareus)]","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"[[portfolio](team/nareus.md)]","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"### Neale Tham","lastModifiedDate":"2022-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"\u003cimg src\u003d\"images/nealetham.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"[[github](http://github.com/nealetham)]","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"[[portfolio](team/nealetham.md)]","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"* Responsibilities: Deliverables and deadlines + Integration","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"### Nicholas Seah","lastModifiedDate":"2022-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"\u003cimg src\u003d\"images/nseah21.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"[[github](http://github.com/nseah21)]","lastModifiedDate":"2022-09-17"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"[[portfolio](team/nseah21.md)]","lastModifiedDate":"2022-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"jq1836":27,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"## **Acknowledgements** (OUTDATED)","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"## **Setting up, getting started** (OUTDATED)","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"RC4HDB aims to provide a complex set of features which are simple to use. Keeping this in mind, ","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"we are pursuing an iterative approach, adding new features and functionalities amidst the evolving requirements.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"This gives rise to the following main guiding principles for RC4HDB: ","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"**Maintainability**","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"This project was adapted from an application called [`AddressBook Level 3 (AB3)`](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"`AB3` was developed in a manner that facilitates easy modification of components. This design allows the functionalities","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"implemented to be easily changed depending on the goals of the developers. Building upon the existing components in `AB3`, we are to","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"add additional classes to the major components which include [**`UI`**](#ui-component), [**`Logic`**](#logic-component) , [**`Model`**](#model-component), [**`Storage`**](#storage-component).","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"**Command Line Interface (CLI) Oriented**","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"[**CLI**](#glossary) gives the user an easy way to type commands. This is especially useful for a target audience which is familiar with the process of performing admin tasks","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"using a computer. For users who type fast, RC4HDB will be highly efficient and quick to respond, improving their existing processes of managing their housing database.","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"### Architecture (OUTDATED)","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"alvinjiang1"},"content":"### UI component (OUTDATED)","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"alvinjiang1"},"content":"### Logic component (OUTDATED)","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"alvinjiang1"},"content":"### Storage component (OUTDATED)","lastModifiedDate":"2022-10-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"alvinjiang1"},"content":"## **Implementation** (OUTDATED)","lastModifiedDate":"2022-10-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"alvinjiang1"},"content":"## **Documentation, logging, testing, configuration, dev-ops** (OUTDATED)","lastModifiedDate":"2022-10-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"alvinjiang1"},"content":"* works in the housing management team for [**RC4**](#glossary) with several other co-workers","lastModifiedDate":"2022-10-02"},{"lineNumber":277,"author":{"gitId":"alvinjiang1"},"content":"* has a need to manage a significant number of residents in [**RC4**](#glossary)","lastModifiedDate":"2022-10-02"},{"lineNumber":278,"author":{"gitId":"nealetham"},"content":"* is responsible for performing a wide variety of tasks including liasing with students/staff","lastModifiedDate":"2022-09-21"},{"lineNumber":279,"author":{"gitId":"nealetham"},"content":"* requires quick access to contact details and other relevant resident information","lastModifiedDate":"2022-09-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":283,"author":{"gitId":"alvinjiang1"},"content":"* is reasonably comfortable using [**CLI**](#glossary) apps","lastModifiedDate":"2022-10-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"nealetham"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":287,"author":{"gitId":"alvinjiang1"},"content":"* manage contacts faster than a typical mouse/Graphic User Interface (GUI) driven app","lastModifiedDate":"2022-10-02"},{"lineNumber":288,"author":{"gitId":"nealetham"},"content":"* requires less technical knowledge to perform complex tasks","lastModifiedDate":"2022-09-21"},{"lineNumber":289,"author":{"gitId":"nealetham"},"content":"* easier on the eyes, as compared to compressed rows of data on Excel","lastModifiedDate":"2022-09-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"nealetham"},"content":"Our user stories have been packaged with the relevant functionalities that we will implement/have implemented.","lastModifiedDate":"2022-09-26"},{"lineNumber":295,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":296,"author":{"gitId":"nealetham"},"content":"They have been extensively documented [here](https://github.com/AY2223S1-CS2103T-W12-3/tp/issues?q\u003dis%3Aissue+label%3Atype.Story), and have been prioritized accordingly:","lastModifiedDate":"2022-09-21"},{"lineNumber":297,"author":{"gitId":"jq1836"},"content":"1. High `* * *` - must have","lastModifiedDate":"2022-09-27"},{"lineNumber":298,"author":{"gitId":"jq1836"},"content":"2. Moderate `* *` - nice to have","lastModifiedDate":"2022-09-27"},{"lineNumber":299,"author":{"gitId":"jq1836"},"content":"3. Low `*` - unlikely to have","lastModifiedDate":"2022-09-27"},{"lineNumber":300,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":301,"author":{"gitId":"alvinjiang1"},"content":"| Priority | As a ...      | I want to ...                                                                      | So that ...                                      | Story Type |","lastModifiedDate":"2022-10-06"},{"lineNumber":302,"author":{"gitId":"alvinjiang1"},"content":"|----------|---------------|------------------------------------------------------------------------------------|--------------------------------------------------|------------|","lastModifiedDate":"2022-10-06"},{"lineNumber":303,"author":{"gitId":"alvinjiang1"},"content":"| `***`    | user          | view relevant information about [**RC4**](#glossary) residents                     |                                                  | Story      |","lastModifiedDate":"2022-10-06"},{"lineNumber":304,"author":{"gitId":"alvinjiang1"},"content":"| `***`    | user          | specify which fields I want to see when listing data                               | my screen is less cluttered                      | Story      |","lastModifiedDate":"2022-10-06"},{"lineNumber":305,"author":{"gitId":"alvinjiang1"},"content":"| `***`    | user          | import my old data into the application                                            |                                                  | Story      |","lastModifiedDate":"2022-10-06"},{"lineNumber":306,"author":{"gitId":"alvinjiang1"},"content":"| `***`    | user          | view a smaller list of [**RC4**](#glossary) residents that pass certain conditions |                                                  | Story      |","lastModifiedDate":"2022-10-06"},{"lineNumber":307,"author":{"gitId":"alvinjiang1"},"content":"| `**`     | advanced user | give residents roles                                                               | I can further categorize them                    | Epic       |","lastModifiedDate":"2022-10-06"},{"lineNumber":308,"author":{"gitId":"alvinjiang1"},"content":"| `**`     | user          | search for residents using a portion of their names                                | I do not have to remember their exact names      | Story      |","lastModifiedDate":"2022-10-06"},{"lineNumber":309,"author":{"gitId":"alvinjiang1"},"content":"| `**`     | user          | export residents\u0027 data in a familiar format                                        |                                                  | Story      |","lastModifiedDate":"2022-10-06"},{"lineNumber":310,"author":{"gitId":"alvinjiang1"},"content":"| `**`     | new user      | see sample data                                                                    | I can see how the app will look like when in use | Story      |","lastModifiedDate":"2022-10-06"},{"lineNumber":311,"author":{"gitId":"alvinjiang1"},"content":"| `**`     | user          | delete multiple residents\u0027 data from the app quickly                               | I can save time                                  | Story      |","lastModifiedDate":"2022-10-06"},{"lineNumber":312,"author":{"gitId":"alvinjiang1"},"content":"| `**`     | user          | use the system without referring to the user guide                                 |                                                  | Story      |","lastModifiedDate":"2022-10-06"},{"lineNumber":313,"author":{"gitId":"alvinjiang1"},"content":"| `**`     | user          | switch between different data files                                                |                                                  | Story      |","lastModifiedDate":"2022-10-06"},{"lineNumber":314,"author":{"gitId":"alvinjiang1"},"content":"| `*`      | advanced user | toggle input commands without repeating the command word                           | I can increase the efficiency of operations      | Epic       |","lastModifiedDate":"2022-10-06"},{"lineNumber":315,"author":{"gitId":"alvinjiang1"},"content":"| `*`      | user          | update settings                                                                    | I can customize the app for my use               | Epic       |","lastModifiedDate":"2022-10-06"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2022-09-27"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":319,"author":{"gitId":"jq1836"},"content":"\u003c!-- keep in case needed","lastModifiedDate":"2022-09-27"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"| Priority | As a …​         | I want to …​                               | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"jq1836"},"content":"| -------- |--------------------------------------------|-----------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-09-27"},{"lineNumber":324,"author":{"gitId":"jq1836"},"content":"| `* * *`  | user                                       | view relevant information about RC4 residents | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":325,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person                              |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                               | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name                         | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                  | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                          | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"nealetham"},"content":"--\u003e","lastModifiedDate":"2022-09-21"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"nealetham"},"content":"(For all use cases below, the **System** is the `RC4HDB` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-21"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":337,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC1. Getting help with the application**","lastModifiedDate":"2022-10-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"alvinjiang1"},"content":"1. User needs help related to RC4HDB.","lastModifiedDate":"2022-10-02"},{"lineNumber":341,"author":{"gitId":"alvinjiang1"},"content":"2. User requests for help in RC4HDB.","lastModifiedDate":"2022-10-06"},{"lineNumber":342,"author":{"gitId":"alvinjiang1"},"content":"3. RC4HDB displays a message that directs the user to our user guide.","lastModifiedDate":"2022-10-06"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":345,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":346,"author":{"gitId":"alvinjiang1"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":348,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC2. Add a single resident**","lastModifiedDate":"2022-10-02"},{"lineNumber":349,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":350,"author":{"gitId":"nealetham"},"content":"**MSS**","lastModifiedDate":"2022-09-21"},{"lineNumber":351,"author":{"gitId":"alvinjiang1"},"content":"1. New resident moves into [**RC4**](#glossary).","lastModifiedDate":"2022-10-02"},{"lineNumber":352,"author":{"gitId":"alvinjiang1"},"content":"2. User has the personal details of a resident they wish to add.","lastModifiedDate":"2022-10-06"},{"lineNumber":353,"author":{"gitId":"alvinjiang1"},"content":"3. User adds the resident to RC4HDB.","lastModifiedDate":"2022-10-06"},{"lineNumber":354,"author":{"gitId":"nealetham"},"content":"4. RC4HDB adds the resident to the data file.","lastModifiedDate":"2022-09-26"},{"lineNumber":355,"author":{"gitId":"nealetham"},"content":"5. RC4HDB displays the name and other information of the resident.","lastModifiedDate":"2022-09-26"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"nealetham"},"content":"* 3a. User enters resident information in an invalid format.","lastModifiedDate":"2022-09-26"},{"lineNumber":362,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":363,"author":{"gitId":"nealetham"},"content":"    * 3a1. RC4HDB shows an error message.","lastModifiedDate":"2022-09-21"},{"lineNumber":364,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":365,"author":{"gitId":"nealetham"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2022-09-21"},{"lineNumber":366,"author":{"gitId":"nealetham"},"content":"  ","lastModifiedDate":"2022-09-21"},{"lineNumber":367,"author":{"gitId":"alvinjiang1"},"content":"  \u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":368,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":369,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC3. Listing out information of all residents**","lastModifiedDate":"2022-10-02"},{"lineNumber":370,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":371,"author":{"gitId":"nealetham"},"content":"**MSS**","lastModifiedDate":"2022-09-21"},{"lineNumber":372,"author":{"gitId":"alvinjiang1"},"content":"1. User wants to see the full list of residents in [**RC4**](#glossary).","lastModifiedDate":"2022-10-02"},{"lineNumber":373,"author":{"gitId":"alvinjiang1"},"content":"2. User requests for the list of residents from RC4HDB.","lastModifiedDate":"2022-10-06"},{"lineNumber":374,"author":{"gitId":"alvinjiang1"},"content":"3. RC4HDB displays the details of all residents in [**RC4**](#glossary).","lastModifiedDate":"2022-10-06"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"alvinjiang1"},"content":"**Extensions**","lastModifiedDate":"2022-10-02"},{"lineNumber":379,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":380,"author":{"gitId":"nseah21"},"content":"* 1a. The user wants to view only certain fields in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":381,"author":{"gitId":"nseah21"},"content":"    ","lastModifiedDate":"2022-10-11"},{"lineNumber":382,"author":{"gitId":"nseah21"},"content":"  * 1a1. The user specifies which fields he wants to see or hide.","lastModifiedDate":"2022-10-11"},{"lineNumber":383,"author":{"gitId":"nseah21"},"content":"    ","lastModifiedDate":"2022-10-11"},{"lineNumber":384,"author":{"gitId":"nseah21"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2022-10-11"},{"lineNumber":385,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":386,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-26"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":389,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":390,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":391,"author":{"gitId":"alvinjiang1"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":392,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":393,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC4. Editing a single resident’s information**","lastModifiedDate":"2022-10-02"},{"lineNumber":394,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":395,"author":{"gitId":"nealetham"},"content":"**MSS**","lastModifiedDate":"2022-09-21"},{"lineNumber":396,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":397,"author":{"gitId":"alvinjiang1"},"content":"1. Resident has a specific change in personal information.","lastModifiedDate":"2022-10-02"},{"lineNumber":398,"author":{"gitId":"alvinjiang1"},"content":"2. User edits the resident\u0027s information in RC4HDB.","lastModifiedDate":"2022-10-02"},{"lineNumber":399,"author":{"gitId":"alvinjiang1"},"content":"3. RC4HDB updates the information of the specified resident.","lastModifiedDate":"2022-10-02"},{"lineNumber":400,"author":{"gitId":"alvinjiang1"},"content":"4. RC4HDB displays a message detailing the changes made.","lastModifiedDate":"2022-10-02"},{"lineNumber":401,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":402,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":403,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":404,"author":{"gitId":"nealetham"},"content":"**Extensions**","lastModifiedDate":"2022-09-21"},{"lineNumber":405,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":406,"author":{"gitId":"alvinjiang1"},"content":"* 2a. There is no relevant category for that information.","lastModifiedDate":"2022-10-02"},{"lineNumber":407,"author":{"gitId":"alvinjiang1"},"content":"  * 2a1. RC4HDB shows an error message.","lastModifiedDate":"2022-10-02"},{"lineNumber":408,"author":{"gitId":"nealetham"},"content":"  ","lastModifiedDate":"2022-09-21"},{"lineNumber":409,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":412,"author":{"gitId":"alvinjiang1"},"content":"* 2b. User enters resident information in an invalid format.","lastModifiedDate":"2022-10-02"},{"lineNumber":413,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":414,"author":{"gitId":"alvinjiang1"},"content":"    * 2b1. RC4HDB shows an error message.","lastModifiedDate":"2022-10-02"},{"lineNumber":415,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":416,"author":{"gitId":"alvinjiang1"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-10-02"},{"lineNumber":417,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":418,"author":{"gitId":"alvinjiang1"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC5. Finding a resident’s information by their name**","lastModifiedDate":"2022-10-02"},{"lineNumber":421,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":422,"author":{"gitId":"nealetham"},"content":"**MSS**","lastModifiedDate":"2022-09-21"},{"lineNumber":423,"author":{"gitId":"nealetham"},"content":"1. User wants to search for a resident’s information.","lastModifiedDate":"2022-09-26"},{"lineNumber":424,"author":{"gitId":"alvinjiang1"},"content":"2. User makes a request to RC4HDB to find a resident by their name.","lastModifiedDate":"2022-10-06"},{"lineNumber":425,"author":{"gitId":"alvinjiang1"},"content":"3. RC4HDB searches the database for the given name.","lastModifiedDate":"2022-10-02"},{"lineNumber":426,"author":{"gitId":"nealetham"},"content":"4. RC4HDB displays the resident\u0027s information.","lastModifiedDate":"2022-09-26"},{"lineNumber":427,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":428,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":429,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":430,"author":{"gitId":"alvinjiang1"},"content":"**Extensions**","lastModifiedDate":"2022-10-02"},{"lineNumber":431,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":432,"author":{"gitId":"nealetham"},"content":"* 3a. RC4HDB cannot find any resident matching the user input.","lastModifiedDate":"2022-09-26"},{"lineNumber":433,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":434,"author":{"gitId":"nealetham"},"content":"    * 3a1. RC4HDB shows an error message.","lastModifiedDate":"2022-09-21"},{"lineNumber":435,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":436,"author":{"gitId":"nealetham"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-09-21"},{"lineNumber":437,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":438,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":439,"author":{"gitId":"nealetham"},"content":"* 4b. RC4HDB finds multiple residents matching the user input.","lastModifiedDate":"2022-09-26"},{"lineNumber":440,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":441,"author":{"gitId":"nealetham"},"content":"    * 4b1. RC4HDB shows a list of all matching residents.","lastModifiedDate":"2022-09-21"},{"lineNumber":442,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":443,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":444,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":445,"author":{"gitId":"alvinjiang1"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":446,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":447,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC6. Filtering the list of all residents by specific fields**","lastModifiedDate":"2022-10-02"},{"lineNumber":448,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":449,"author":{"gitId":"nealetham"},"content":"**MSS**","lastModifiedDate":"2022-09-21"},{"lineNumber":450,"author":{"gitId":"nealetham"},"content":"1. User wants to see a list of residents that fall under a certain category.","lastModifiedDate":"2022-09-26"},{"lineNumber":451,"author":{"gitId":"alvinjiang1"},"content":"2. User requests for a filtered list from RC4HDB based on the relevant categories.","lastModifiedDate":"2022-10-06"},{"lineNumber":452,"author":{"gitId":"alvinjiang1"},"content":"3. RC4HDB shows the filtered list.","lastModifiedDate":"2022-10-02"},{"lineNumber":453,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":454,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":455,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":456,"author":{"gitId":"alvinjiang1"},"content":"**Extensions**","lastModifiedDate":"2022-10-02"},{"lineNumber":457,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":458,"author":{"gitId":"nealetham"},"content":"* 2a. User enters an invalid specifier i.e. one that is not `/all` or `/any`.","lastModifiedDate":"2022-09-26"},{"lineNumber":459,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":460,"author":{"gitId":"nealetham"},"content":"    * 2a1. RC4HDB shows an error message.","lastModifiedDate":"2022-09-21"},{"lineNumber":461,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":462,"author":{"gitId":"nealetham"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-09-21"},{"lineNumber":463,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":464,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":465,"author":{"gitId":"nealetham"},"content":"* 2b. User enters multiple specifiers i.e. both `/all` and `/any`.","lastModifiedDate":"2022-09-26"},{"lineNumber":466,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":467,"author":{"gitId":"nealetham"},"content":"    * 2b1. RC4HDB shows an error message.","lastModifiedDate":"2022-09-21"},{"lineNumber":468,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":469,"author":{"gitId":"nealetham"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-09-21"},{"lineNumber":470,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":471,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":472,"author":{"gitId":"nealetham"},"content":"* 2c. User enters a category that does not exist.","lastModifiedDate":"2022-09-26"},{"lineNumber":473,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":474,"author":{"gitId":"nealetham"},"content":"    * 2c1. RC4HDB shows an error message.","lastModifiedDate":"2022-09-21"},{"lineNumber":475,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":479,"author":{"gitId":"nealetham"},"content":"* 2d. User enters a value that does not exist in the category.","lastModifiedDate":"2022-09-26"},{"lineNumber":480,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":481,"author":{"gitId":"nealetham"},"content":"    * 2d1. RC4HDB shows an error message.","lastModifiedDate":"2022-09-21"},{"lineNumber":482,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":483,"author":{"gitId":"nealetham"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-09-21"},{"lineNumber":484,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":485,"author":{"gitId":"alvinjiang1"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":486,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":487,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC7. Deleting a single resident**","lastModifiedDate":"2022-10-02"},{"lineNumber":488,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":489,"author":{"gitId":"nealetham"},"content":"**MSS**","lastModifiedDate":"2022-09-21"},{"lineNumber":490,"author":{"gitId":"alvinjiang1"},"content":"1. Resident moves out of [**RC4**](#glossary).","lastModifiedDate":"2022-10-02"},{"lineNumber":491,"author":{"gitId":"alvinjiang1"},"content":"2. User deletes the resident from RC4HDB.","lastModifiedDate":"2022-10-06"},{"lineNumber":492,"author":{"gitId":"nealetham"},"content":"3. RC4HDB removes the corresponding resident from the database.","lastModifiedDate":"2022-09-26"},{"lineNumber":493,"author":{"gitId":"nealetham"},"content":"4. RC4HDB displays the details of that resident that has been deleted.","lastModifiedDate":"2022-09-26"},{"lineNumber":494,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":495,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":496,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":497,"author":{"gitId":"alvinjiang1"},"content":"**Extensions**","lastModifiedDate":"2022-10-02"},{"lineNumber":498,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":499,"author":{"gitId":"alvinjiang1"},"content":"* 2a. User enters an invalid input.","lastModifiedDate":"2022-10-02"},{"lineNumber":500,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":501,"author":{"gitId":"nealetham"},"content":"    * 2a1. RC4HDB shows an error message.","lastModifiedDate":"2022-09-26"},{"lineNumber":502,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":503,"author":{"gitId":"nealetham"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-09-21"},{"lineNumber":504,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":505,"author":{"gitId":"alvinjiang1"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":506,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":507,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC8. Clearing all data**","lastModifiedDate":"2022-10-02"},{"lineNumber":508,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":509,"author":{"gitId":"nealetham"},"content":"**MSS**","lastModifiedDate":"2022-09-21"},{"lineNumber":510,"author":{"gitId":"nealetham"},"content":"1. User wants to clear all data from the current working file.","lastModifiedDate":"2022-09-26"},{"lineNumber":511,"author":{"gitId":"alvinjiang1"},"content":"2. RC4HDB clears all data from the current working file.","lastModifiedDate":"2022-10-06"},{"lineNumber":512,"author":{"gitId":"alvinjiang1"},"content":"3. RC4HDB shows a success message.","lastModifiedDate":"2022-10-02"},{"lineNumber":513,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":514,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":515,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":516,"author":{"gitId":"alvinjiang1"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":518,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC9. Exiting the application**","lastModifiedDate":"2022-10-02"},{"lineNumber":519,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":520,"author":{"gitId":"nealetham"},"content":"**MSS**","lastModifiedDate":"2022-09-21"},{"lineNumber":521,"author":{"gitId":"nealetham"},"content":"1. User has completed his/her tasks and wants to exit the application.","lastModifiedDate":"2022-09-26"},{"lineNumber":522,"author":{"gitId":"alvinjiang1"},"content":"2. User exits the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":523,"author":{"gitId":"nealetham"},"content":"3. RC4HDB application closes.","lastModifiedDate":"2022-09-26"},{"lineNumber":524,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":525,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":526,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":527,"author":{"gitId":"alvinjiang1"},"content":"**Extensions**","lastModifiedDate":"2022-10-02"},{"lineNumber":528,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":529,"author":{"gitId":"nealetham"},"content":"* 2a. User clicks on the exit button.","lastModifiedDate":"2022-09-26"},{"lineNumber":530,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":531,"author":{"gitId":"nealetham"},"content":"    * 2a1. RC4HDB application closes.","lastModifiedDate":"2022-09-21"},{"lineNumber":532,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":533,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":534,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":535,"author":{"gitId":"alvinjiang1"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":536,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":537,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC10. Importing data from [CSV](#glossary) file**","lastModifiedDate":"2022-10-02"},{"lineNumber":538,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":539,"author":{"gitId":"nealetham"},"content":"**MSS**","lastModifiedDate":"2022-09-21"},{"lineNumber":540,"author":{"gitId":"nealetham"},"content":"1. User has a data file with resident’s information, and wants to view it in RC4HDB.","lastModifiedDate":"2022-09-26"},{"lineNumber":541,"author":{"gitId":"alvinjiang1"},"content":"2. User imports the file.","lastModifiedDate":"2022-10-02"},{"lineNumber":542,"author":{"gitId":"alvinjiang1"},"content":"3. RC4HDB reads the file.","lastModifiedDate":"2022-10-02"},{"lineNumber":543,"author":{"gitId":"alvinjiang1"},"content":"4. RC4HDB displays the name of the [**CSV**](#glossary) file after the file has been read.","lastModifiedDate":"2022-10-02"},{"lineNumber":544,"author":{"gitId":"nealetham"},"content":"5. RC4HDB displays all the information stored in the file.","lastModifiedDate":"2022-09-26"},{"lineNumber":545,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":546,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":547,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":548,"author":{"gitId":"alvinjiang1"},"content":"**Extensions**","lastModifiedDate":"2022-10-02"},{"lineNumber":549,"author":{"gitId":"alvinjiang1"},"content":"* 2a. Information in the [**CSV**](#glossary) file has not been stored in the proper format.","lastModifiedDate":"2022-10-02"},{"lineNumber":550,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":551,"author":{"gitId":"alvinjiang1"},"content":"    * 2a1. RC4HDB shows an error message.","lastModifiedDate":"2022-10-02"},{"lineNumber":552,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":553,"author":{"gitId":"nealetham"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-09-21"},{"lineNumber":554,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":555,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":556,"author":{"gitId":"alvinjiang1"},"content":"* 3a. No file could be found at the specified file path.","lastModifiedDate":"2022-10-02"},{"lineNumber":557,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":558,"author":{"gitId":"alvinjiang1"},"content":"    * 3a1. RC4HDB shows an error message.","lastModifiedDate":"2022-10-02"},{"lineNumber":559,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":560,"author":{"gitId":"nealetham"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-09-21"},{"lineNumber":561,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":562,"author":{"gitId":"alvinjiang1"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":563,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":564,"author":{"gitId":"alvinjiang1"},"content":"**Use case: UC11. Exporting data to [CSV](#glossary) file**","lastModifiedDate":"2022-10-02"},{"lineNumber":565,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":566,"author":{"gitId":"nealetham"},"content":"**MSS**","lastModifiedDate":"2022-09-21"},{"lineNumber":567,"author":{"gitId":"alvinjiang1"},"content":"1. User wants the data in a [**CSV**](#glossary) file.","lastModifiedDate":"2022-10-02"},{"lineNumber":568,"author":{"gitId":"alvinjiang1"},"content":"2. User exports the file.","lastModifiedDate":"2022-10-02"},{"lineNumber":569,"author":{"gitId":"alvinjiang1"},"content":"3. RC4HDB creates a new [**CSV**](#glossary) file using user input.","lastModifiedDate":"2022-10-02"},{"lineNumber":570,"author":{"gitId":"nealetham"},"content":"4. RC4HDB shows a success message.","lastModifiedDate":"2022-09-26"},{"lineNumber":571,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":572,"author":{"gitId":"nealetham"},"content":"    Use case ends.","lastModifiedDate":"2022-09-21"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":574,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"nealetham"},"content":"#### Accessibility","lastModifiedDate":"2022-09-21"},{"lineNumber":579,"author":{"gitId":"nealetham"},"content":"* The application must not require an internet connection to work","lastModifiedDate":"2022-09-21"},{"lineNumber":580,"author":{"gitId":"alvinjiang1"},"content":"* Inputs must be done through the [`Command Line Interface (CLI)`](#glossary)","lastModifiedDate":"2022-10-02"},{"lineNumber":581,"author":{"gitId":"nealetham"},"content":"* The application must be sufficiently light-weight to be run by older computer systems","lastModifiedDate":"2022-09-21"},{"lineNumber":582,"author":{"gitId":"alvinjiang1"},"content":"* Should work on any [`Mainstream OS`](#glossary) as long as it has Java 11 or above installed","lastModifiedDate":"2022-10-02"},{"lineNumber":583,"author":{"gitId":"nealetham"},"content":"* A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse","lastModifiedDate":"2022-09-21"},{"lineNumber":584,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":585,"author":{"gitId":"nealetham"},"content":"#### Quality","lastModifiedDate":"2022-09-21"},{"lineNumber":586,"author":{"gitId":"nealetham"},"content":"* The application must be able to be easily learnt within a week by administrative staff with limited technical knowledge","lastModifiedDate":"2022-09-26"},{"lineNumber":587,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":588,"author":{"gitId":"nealetham"},"content":"#### Technical","lastModifiedDate":"2022-09-21"},{"lineNumber":589,"author":{"gitId":"nealetham"},"content":"* The system must be able to handle approximately 300 to 500 entries without a noticeable sluggishness in performance for typical usage","lastModifiedDate":"2022-09-21"},{"lineNumber":590,"author":{"gitId":"alvinjiang1"},"content":"* The system must be flexible and extensible for potential overhaul or changes to the [**RC4**](#glossary) housing management system","lastModifiedDate":"2022-10-02"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"nealetham"},"content":"* **Command Line Interface (CLI)**: An area in the application interface for users to input commands","lastModifiedDate":"2022-09-21"},{"lineNumber":596,"author":{"gitId":"alvinjiang1"},"content":"* **Comma-Separated Values (CSV)**: A delimited text file that uses a comma to separate values and each line of the file is a data record ","lastModifiedDate":"2022-10-02"},{"lineNumber":597,"author":{"gitId":"nealetham"},"content":"* **Display Window**: An area in the application interface for users to view the output of their commands","lastModifiedDate":"2022-09-21"},{"lineNumber":598,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-10-02"},{"lineNumber":599,"author":{"gitId":"nealetham"},"content":"* **NUS**: The National University of Singapore","lastModifiedDate":"2022-09-21"},{"lineNumber":600,"author":{"gitId":"nealetham"},"content":"* **RC4**: Residential College 4 which resides in NUS","lastModifiedDate":"2022-09-21"},{"lineNumber":601,"author":{"gitId":"nealetham"},"content":"* **Resident**: A NUS student who lives in RC4","lastModifiedDate":"2022-09-21"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jq1836":7,"nseah21":8,"alvinjiang1":114,"nealetham":166,"-":359}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"   1. Run the `seedu.rc4hdb.Main` and try a few commands.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"nseah21":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"   e.g. `seedu.rc4hdb.commons.StringUtilTest`","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"nseah21"},"content":"   e.g. `seedu.rc4hdb.storage.StorageManagerTest`","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"   e.g. `seedu.rc4hdb.logic.LogicManagerTest`","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"nseah21":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"nealetham"},"content":"RC4HDB is a **desktop app for managing RC4 housing related information, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, RC4HDB can be a convenient and intuitive way to facilitate your day-to-day workflow as a RC4 housing management staff.","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"nealetham"},"content":"## Table of Contents","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"nealetham"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"nealetham"},"content":"* [Features](#features)","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"nealetham"},"content":"    * [Viewing help : help](#viewing-help--help)","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"nealetham"},"content":"    * [Adding a resident : add](#adding-a-resident--add)","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"nealetham"},"content":"    * [Listing all residents : list](#listing-all-residents--list)","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"nealetham"},"content":"    * [Editing an existing resident : edit](#editing-an-existing-resident--edit)","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"nealetham"},"content":"    * [Locating residents by names : find](#locating-residents-by-name--find)","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"nealetham"},"content":"    * [Filtering residents by field : filter](#filtering-residents-by-field--filter)","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"nealetham"},"content":"    * [Deleting a resident : delete](#deleting-a-resident--delete)","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"nealetham"},"content":"    * [Clearing all entries : clear](#clearing-all-entries--clear)","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"nealetham"},"content":"    * [Exiting the program : exit](#exiting-the-program--exit)","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"nealetham"},"content":"    * [Saving the data](#saving-the-data)","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"nealetham"},"content":"    * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"nealetham"},"content":"    * [Importing from csv file : import](#importing-from-csv-file--import)","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"nealetham"},"content":"    * [Exporting to csv file : export](#exporting-to-csv-file--export)","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"nealetham"},"content":"    * [CSV file format](#csv-file-format)","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"nealetham"},"content":"    * [Format for resident fields](#format-for-resident-fields)","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"nealetham"},"content":"* [Keyboard Shortcuts](#keyboard-shortcuts)","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"nealetham"},"content":"* [Frequently Asked Questions](#faq)","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"nealetham"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"nealetham"},"content":"1. Download the latest `rc4hdb.jar` from [here](https://github.com/AY2223S1-CS2103T-W12-3/tp/releases/).","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"nealetham"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your RC4HDB.","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"nealetham"},"content":"1. Refer to the [Features](#features) below for details of on how to use RC4HDB.","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"nealetham"},"content":"\u003c!--- 1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"nealetham"},"content":"![Ui](images/Ui.png) ---\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"nealetham"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken, unless otherwise specified.\u003cbr\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"nealetham"},"content":"Shows a summary of all commands, and examples of its usage, as well as a message directing the user to our user guide.","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"nealetham"},"content":"\u003c!---","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"nealetham"},"content":"---\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"nealetham"},"content":"### Adding a resident : `add`","lastModifiedDate":"2022-09-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"nealetham"},"content":"Adds a resident to the database. The format for resident fields can be found [here](#format-for-resident-fields).","lastModifiedDate":"2022-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"nealetham"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL r/FLOOR-UNIT g/GENDER h/HOUSE m/MATRIC_NUMBER [t/TAG]…​`","lastModifiedDate":"2022-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"nealetham"},"content":"A resident can have any number of tags (including 0)","lastModifiedDate":"2022-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"nealetham"},"content":"* `add n/John Doe p/98765432 e/johnDoe@gmail.com r/5-1 g/M h/D m/A9876543B` adds a resident named John Doe, with relevant personal and student information.","lastModifiedDate":"2022-09-22"},{"lineNumber":99,"author":{"gitId":"nealetham"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com r/2-3 p/1234567 m/A3456789B g/F h/A` adds a resident named Betsy Crowe, with relevant personal and student information.","lastModifiedDate":"2022-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"nealetham"},"content":"### Listing all residents : `list`","lastModifiedDate":"2022-09-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"nseah21"},"content":"Shows a list of all residents in the RC4HDB database. Use the specifiers `/i` for include and `/e` for exclude, followed by the field names of the columns to show or hide. All field names entered are case-insensitive.","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"nseah21"},"content":"Format:","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"nseah21"},"content":"`list` to list all residents in the database with all fields visible","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"nseah21"},"content":"`list /i [FIELD_1] [FIELD_2]...` to list all residents in the database with only `[FIELD_1] [FIELD_2]...` visible.","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"nseah21"},"content":"`list /e [FIELD_1] [FIELD_2]...` to list all residents in the database with all fields visible except `[FIELD_1] [FIELD_2]...`","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"nealetham"},"content":"### Editing an existing resident : `edit`","lastModifiedDate":"2022-09-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"nealetham"},"content":"Edits the data of an existing resident in the RC4HDB database.","lastModifiedDate":"2022-09-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"nealetham"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [r/FLOOR-UNIT] [g/GENDER] [h/HOUSE] [m/MATRIC_NUMBER] [t/TAG]…​`","lastModifiedDate":"2022-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"nealetham"},"content":"* Edits the resident at the specified `INDEX`. The index refers to the index number shown in the displayed residents list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"nealetham"},"content":"* When editing tags, the existing tags of the resident will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-09-25"},{"lineNumber":123,"author":{"gitId":"nealetham"},"content":"* You can remove all the resident’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"nealetham"},"content":"*  `edit 1 p/91234567 r/5-8` Edits the phone number, room number of the 1st resident to be `91234567`, and `5-8` respectively.","lastModifiedDate":"2022-09-25"},{"lineNumber":127,"author":{"gitId":"nealetham"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd resident to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"nealetham"},"content":"### Locating residents by name : `find`","lastModifiedDate":"2022-09-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"nealetham"},"content":"Finds residents whose names contain any of the given keywords.","lastModifiedDate":"2022-09-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"nealetham"},"content":"Format: `find NAME [ADDITIONAL_NAMES]`","lastModifiedDate":"2022-09-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"nealetham"},"content":"* Full and partial words will be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"nealetham"},"content":"* Residents matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"nealetham"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-10-08"},{"lineNumber":145,"author":{"gitId":"nealetham"},"content":"* `find char li` returns `Charlotte Oliveiro`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":146,"author":{"gitId":"nealetham"},"content":"  \u003c!--- ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png) ---\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":147,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":148,"author":{"gitId":"nealetham"},"content":"### Filtering residents by field : `filter`","lastModifiedDate":"2022-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":150,"author":{"gitId":"nealetham"},"content":"Shows a list of residents whose fields match the input keywords.","lastModifiedDate":"2022-09-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":152,"author":{"gitId":"nareus"},"content":"Format: `filter KEY/VALUE [ADDITIONAL_KEYS/ADDITIONAL_VALUES]`","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"nareus"},"content":"* The fields have to be the same (no substrings allowed) for the resident to be filtered.","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"nareus"},"content":"* Commands with multiple fields require the resident to match all the fields to be filtered.","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"nealetham"},"content":"* Valid keys are those included [here](#format-for-resident-fields), and any additional tags.","lastModifiedDate":"2022-09-22"},{"lineNumber":156,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":157,"author":{"gitId":"nealetham"},"content":"Examples:","lastModifiedDate":"2022-09-18"},{"lineNumber":158,"author":{"gitId":"nareus"},"content":"* `filter h/D g/M` returns residents who are in Draco house, **and** are Male.","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"nealetham"},"content":"* `filter g/M` returns residents who are male.","lastModifiedDate":"2022-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"nealetham"},"content":"### Deleting a resident : `delete`","lastModifiedDate":"2022-09-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"nealetham"},"content":"Deletes the specified resident from the RC4HDB database.","lastModifiedDate":"2022-09-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"nealetham"},"content":"* Deletes the resident at the specified `INDEX`.","lastModifiedDate":"2022-09-25"},{"lineNumber":168,"author":{"gitId":"nealetham"},"content":"* The index refers to the index number shown in the displayed resident list.","lastModifiedDate":"2022-09-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"nealetham"},"content":"* `list` followed by `delete 2` deletes the 2nd resident in the database.","lastModifiedDate":"2022-09-18"},{"lineNumber":173,"author":{"gitId":"nealetham"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st resident in the results of the `find` command.","lastModifiedDate":"2022-09-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"nealetham"},"content":"Clears all entries from the database.","lastModifiedDate":"2022-09-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"nealetham"},"content":"RC4HDB data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":193,"author":{"gitId":"nealetham"},"content":"RC4HDB data are saved as a JSON file `[JAR file location]/data/FILE_NAME.json`, where `FILE_NAME` is the name of the current data file. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-22"},{"lineNumber":194,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":195,"author":{"gitId":"nealetham"},"content":":information_source: Do take note that this is not the recommended method to edit data.\u003cbr\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":198,"author":{"gitId":"nealetham"},"content":"If your changes to the data file makes its format invalid, RC4HDB will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":201,"author":{"gitId":"nealetham"},"content":"### Importing from CSV file : `import`","lastModifiedDate":"2022-09-18"},{"lineNumber":202,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":203,"author":{"gitId":"nealetham"},"content":"RC4HDB has the ability to import data through .csv files. In order for RC4HDB to find your files, place them in the data directory, `[JAR file location]/data`.","lastModifiedDate":"2022-09-18"},{"lineNumber":204,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":205,"author":{"gitId":"nealetham"},"content":"Format: `import FILENAME`","lastModifiedDate":"2022-09-18"},{"lineNumber":206,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":207,"author":{"gitId":"nealetham"},"content":":information_source: The csv file that you want to have imported must follow this [format](#csv-file-format).\u003cbr\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":208,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":209,"author":{"gitId":"nealetham"},"content":"Examples:","lastModifiedDate":"2022-09-18"},{"lineNumber":210,"author":{"gitId":"nealetham"},"content":"* `import students.csv`","lastModifiedDate":"2022-09-18"},{"lineNumber":211,"author":{"gitId":"nealetham"},"content":"* `import residents.csv`","lastModifiedDate":"2022-09-18"},{"lineNumber":212,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":213,"author":{"gitId":"nealetham"},"content":"### Exporting to CSV file : `export`","lastModifiedDate":"2022-09-18"},{"lineNumber":214,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":215,"author":{"gitId":"nealetham"},"content":"RC4HDB has the ability to export data to .csv files. The file will be safe to remove from the directory, `[JAR file location]/data`.","lastModifiedDate":"2022-09-18"},{"lineNumber":216,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":217,"author":{"gitId":"nealetham"},"content":"Format: `export FILENAME`","lastModifiedDate":"2022-09-18"},{"lineNumber":218,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":219,"author":{"gitId":"nealetham"},"content":":information_source: The csv file will be exported in this [format](#csv-file-format).\u003cbr\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":220,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":221,"author":{"gitId":"nealetham"},"content":"Examples:","lastModifiedDate":"2022-09-18"},{"lineNumber":222,"author":{"gitId":"nealetham"},"content":"* `export students.csv` will export the current data file into a csv file named `students.csv`","lastModifiedDate":"2022-09-18"},{"lineNumber":223,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":224,"author":{"gitId":"nealetham"},"content":"### CSV file format","lastModifiedDate":"2022-09-18"},{"lineNumber":225,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":226,"author":{"gitId":"nealetham"},"content":"| INDEX | NAME         | PHONE_NUMBER | EMAIL                 | FLOOR-UNIT | GENDER | HOUSE  | MATRIC_NUMBER | TAGS   |","lastModifiedDate":"2022-09-22"},{"lineNumber":227,"author":{"gitId":"nealetham"},"content":"|-------|--------------|--------------|-----------------------|------------|--------|--------|---------------|--------|","lastModifiedDate":"2022-09-22"},{"lineNumber":228,"author":{"gitId":"nealetham"},"content":"| 1     | John Doe     | 91234567     | johnDoe@gmail.com     |    5-8     | M      | D      | A9876543B     | -      |","lastModifiedDate":"2022-09-22"},{"lineNumber":229,"author":{"gitId":"nealetham"},"content":"| 2     | Maggie Smith | 98765432     | maggieSmith@gmail.com |    4-1     | F      | A      | A3456789B     | Friend |","lastModifiedDate":"2022-09-22"},{"lineNumber":230,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":231,"author":{"gitId":"nealetham"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"nealetham"},"content":"### Format for resident fields","lastModifiedDate":"2022-09-22"},{"lineNumber":235,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":236,"author":{"gitId":"nealetham"},"content":"`n/NAME`","lastModifiedDate":"2022-09-25"},{"lineNumber":237,"author":{"gitId":"nealetham"},"content":"* Must be a string","lastModifiedDate":"2022-09-22"},{"lineNumber":238,"author":{"gitId":"nealetham"},"content":"* Spaces are allowed","lastModifiedDate":"2022-09-22"},{"lineNumber":239,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":240,"author":{"gitId":"nealetham"},"content":"`p/PHONE_NUMBER`","lastModifiedDate":"2022-09-25"},{"lineNumber":241,"author":{"gitId":"nealetham"},"content":"* Must be an **8**-digit non-negative integer","lastModifiedDate":"2022-09-22"},{"lineNumber":242,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":243,"author":{"gitId":"nealetham"},"content":"`e/EMAIL`","lastModifiedDate":"2022-09-25"},{"lineNumber":244,"author":{"gitId":"nealetham"},"content":"* Can be any string, valid or invalid email","lastModifiedDate":"2022-09-22"},{"lineNumber":245,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":246,"author":{"gitId":"nealetham"},"content":"`r/FLOOR-UNIT`","lastModifiedDate":"2022-09-25"},{"lineNumber":247,"author":{"gitId":"nealetham"},"content":"* The floor number and unit number must be separated by a hyphen","lastModifiedDate":"2022-09-22"},{"lineNumber":248,"author":{"gitId":"nealetham"},"content":"* Both floor and unit number must be a non-negative integer","lastModifiedDate":"2022-09-22"},{"lineNumber":249,"author":{"gitId":"nealetham"},"content":"* e.g. `5-8`","lastModifiedDate":"2022-09-22"},{"lineNumber":250,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":251,"author":{"gitId":"nealetham"},"content":"`g/GENDER`","lastModifiedDate":"2022-09-25"},{"lineNumber":252,"author":{"gitId":"nealetham"},"content":"* `M` or `F`","lastModifiedDate":"2022-09-25"},{"lineNumber":253,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":254,"author":{"gitId":"nealetham"},"content":"`h/HOUSE`","lastModifiedDate":"2022-09-25"},{"lineNumber":255,"author":{"gitId":"nealetham"},"content":"* Represents the RC4 house that the resident is allocated to","lastModifiedDate":"2022-09-22"},{"lineNumber":256,"author":{"gitId":"nealetham"},"content":"* Must be either `D`, `U`, `L`, `A`, `N`","lastModifiedDate":"2022-09-22"},{"lineNumber":257,"author":{"gitId":"nealetham"},"content":"* `D` stands for **Draco**, `U` for **Ursa**, `L` for **Leo**, `A` for **Aquila**, `N` for **Noctua**","lastModifiedDate":"2022-09-22"},{"lineNumber":258,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":259,"author":{"gitId":"nealetham"},"content":"`m/MATRIC_NUMBER`","lastModifiedDate":"2022-09-25"},{"lineNumber":260,"author":{"gitId":"nealetham"},"content":"* Must be an uppercase `A`, followed by a **7**-digit non-negative integer and an uppercase alphabet.","lastModifiedDate":"2022-09-22"},{"lineNumber":261,"author":{"gitId":"nealetham"},"content":"* e.g. `A0123456A`","lastModifiedDate":"2022-09-22"},{"lineNumber":262,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":263,"author":{"gitId":"nealetham"},"content":"`t/TAG`","lastModifiedDate":"2022-09-25"},{"lineNumber":264,"author":{"gitId":"nealetham"},"content":"* Represents any other key that could be used to identify a resident","lastModifiedDate":"2022-09-25"},{"lineNumber":265,"author":{"gitId":"nealetham"},"content":"* Must be a string. No restrictions on formatting","lastModifiedDate":"2022-09-25"},{"lineNumber":266,"author":{"gitId":"nealetham"},"content":"* Optional. A resident can have any number of tags, including 0","lastModifiedDate":"2022-09-25"},{"lineNumber":267,"author":{"gitId":"nealetham"},"content":"* When editing tags, the existing tags of the resident will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-09-25"},{"lineNumber":268,"author":{"gitId":"nealetham"},"content":"* You can remove all the resident’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-09-25"},{"lineNumber":269,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":270,"author":{"gitId":"nealetham"},"content":"_More details coming soon ..._","lastModifiedDate":"2022-09-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"nealetham"},"content":"## Keyboard Shortcuts","lastModifiedDate":"2022-10-12"},{"lineNumber":275,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":276,"author":{"gitId":"nealetham"},"content":"Inline with our optimization for use via a **Command Line Interface (CLI)**. Here are several keyboard shortcuts that ","lastModifiedDate":"2022-10-12"},{"lineNumber":277,"author":{"gitId":"nealetham"},"content":"you may find useful for your use:","lastModifiedDate":"2022-10-12"},{"lineNumber":278,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":279,"author":{"gitId":"nealetham"},"content":"Key | Functionality","lastModifiedDate":"2022-10-12"},{"lineNumber":280,"author":{"gitId":"nealetham"},"content":"----|------------------","lastModifiedDate":"2022-10-12"},{"lineNumber":281,"author":{"gitId":"nealetham"},"content":"`Esc`| Closes the Help Window if it\u0027s open","lastModifiedDate":"2022-10-15"},{"lineNumber":282,"author":{"gitId":"nealetham"},"content":"`F1` | Opens the Help Window if it\u0027s not open","lastModifiedDate":"2022-10-17"},{"lineNumber":283,"author":{"gitId":"nealetham"},"content":"`F2` | Highlights the first row of the displayed list","lastModifiedDate":"2022-10-12"},{"lineNumber":284,"author":{"gitId":"nealetham"},"content":"`F3` | Quick-access to the command input box","lastModifiedDate":"2022-10-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"nealetham"},"content":"**A**: First, export the data from your computer using the export command and transfer the file to the new computer. Install RC4HDB on the other computer and use the import command to import the data from the csv file.","lastModifiedDate":"2022-09-18"},{"lineNumber":292,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":293,"author":{"gitId":"nealetham"},"content":"**Q**: Can I search using fields other than the name?\u003cbr\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":294,"author":{"gitId":"nealetham"},"content":"**A**: You can use the filter command to search for people using the other fields.","lastModifiedDate":"2022-09-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2022-09-18"},{"lineNumber":303,"author":{"gitId":"nealetham"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL r/FLOOR-UNIT g/GENDER h/HOUSE m/MATRIC_NUMBER [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com r/2-1 g/M h/D m/A9876543B`","lastModifiedDate":"2022-09-22"},{"lineNumber":304,"author":{"gitId":"nseah21"},"content":"**List** | `list`, `list /i [FIELD_1] [FIELD_2]...`, or `list /e [FIELD_1] [FIELD_2]...` e.g., `list /i name phone address`","lastModifiedDate":"2022-10-11"},{"lineNumber":305,"author":{"gitId":"nealetham"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [r/FLOOR-UNIT] [g/GENDER] [h/HOUSE] [m/MATRIC_NUMBER] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-09-22"},{"lineNumber":306,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"nealetham"},"content":"**Filter** | `filter [/specifier] KEY:VALUE [ADDITIONAL_KEYS:ADDITIONAL_VALUES]` \u003cbr\u003e e.g., `filter /all h/D g/M`","lastModifiedDate":"2022-09-22"},{"lineNumber":308,"author":{"gitId":"nealetham"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2022-09-18"},{"lineNumber":309,"author":{"gitId":"nealetham"},"content":"**Clear** | `clear`","lastModifiedDate":"2022-09-18"},{"lineNumber":310,"author":{"gitId":"nealetham"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-09-18"},{"lineNumber":311,"author":{"gitId":"nealetham"},"content":"**Import** | `import FILENAME` \u003cbr\u003e e.g., `import students.csv`","lastModifiedDate":"2022-09-18"},{"lineNumber":312,"author":{"gitId":"nealetham"},"content":"**Export** | `export FILENAME` \u003cbr\u003e e.g., `export students.csv`","lastModifiedDate":"2022-09-18"},{"lineNumber":313,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":314,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":315,"author":{"gitId":"nealetham"},"content":"---","lastModifiedDate":"2022-09-18"},{"lineNumber":316,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":317,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":318,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"nseah21":6,"nareus":4,"nealetham":172,"-":136}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"alvinjiang1"},"content":"    content: \"RC4HDB\";","lastModifiedDate":"2022-09-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"alvinjiang1":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"title: RC4HDB","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103T-W12-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-W12-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-21"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W12-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S1-CS2103T-W12-3/tp)","lastModifiedDate":"2022-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"This project is named `RC4 Housing Database` (`RC4HDB` for short). RC4HDB is designed to aid **NUS RC4 housing management staff** in their day-to-day workflow","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"by providing a means to store and manipulate **RC4** resident information.","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"* If you are interested in using RC4HDB, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"* If you are interested about developing RC4HDB, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jq1836":7,"-":13}},{"path":"docs/team/alvinjiang1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"title: Project Portfolio Page for Alvin Jiang","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"## Overview","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"**RC4 Housing Database** offers a convenient and intuitive interface for RC4 housing management staff to streamline their daily operations.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"## Summary of Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"I contributed code to the following modules/classes:","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"You may view these contributions in more detail at [this link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dalvinjiang1\u0026breakdown\u003dtrue).","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"\u003c!-- Please replace the placeholder in the above URL with your github username. --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"### Enhancements implemented:","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"I made the following enhancements to our product:","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"### Contributions to the UG:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"I contributed to the following sections of the user guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"### Contributions to the DG:","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"I contributed to the following sections of the developer guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"In particular, I added/updated the following UML diagrams:","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"\u003c!-- Provide links to the diagrams in the appendix at the bottom of the page --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"I contributed to the following team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"I reviewed the following pull requests:","lastModifiedDate":"2022-09-27"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"1. [Add profile photo for Nicholas #21](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/21)","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"2. [Create skeletal project portfolio page #22](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/22)","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"3. [Edit README #28](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/28)","lastModifiedDate":"2022-09-27"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"4. [Update index.md #29](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/29)","lastModifiedDate":"2022-09-27"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"5. [Update UG and DG #30](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/30)","lastModifiedDate":"2022-09-27"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"I also gave guidance to my team on the following matters:","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"Beyond the project team, I also participated actively in the forum.","lastModifiedDate":"2022-09-27"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"These are some threads in which I offered help to my classmates:","lastModifiedDate":"2022-09-27"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"\u003c!-- Provide links to the threads here --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"For the practical examination, I also surfaced critical bugs in the other team\u0027s product.","lastModifiedDate":"2022-09-27"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"Some examples of these are:","lastModifiedDate":"2022-09-27"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"## Appendix","lastModifiedDate":"2022-09-27"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"1. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"2. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"3. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"1. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"2. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"3. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"jq1836":105}},{"path":"docs/team/jq1836.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"title: Project Portfolio Page for Jordan Quah","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"## Overview","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"**RC4 Housing Database** offers a convenient and intuitive interface for RC4 housing management staff to streamline their daily operations.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"## Summary of Contributions","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"### Code contributed:","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"I contributed code to the following modules/classes:","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"You may view these contributions in more detail at [this link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djq1836\u0026breakdown\u003dtrue).","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"### Enhancements implemented:","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"I made the following enhancements to our product:","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"### Contributions to the UG:","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"I contributed to the following sections of the user guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"### Contributions to the DG:","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"I contributed to the following sections of the developer guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"In particular, I added/updated the following UML diagrams:","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"\u003c!-- Provide links to the diagrams in the appendix at the bottom of the page --\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"I contributed to the following team-based tasks:","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"I reviewed the following pull requests:","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"1. [Add Alvin\u0027s info #13](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/13)","lastModifiedDate":"2022-09-27"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"2. [Create skeletal project portfolio page #22](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/22)","lastModifiedDate":"2022-09-27"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"3. [Use Jekyll for Project Documentation #27](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/27)","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"4. [Edit README #28](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/28)","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"5. [Update UG and DG #30](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/30)","lastModifiedDate":"2022-09-27"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"I also gave guidance to my team on the following matters:","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"1. *GitHub actions repository wide check **\u0027\\r\\n\u0027** error.*","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"Beyond the project team, I also participated actively in the forum.","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"These are some threads in which I offered help to my classmates:","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"\u003c!-- Provide links to the threads here --\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"For the practical examination, I also surfaced critical bugs in the other team\u0027s product.","lastModifiedDate":"2022-09-26"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"Some examples of these are:","lastModifiedDate":"2022-09-26"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-26"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-26"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-26"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"## Appendix","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"1. ![]()","lastModifiedDate":"2022-09-26"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"2. ![]()","lastModifiedDate":"2022-09-26"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"3. ![]()","lastModifiedDate":"2022-09-26"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"1. ![]()","lastModifiedDate":"2022-09-26"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"2. ![]()","lastModifiedDate":"2022-09-26"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"3. ![]()","lastModifiedDate":"2022-09-26"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"jq1836":103}},{"path":"docs/team/nareus.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"title: Project Portfolio Page for Naren Sreekanth","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"## Overview","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"**RC4 Housing Database** offers a convenient and intuitive interface for RC4 housing management staff to streamline their daily operations.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"## Summary of Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"I contributed code to the following modules/classes:","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"You may view these contributions in more detail at [this link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dnareus\u0026breakdown\u003dtrue).","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"\u003c!-- Please replace the placeholder in the above URL with your github username. --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"### Enhancements implemented:","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"I made the following enhancements to our product:","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"### Contributions to the UG:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"I contributed to the following sections of the user guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"### Contributions to the DG:","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"I contributed to the following sections of the developer guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"In particular, I added/updated the following UML diagrams:","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"\u003c!-- Provide links to the diagrams in the appendix at the bottom of the page --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"I contributed to the following team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"I reviewed the following pull requests:","lastModifiedDate":"2022-09-27"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"1. [Add profile photo for Jordan #14](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/14)","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"2. [Update index.md #29](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/29)","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"3.","lastModifiedDate":"2022-09-27"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"I also gave guidance to my team on the following matters:","lastModifiedDate":"2022-09-27"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"Beyond the project team, I also participated actively in the forum.","lastModifiedDate":"2022-09-27"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"These are some threads in which I offered help to my classmates:","lastModifiedDate":"2022-09-27"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"\u003c!-- Provide links to the threads here --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"For the practical examination, I also surfaced critical bugs in the other team\u0027s product.","lastModifiedDate":"2022-09-27"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"Some examples of these are:","lastModifiedDate":"2022-09-27"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"## Appendix","lastModifiedDate":"2022-09-27"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"1. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"2. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"3. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"1. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"2. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"3. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"jq1836":103}},{"path":"docs/team/nealetham.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"title: Project Portfolio Page for Neale Tham","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"## Overview","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"**RC4 Housing Database** offers a convenient and intuitive interface for RC4 housing management staff to streamline their daily operations.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"## Summary of Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"I contributed code to the following modules/classes:","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"You may view these contributions in more detail at [this link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dnealetham\u0026breakdown\u003dtrue).","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"\u003c!-- Please replace the placeholder in the above URL with your github username. --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"### Enhancements implemented:","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"I made the following enhancements to our product:","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"### Contributions to the UG:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"I contributed to the following sections of the user guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"### Contributions to the DG:","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"I contributed to the following sections of the developer guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"In particular, I added/updated the following UML diagrams:","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"\u003c!-- Provide links to the diagrams in the appendix at the bottom of the page --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"I contributed to the following team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"I reviewed the following pull requests:","lastModifiedDate":"2022-09-27"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"1. [Add profile photo for Naren #23](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/23)","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"2. [Create skeletal project portfolio page #22](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/22)","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"3. [Edit README #28](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/28)","lastModifiedDate":"2022-09-27"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"4. [Update index.md #29](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/29)","lastModifiedDate":"2022-09-27"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"I also gave guidance to my team on the following matters:","lastModifiedDate":"2022-09-27"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-27"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"Beyond the project team, I also participated actively in the forum.","lastModifiedDate":"2022-09-27"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"These are some threads in which I offered help to my classmates:","lastModifiedDate":"2022-09-27"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"\u003c!-- Provide links to the threads here --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"For the practical examination, I also surfaced critical bugs in the other team\u0027s product.","lastModifiedDate":"2022-09-27"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"Some examples of these are:","lastModifiedDate":"2022-09-27"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"2. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"3. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"## Appendix","lastModifiedDate":"2022-09-27"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"1. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"2. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"3. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"1. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"2. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"3. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"jq1836":104}},{"path":"docs/team/nseah21.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"title: Project Portfolio Page for Nicholas Seah","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"## Overview","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"**RC4 Housing Database** offers a convenient and intuitive interface for RC4 housing management staff to streamline their daily operations.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"## Summary of Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"I contributed code to the following modules/classes:","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"1. *Coming soon*","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"You may view these contributions in more detail at [this link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dnseah21\u0026breakdown\u003dtrue).","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"\u003c!-- Please replace the placeholder in the above URL with your github username. --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"### Enhancements implemented:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"I made the following enhancements to our product:","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"1. *Coming soon*","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"### Contributions to the UG:","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"I contributed to the following sections of the user guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"1. [Locating residents by name : `find`](https://ay2223s1-cs2103t-w12-3.github.io/tp/UserGuide.html#locating-residents-by-name--find)","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"2. [Filtering residents by field : `filter`](https://ay2223s1-cs2103t-w12-3.github.io/tp/UserGuide.html#filtering-residents-by-field--filter)","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"### Contributions to the DG:","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"I contributed to the following sections of the developer guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"1. Use cases","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"In particular, I added/updated the following UML diagrams:","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"\u003c!-- Provide links to the diagrams in the appendix at the bottom of the page --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"I contributed to the following team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"1. Created the skeletal project portfolio page for my team","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"2. Created the UI mockup for RC4HDB","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"I reviewed the following pull requests:","lastModifiedDate":"2022-09-27"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"1. [Add Neale\u0027s info #20](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/20)","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"2. [Update UG and DG #30](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/30)","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"3.","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"I also gave guidance to my team on the following matters:","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"1. Discussed and enforced code quality standards for our code base","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"Beyond the project team, I also participated actively in the forum.","lastModifiedDate":"2022-09-27"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"These are some threads in which I offered help to my classmates:","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"\u003c!-- Provide links to the threads here --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"For the practical examination, I also surfaced critical bugs in the other team\u0027s product.","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"Some examples of these are:","lastModifiedDate":"2022-09-27"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"1. []()","lastModifiedDate":"2022-09-27"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"## Appendix","lastModifiedDate":"2022-09-27"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"1. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"2. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"3. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"1. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"2. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"3. ![]()","lastModifiedDate":"2022-09-27"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"jq1836":87}},{"path":"docs/team/template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"title: Project Portfolio Page for","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"\u003c!-- Insert name above --\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"## Overview","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"**RC4 Housing Database** offers a convenient and intuitive interface for RC4 housing management staff to streamline their daily operations.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"## Summary of Contributions","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"### Code contributed:","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"I contributed code to the following modules/classes:","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"You may view these contributions in more detail at [this link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003d\u003cgithub-username\u003e\u0026breakdown\u003dtrue).","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"\u003c!-- Please replace the placeholder in the above URL with your github username. --\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"### Enhancements implemented:","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"I made the following enhancements to our product:","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"### Contributions to the UG:","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"nseah21"},"content":"I contributed to the following sections of the user guide:","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"nseah21"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":37,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"nseah21"},"content":"### Contributions to the DG:","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"nseah21"},"content":"I contributed to the following sections of the developer guide:","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"nseah21"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"nseah21"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"nseah21"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":44,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"nseah21"},"content":"In particular, I added/updated the following UML diagrams:","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"nseah21"},"content":"1. []()","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"nseah21"},"content":"2. []()","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"nseah21"},"content":"3. []()","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"nseah21"},"content":"\u003c!-- Provide links to the diagrams in the appendix at the bottom of the page --\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"nseah21"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"nseah21"},"content":"I contributed to the following team-based tasks:","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"nseah21"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":56,"author":{"gitId":"nseah21"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":57,"author":{"gitId":"nseah21"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":58,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"nseah21"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"nseah21"},"content":"I reviewed the following pull requests:","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"nseah21"},"content":"1. [Add profile photo for Nicholas #21](https://github.com/AY2223S1-CS2103T-W12-3/tp/pull/21)","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"nseah21"},"content":"2.","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"nseah21"},"content":"3.","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"nseah21"},"content":"I also gave guidance to my team on the following matters:","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"nseah21"},"content":"1. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":68,"author":{"gitId":"nseah21"},"content":"2. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":69,"author":{"gitId":"nseah21"},"content":"3. *Enter contributions here*","lastModifiedDate":"2022-09-21"},{"lineNumber":70,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"nseah21"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"nseah21"},"content":"Beyond the project team, I also participated actively in the forum.","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"nseah21"},"content":"These are some threads in which I offered help to my classmates:","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"nseah21"},"content":"1. [Clarification of definition of single-level design #231](https://github.com/nus-cs2103-AY2223S1/forum/issues/231)","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"nseah21"},"content":"2. []()","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"nseah21"},"content":"3. []()","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"nseah21"},"content":"\u003c!-- Provide links to the threads here --\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"nseah21"},"content":"For the practical examination, I also surfaced critical bugs in the other team\u0027s product.","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"nseah21"},"content":"Some examples of these are:","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"nseah21"},"content":"1. []()","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"nseah21"},"content":"2. []()","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"nseah21"},"content":"3. []()","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"nseah21"},"content":"## Appendix","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"nseah21"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"nseah21"},"content":"1. ![]()","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"nseah21"},"content":"2. ![]()","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"nseah21"},"content":"3. ![]()","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"nseah21"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"nseah21"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"nseah21"},"content":"1. ![]()","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"nseah21"},"content":"2. ![]()","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"nseah21"},"content":"3. ![]()","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"nseah21"},"content":"\u003c!-- Embed the diagrams here --\u003e","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"jq1836":4,"nseah21":101}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"nseah21"},"content":"Create a `RemarkCommandParser` class in the `seedu.rc4hdb.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"nseah21"},"content":"Create a new `Remark` in `seedu.rc4hdb.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"nseah21"},"content":"Simply add the following to [`seedu.rc4hdb.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"nseah21":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"The `address` field in `Person` is actually an instance of the `seedu.rc4hdb.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nseah21":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"nseah21"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.rc4hdb.logic.Logic`.","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"A quick look at the `seedu.rc4hdb.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nseah21":2,"-":299}},{"path":"src/main/java/seedu/rc4hdb/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.util.FileUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"nseah21":3,"-":61}},{"path":"src/main/java/seedu/rc4hdb/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"jq1836":1,"nseah21":1,"-":23}},{"path":"src/main/java/seedu/rc4hdb/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.Config;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.Version;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.util.StringUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.Logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.LogicManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.storage.JsonResidentBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.storage.ResidentBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.storage.Storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.storage.StorageManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.ui.Ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.ui.UiManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing RC4HDB ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        ResidentBookStorage residentBookStorage \u003d new JsonResidentBookStorage(userPrefs.getResidentBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"        storage \u003d new StorageManager(residentBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s resident book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"     * The data from the sample resident book will be used instead if {@code storage}\u0027s resident book is not found,","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"     * or an empty resident book will be used instead if errors occur when reading {@code storage}\u0027s resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"        Optional\u003cReadOnlyResidentBook\u003e residentBookOptional;","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        ReadOnlyResidentBook initialData;","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"            residentBookOptional \u003d storage.readResidentBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"            if (!residentBookOptional.isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ResidentBook\");","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"            initialData \u003d residentBookOptional.orElseGet(SampleDataUtil::getSampleResidentBook);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"            initialData \u003d new ResidentBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"            initialData \u003d new ResidentBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"jq1836"},"content":"        logger.info(\"Starting RC4HDB \" + MainApp.VERSION);","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"jq1836"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping RC4 HDB ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jq1836":20,"nseah21":20,"-":143}},{"path":"src/main/java/seedu/rc4hdb/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":1,"-":62}},{"path":"src/main/java/seedu/rc4hdb/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":1,"-":78}},{"path":"src/main/java/seedu/rc4hdb/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"    private static final String LOG_FILE \u003d \"rc4hdb.log\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jq1836":1,"nseah21":1,"-":110}},{"path":"src/main/java/seedu/rc4hdb/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_INVALID_RESIDENT_DISPLAYED_INDEX \u003d \"The resident index provided is invalid\";","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_RESIDENTS_LISTED_OVERVIEW \u003d \"%1$d residents listed!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jq1836":2,"nseah21":1,"-":10}},{"path":"src/main/java/seedu/rc4hdb/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":1,"-":115}},{"path":"src/main/java/seedu/rc4hdb/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.core.index;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"nseah21":1,"-":53}},{"path":"src/main/java/seedu/rc4hdb/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":1,"-":10}},{"path":"src/main/java/seedu/rc4hdb/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nseah21":1,"-":20}},{"path":"src/main/java/seedu/rc4hdb/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.MainApp;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nseah21":2,"-":40}},{"path":"src/main/java/seedu/rc4hdb/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nseah21":1,"-":34}},{"path":"src/main/java/seedu/rc4hdb/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.Config;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"nseah21":3,"-":20}},{"path":"src/main/java/seedu/rc4hdb/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"nealetham"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String...)},","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":1,"nealetham":1,"-":81}},{"path":"src/main/java/seedu/rc4hdb/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":3,"-":140}},{"path":"src/main/java/seedu/rc4hdb/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"nealetham"},"content":"     *   Ignores case, a full word match is not required, but must be contained within.","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"nealetham"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //despite not a full word match","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"nealetham"},"content":"        String preppedWord \u003d word.toLowerCase().trim();","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"nealetham"},"content":"                .anyMatch(keyword -\u003e keyword.toLowerCase().contains(preppedWord));","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":2,"nealetham":4,"-":62}},{"path":"src/main/java/seedu/rc4hdb/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"     * Returns the ResidentBook.","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"     * @see seedu.rc4hdb.model.Model#getResidentBook()","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"    ReadOnlyResidentBook getResidentBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"    /** Returns an unmodifiable view of the filtered list of residents */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    ObservableList\u003cResident\u003e getFilteredResidentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"     * Returns the user prefs\u0027 resident book file path.","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"    Path getResidentBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"    ObservableList\u003cString\u003e getObservableFields();","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jq1836":9,"nseah21":7,"-":36}},{"path":"src/main/java/seedu/rc4hdb/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.misccommands.MiscCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.ModelCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.storagecommands.StorageCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.logic.parser.ResidentBookParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.storage.Storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"    private final ResidentBookParser residentBookParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"        residentBookParser \u003d new ResidentBookParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"        Command command \u003d residentBookParser.parseCommand(commandText);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"        CommandResult commandResult \u003d execute(command);","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"            storage.saveResidentBook(model.getResidentBook());","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"     * Determines the type of {@code Command} that is being executed and passes the appropriate arguments to it.","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"     * Note: When more types of commands are added to the application, add them in this method accordingly.","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"     * \u003cp/\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"     * @return The {@code CommandResult} from executing the command.","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"     * @throws CommandException if the command does not belong to any of the command groups.","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"    private CommandResult execute(Command command) throws CommandException {","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        if (command instanceof MiscCommand) {","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"            return ((MiscCommand) command).execute();","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"        if (command instanceof ModelCommand) {","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"            return ((ModelCommand) command).execute(model);","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        if (command instanceof StorageCommand) {","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"            return ((StorageCommand) command).execute(storage);","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"        throw new CommandException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"    public ReadOnlyResidentBook getResidentBook() {","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"        return model.getResidentBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"    public ObservableList\u003cResident\u003e getFilteredResidentList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"        return model.getFilteredResidentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"    public Path getResidentBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"        return model.getResidentBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"nseah21"},"content":"    public ObservableList\u003cString\u003e getObservableFields() {","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"nseah21"},"content":"        return model.getObservableFields();","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jq1836":38,"nseah21":14,"alvinjiang1":4,"-":57}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":" * Represents a command with hidden internal logic and the ability to be executed. Exists for polymorphism purposes.","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"public interface Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jq1836":2,"nseah21":1,"-":5}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nseah21":1,"-":70}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.commands.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":" * Represents an error which occurs during execution of a {@code Command}.","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jq1836":1,"nseah21":1,"-":15}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/misccommands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.misccommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"public class ExitCommand implements MiscCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jq1836":4,"-":15}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/misccommands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.misccommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"public class HelpCommand implements MiscCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jq1836":4,"-":17}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/misccommands/MiscCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.misccommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.Command;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":" * Represents a command that does not directly interact with any components.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"public interface MiscCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"    CommandResult execute() throws CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"jq1836":20}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/modelcommands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_HOUSE;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"public class AddCommand implements ModelCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a resident to RC4HDB. \"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"            + PREFIX_ROOM + \"ROOM \"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"            + PREFIX_HOUSE + \"HOUSE \"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"            + PREFIX_MATRIC_NUMBER + \"MATRIC_NUMBER \"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"            + PREFIX_ROOM + \"03-08 \"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"            + PREFIX_HOUSE + \"D \"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"            + PREFIX_MATRIC_NUMBER + \"A0000000A \"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"            + PREFIX_TAG + \"BlockHead \";","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New resident added: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_DUPLICATE_RESIDENT \u003d \"This resident already exists in RC4HDB\";","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"    private final Resident toAdd;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"     * Creates an AddCommand to add the specified {@code Resident}","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"    public AddCommand(Resident resident) {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"        requireNonNull(resident);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"        toAdd \u003d resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"        if (model.hasResident(toAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RESIDENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        model.addResident(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jq1836":28,"nseah21":6,"-":42}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/modelcommands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"public class ClearCommand implements ModelCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Resident book has been cleared!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"        model.setResidentBook(new ResidentBook());","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jq1836":6,"nseah21":1,"-":16}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/modelcommands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":" * Deletes a resident identified using it\u0027s displayed index from the resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"public class DeleteCommand implements ModelCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"            + \": Deletes the resident identified by the index number used in the displayed resident list.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_DELETE_RESIDENT_SUCCESS \u003d \"Deleted Resident: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        List\u003cResident\u003e lastShownList \u003d model.getFilteredResidentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RESIDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        Resident residentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"        model.deleteResident(residentToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_RESIDENT_SUCCESS, residentToDelete));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jq1836":12,"nseah21":4,"-":38}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/modelcommands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_HOUSE;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.model.Model.PREDICATE_SHOW_ALL_RESIDENTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"public class EditCommand implements ModelCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"            + \"[\" + PREFIX_ROOM + \"FLOOR-UNIT] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"            + \"[\" + PREFIX_HOUSE + \"HOUSE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"            + \"[\" + PREFIX_MATRIC_NUMBER + \"MATRIC_NUMBER] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_EDIT_RESIDENT_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_DUPLICATE_RESIDENT \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"    private final ResidentDescriptor editResidentDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"     * @param index of the resident in the filtered resident list to edit","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"     * @param editResidentDescriptor details to edit the resident with","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"    public EditCommand(Index index, ResidentDescriptor editResidentDescriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"        requireNonNull(editResidentDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        this.editResidentDescriptor \u003d new ResidentDescriptor(editResidentDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        List\u003cResident\u003e lastShownList \u003d model.getFilteredResidentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RESIDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"        Resident residentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"        Resident editedResident \u003d createEditedPerson(residentToEdit, editResidentDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"        if (!residentToEdit.isSameResident(editedResident) \u0026\u0026 model.hasResident(editedResident)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RESIDENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"        model.setResident(residentToEdit, editedResident);","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"        model.updateFilteredResidentList(PREDICATE_SHOW_ALL_RESIDENTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_RESIDENT_SUCCESS, editedResident));","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"     * Creates and returns a {@code Resident} with the details of {@code residentToEdit}","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"     * edited with {@code editResidentDescriptor}.","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"    private static Resident createEditedPerson(Resident residentToEdit, ResidentDescriptor editResidentDescriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"        assert residentToEdit !\u003d null;","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"        Name updatedName \u003d editResidentDescriptor.getName().orElse(residentToEdit.getName());","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"        Phone updatedPhone \u003d editResidentDescriptor.getPhone().orElse(residentToEdit.getPhone());","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"        Email updatedEmail \u003d editResidentDescriptor.getEmail().orElse(residentToEdit.getEmail());","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"        Room updatedRoom \u003d editResidentDescriptor.getRoom().orElse(residentToEdit.getRoom());","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"        Gender updatedGender \u003d editResidentDescriptor.getGender().orElse(residentToEdit.getGender());","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"jq1836"},"content":"        House updatedHouse \u003d editResidentDescriptor.getHouse().orElse(residentToEdit.getHouse());","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"jq1836"},"content":"        MatricNumber updatedMatricNumber \u003d editResidentDescriptor.getMatricNumber().orElse(","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"                residentToEdit.getMatricNumber());","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"        Set\u003cTag\u003e updatedTags \u003d editResidentDescriptor.getTags().orElse(residentToEdit.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"        return new Resident(updatedName, updatedPhone, updatedEmail, updatedRoom, updatedGender, updatedHouse,","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"                updatedMatricNumber, updatedTags);","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 editResidentDescriptor.equals(e.editResidentDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jq1836":54,"nseah21":9,"-":72}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/modelcommands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nareus"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"nareus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_HOUSE;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.predicates.AttributesMatchKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"nareus"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"nareus"},"content":" * Filters and lists all residents in resident book whose attributes are equal to any of the argument keywords.","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"nareus"},"content":" * Keyword matching is case sensitive.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"nareus"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"public class FilterCommand implements ModelCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"nareus"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"nareus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": \"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"nareus"},"content":"            + \"filters the resident book by the attributes specified in the command\"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"nareus"},"content":"            + \"Parameters:\"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"nareus"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"nareus"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"nareus"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"            + \"[\" + PREFIX_ROOM + \"FLOOR-UNIT] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"            + \"[\" + PREFIX_HOUSE + \"HOUSE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"            + \"[\" + PREFIX_MATRIC_NUMBER + \"MATRIC_NUMBER] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"nareus"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"nareus"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"nareus"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"nareus"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"nareus"},"content":"    public static final String MESSAGE_NOT_FILTERED \u003d \"At least one field to filter must be provided.\";","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"nareus"},"content":"    /** description to filter the resident with */","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"    private final ResidentDescriptor filterPersonDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"nareus"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"nareus"},"content":"     * @param filterPersonDescriptor description object to filter the resident with","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"nareus"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"    public FilterCommand(ResidentDescriptor filterPersonDescriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"nareus"},"content":"        requireNonNull(filterPersonDescriptor);","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"        this.filterPersonDescriptor \u003d new ResidentDescriptor(filterPersonDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"nareus"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"nareus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"nareus"},"content":"        //return new CommandResult(\"Command Still in progress\");","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"nareus"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(filterPersonDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"        model.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"nareus"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"                String.format(Messages.MESSAGE_RESIDENTS_LISTED_OVERVIEW, model.getFilteredResidentList().size()));","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"nareus"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"nareus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"nareus"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"nareus"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"nareus"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"nareus"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"nareus"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"nareus"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"nareus"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"nareus"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"nareus"},"content":"        // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"nareus"},"content":"        FilterCommand f \u003d (FilterCommand) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"nareus"},"content":"        return filterPersonDescriptor.equals(f.filterPersonDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"nareus"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"jq1836":16,"nareus":66}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/modelcommands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"public class FindCommand implements ModelCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all residents whose names contain any of \"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"        model.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"                String.format(Messages.MESSAGE_RESIDENTS_LISTED_OVERVIEW, model.getFilteredResidentList().size()));","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jq1836":8,"nseah21":2,"-":33}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/modelcommands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.model.Model.PREDICATE_SHOW_ALL_RESIDENTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"public class ListCommand implements ModelCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"    public static final String SHOW_ONLY_SPECIFIED \u003d \"Listed all persons. Only specified fields are shown.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"    private final List\u003cString\u003e fieldsToHide;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"     * Constructor for a ListCommand instance.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"    public ListCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"        // Set the list of fields hide to an empty list","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"        this.fieldsToHide \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"nseah21"},"content":"     * Constructor for a ListCommand instance.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"     * @param fieldsToHide The fields to be hidden when listing the data","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"nseah21"},"content":"    public ListCommand(List\u003cString\u003e fieldsToHide) {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"nseah21"},"content":"        requireNonNull(fieldsToHide);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"nseah21"},"content":"        this.fieldsToHide \u003d fieldsToHide;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"        model.updateFilteredResidentList(PREDICATE_SHOW_ALL_RESIDENTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"nseah21"},"content":"        model.setObservableFields(fieldsToHide);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"nseah21"},"content":"        // Determine which ListCommand constructor was invoked","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"nseah21"},"content":"        if (fieldsToHide.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"nseah21"},"content":"            return new CommandResult(SHOW_ONLY_SPECIFIED);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"nseah21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"nseah21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"nseah21"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"nseah21"},"content":"        if (other instanceof ListCommand) {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"nseah21"},"content":"            ListCommand otherCommand \u003d (ListCommand) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"nseah21"},"content":"            return this.fieldsToHide.containsAll(otherCommand.fieldsToHide)","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"nseah21"},"content":"                    \u0026\u0026 otherCommand.fieldsToHide.containsAll(this.fieldsToHide);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"nseah21"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jq1836":5,"nseah21":45,"-":18}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/modelcommands/ModelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.Command;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":" * Represents a command that interacts with a {@code Model}.","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"public interface ModelCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"jq1836":22}},{"path":"src/main/java/seedu/rc4hdb/logic/commands/storagecommands/StorageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.storagecommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.Command;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.storage.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":" * Represents a command that interacts with a {@code Storage}.","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"public interface StorageCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"     * @param storage {@code Storage} which the command should operate on.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    CommandResult execute(Storage storage) throws CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"jq1836":22}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"nseah21":1,"-":59}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"nseah21":1,"-":147}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"    public static final Prefix PREFIX_ROOM \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"    public static final Prefix PREFIX_HOUSE \u003d new Prefix(\"h/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"    public static final Prefix PREFIX_MATRIC_NUMBER \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jq1836":4,"nseah21":1,"-":13}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":" * Represents a generic Parser that is able to parse user input into a value of type {@code T}.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"public interface Parser\u003cT\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"nseah21":4,"-":11}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.util.StringUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"     * Parses a {@code String room} into an {@code Room}.","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"     * @throws ParseException if the given {@code room} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"    public static Room parseRoom(String room) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"        requireNonNull(room);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"        String trimmedRoom \u003d room.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"        if (!Room.isValidRoom(trimmedRoom)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"            throw new ParseException(Room.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"        return new Room(trimmedRoom);","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"     * Parses a {@code String gender} into an {@code Gender}.","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"jq1836"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"jq1836"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"jq1836"},"content":"     * Parses a {@code String house} into an {@code House}.","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"jq1836"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"jq1836"},"content":"     * @throws ParseException if the given {@code house} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"jq1836"},"content":"    public static House parseHouse(String house) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"jq1836"},"content":"        requireNonNull(house);","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"jq1836"},"content":"        String trimmedHouse \u003d house.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"jq1836"},"content":"        if (!House.isValidHouse(trimmedHouse)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"jq1836"},"content":"            throw new ParseException(House.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"jq1836"},"content":"        return new House(trimmedHouse);","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"jq1836"},"content":"     * Parses a {@code String matricNumber} into an {@code MatricNumber}.","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"jq1836"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"jq1836"},"content":"     * @throws ParseException if the given {@code matricNumber} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"jq1836"},"content":"    public static MatricNumber parseMatricNumber(String matricNumber) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"jq1836"},"content":"        requireNonNull(matricNumber);","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"jq1836"},"content":"        String trimmedMatricNumber \u003d matricNumber.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"jq1836"},"content":"        if (!MatricNumber.isValidMatricNumber(trimmedMatricNumber)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"jq1836"},"content":"            throw new ParseException(MatricNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"jq1836"},"content":"        return new MatricNumber(trimmedMatricNumber);","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jq1836":67,"nseah21":5,"-":100}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"nseah21":1,"-":38}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/ResidentBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.misccommands.ExitCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.misccommands.HelpCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.AddCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.ClearCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.DeleteCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.EditCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.FilterCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.FindCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.ListCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.commandparsers.AddCommandParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.commandparsers.DeleteCommandParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.commandparsers.EditCommandParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.commandparsers.FilterCommandParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.commandparsers.FindCommandParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.commandparsers.ListCommandParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"public class ResidentBookParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"nseah21"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":78,"author":{"gitId":"nareus"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"nareus"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jq1836":8,"nseah21":12,"nareus":4,"alvinjiang1":1,"-":61}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/commandparsers/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_HOUSE;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.AddCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.Parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.Prefix;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOM, PREFIX_GENDER,","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"                        PREFIX_HOUSE, PREFIX_MATRIC_NUMBER, PREFIX_TAG);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOM, PREFIX_GENDER,","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"                PREFIX_HOUSE, PREFIX_MATRIC_NUMBER)","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"        Room room \u003d ParserUtil.parseRoom(argMultimap.getValue(PREFIX_ROOM).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        House house \u003d ParserUtil.parseHouse(argMultimap.getValue(PREFIX_HOUSE).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"        MatricNumber matricNumber \u003d ParserUtil.parseMatricNumber(argMultimap.getValue(PREFIX_MATRIC_NUMBER).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"        Resident resident \u003d new Resident(name, phone, email, room, gender, house, matricNumber, tagList);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"        return new AddCommand(resident);","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jq1836":23,"nseah21":13,"-":40}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/commandparsers/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.Parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"public interface CommandParser\u003cT extends Command\u003e extends Parser\u003cT\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"nseah21":5,"-":12}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/commandparsers/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.DeleteCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.Parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jq1836":1,"nseah21":6,"-":24}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/commandparsers/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_HOUSE;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.EditCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.Parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOM, PREFIX_GENDER,","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"                        PREFIX_HOUSE, PREFIX_MATRIC_NUMBER, PREFIX_TAG);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"        ResidentDescriptor editResidentDescriptor \u003d new ResidentDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"            editResidentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"            editResidentDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"            editResidentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"        if (argMultimap.getValue(PREFIX_ROOM).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"            editResidentDescriptor.setRoom(ParserUtil.parseRoom(argMultimap.getValue(PREFIX_ROOM).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"            editResidentDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"        if (argMultimap.getValue(PREFIX_HOUSE).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"            editResidentDescriptor.setHouse(ParserUtil.parseHouse(argMultimap.getValue(PREFIX_HOUSE).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"        if (argMultimap.getValue(PREFIX_MATRIC_NUMBER).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"            editResidentDescriptor.setMatricNumber(ParserUtil.parseMatricNumber(","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"                    argMultimap.getValue(PREFIX_MATRIC_NUMBER).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editResidentDescriptor::setTags);","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"        if (!editResidentDescriptor.isAnyFieldNonNull()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"        return new EditCommand(index, editResidentDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jq1836":31,"nseah21":13,"-":57}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/commandparsers/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nareus"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"nareus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_HOUSE;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"nareus"},"content":"import java.util.Collection;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"nareus"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"nareus"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"nareus"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.FilterCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.parser.Parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"nareus"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"nareus"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"nareus"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"nareus"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"nareus"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"nareus"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"nareus"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"nareus"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"nareus"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"nareus"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"nareus"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"nareus"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOM, PREFIX_GENDER,","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"                        PREFIX_HOUSE, PREFIX_MATRIC_NUMBER, PREFIX_TAG);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        ResidentDescriptor filterResidentDescriptor \u003d new ResidentDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"nareus"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"            filterResidentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"nareus"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"nareus"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"            filterResidentDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"nareus"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"nareus"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"            filterResidentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"nareus"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"        if (argMultimap.getValue(PREFIX_ROOM).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"            filterResidentDescriptor.setRoom(ParserUtil.parseRoom(argMultimap.getValue(PREFIX_ROOM).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"            filterResidentDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        if (argMultimap.getValue(PREFIX_HOUSE).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"            filterResidentDescriptor.setHouse(ParserUtil.parseHouse(argMultimap.getValue(PREFIX_HOUSE).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"        if (argMultimap.getValue(PREFIX_MATRIC_NUMBER).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"            filterResidentDescriptor.setMatricNumber(ParserUtil.parseMatricNumber(","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"                    argMultimap.getValue(PREFIX_MATRIC_NUMBER).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"nareus"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        parseTagsForfilter(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(filterResidentDescriptor::setTags);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"        if (!filterResidentDescriptor.isAnyFieldNonNull()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"            throw new ParseException(FilterCommand.MESSAGE_NOT_FILTERED);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        return new FilterCommand(filterResidentDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"nareus"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForfilter(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"nareus"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"nareus"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"nareus"},"content":"            return Optional.empty();","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"nareus"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"nareus"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"nareus"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"nareus"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"jq1836":29,"nareus":55}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/commandparsers/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.FindCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.Parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jq1836":2,"nseah21":4,"-":28}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/commandparsers/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.ListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.Parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.resident.fields.ResidentFields;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"    public static final char INCLUDE_SPECIFIER \u003d \u0027i\u0027;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"    public static final char EXCLUDE_SPECIFIER \u003d \u0027e\u0027;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"    public static final String INTENDED_USAGE \u003d \"Please include a specifier [/i] or [/e]\"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"            + \" followed by the fields to include or exclude\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"            return new ListCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"        if (hasInvalidSpecifier(args)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"            throw new ParseException(INTENDED_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"nseah21"},"content":"        // Process global list of fields into lowercase list first","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"        List\u003cString\u003e allFields \u003d ResidentFields.FIELDS.stream().map(String::toLowerCase).collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"nseah21"},"content":"        // Create one list for each specifier","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"nseah21"},"content":"        List\u003cString\u003e fieldsToIncludeFromHiding \u003d new ArrayList\u003c\u003e(allFields);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"nseah21"},"content":"        List\u003cString\u003e fieldsToExcludeFromShowing \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"nseah21"},"content":"        String[] specifiedFields \u003d getSpecifiedFields(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"nseah21"},"content":"        populateFieldLists(specifiedFields, fieldsToIncludeFromHiding, fieldsToExcludeFromShowing, allFields);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"nseah21"},"content":"        if (getListSpecifier(args) \u003d\u003d INCLUDE_SPECIFIER) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"nseah21"},"content":"            return new ListCommand(fieldsToIncludeFromHiding);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"nseah21"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"nseah21"},"content":"            return new ListCommand(fieldsToExcludeFromShowing);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"nseah21"},"content":"    private boolean hasInvalidSpecifier(String args) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"nseah21"},"content":"        if (hasInvalidSpecifierLength(args)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"nseah21"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"nseah21"},"content":"        char specifier \u003d getListSpecifier(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"nseah21"},"content":"        return specifier !\u003d INCLUDE_SPECIFIER \u0026\u0026 specifier !\u003d EXCLUDE_SPECIFIER;","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"nseah21"},"content":"    private boolean hasInvalidSpecifierLength(String args) {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"nseah21"},"content":"        int nextIndex \u003d args.indexOf(\"/\") + 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"nseah21"},"content":"        if (nextIndex \u003c args.length()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"nseah21"},"content":"            return args.charAt(nextIndex) !\u003d \u0027 \u0027;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"nseah21"},"content":"        return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"nseah21"},"content":"    private char getListSpecifier(String args) {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"nseah21"},"content":"        return args.charAt(args.indexOf(\"/\") + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"nseah21"},"content":"    private String[] getSpecifiedFields(String args) {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"nseah21"},"content":"        String fieldsString \u003d args.toLowerCase().substring(args.indexOf(\"/\") + 2).trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"nseah21"},"content":"        if (fieldsString.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"nseah21"},"content":"            return new String[] {};","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"nseah21"},"content":"        return fieldsString.split(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"nseah21"},"content":"    private void populateFieldLists(String[] specifiedFields, List\u003cString\u003e fieldsToInclude,","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"nseah21"},"content":"                                    List\u003cString\u003e fieldsToExclude, List\u003cString\u003e allFields) {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"nseah21"},"content":"        for (String field : specifiedFields) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"nseah21"},"content":"            fieldsToInclude.remove(field);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"nseah21"},"content":"            if (allFields.contains(field)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"nseah21"},"content":"                fieldsToExclude.add(field);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"nseah21"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"nseah21":89}},{"path":"src/main/java/seedu/rc4hdb/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"nseah21":2,"-":15}},{"path":"src/main/java/seedu/rc4hdb/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"    Predicate\u003cResident\u003e PREDICATE_SHOW_ALL_RESIDENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"     * Returns the user prefs\u0027 resident book file path.","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"    Path getResidentBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"     * Sets the user prefs\u0027 resident book file path.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"    void setResidentBookFilePath(Path residentBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"     * Replaces resident book data with the data in {@code residentBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"    void setResidentBook(ReadOnlyResidentBook residentBook);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"    /** Returns the ResidentBook */","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"    ReadOnlyResidentBook getResidentBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"     * Returns true if a resident with the same identity as {@code resident} exists in the resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"    boolean hasResident(Resident resident);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"     * Deletes the given resident.","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"     * The resident must exist in the resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"    void deleteResident(Resident target);","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"     * Adds the given resident.","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"     * {@code resident} must not already exist in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"    void addResident(Resident resident);","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"     * Replaces the given resident {@code target} with {@code editedResident}.","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"     * {@code target} must exist in the resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"     * The resident identity of {@code editedResident} must not be the same as another existing resident in the","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"     * resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"    void setResident(Resident target, Resident editedResident);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"    /** Returns an unmodifiable view of the filtered resident list */","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"    ObservableList\u003cResident\u003e getFilteredResidentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"     * Updates the filter of the filtered resident list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"    void updateFilteredResidentList(Predicate\u003cResident\u003e predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"nseah21"},"content":"    ObservableList\u003cString\u003e getObservableFields();","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"nseah21"},"content":"    void setObservableFields(List\u003cString\u003e modifiableList);","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jq1836":27,"nseah21":7,"-":59}},{"path":"src/main/java/seedu/rc4hdb/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":" * Represents the in-memory model of the resident book data.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    private final ResidentBook residentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    private final FilteredList\u003cResident\u003e filteredResidents;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"    private final ObservableList\u003cString\u003e observableFieldList;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"     * Initializes a ModelManager with the given residentBook and userPrefs.","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"    public ModelManager(ReadOnlyResidentBook residentBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"        requireAllNonNull(residentBook, userPrefs);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"        logger.fine(\"Initializing with resident book: \" + residentBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        this.residentBook \u003d new ResidentBook(residentBook);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        filteredResidents \u003d new FilteredList\u003c\u003e(this.residentBook.getResidentList());","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"nseah21"},"content":"        this.observableFieldList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        this(new ResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"    public Path getResidentBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        return userPrefs.getResidentBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"    public void setResidentBookFilePath(Path residentBookFilePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"        requireNonNull(residentBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        userPrefs.setResidentBookFilePath(residentBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ResidentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"    public void setResidentBook(ReadOnlyResidentBook residentBook) {","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"        this.residentBook.resetData(residentBook);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"    public ReadOnlyResidentBook getResidentBook() {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"        return residentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"    public boolean hasResident(Resident person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"        return residentBook.hasResident(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"    public void deleteResident(Resident target) {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"        residentBook.removeResident(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"    public void addResident(Resident person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"        residentBook.addResident(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"        updateFilteredResidentList(PREDICATE_SHOW_ALL_RESIDENTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"    public void setResident(Resident target, Resident editedResident) {","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"        requireAllNonNull(target, editedResident);","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"        residentBook.setResident(target, editedResident);","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Resident List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":119,"author":{"gitId":"jq1836"},"content":"     * Returns an unmodifiable view of the list of {@code Resident} backed by the internal list of","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"jq1836"},"content":"     * {@code versionedResidentBook}","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"jq1836"},"content":"    public ObservableList\u003cResident\u003e getFilteredResidentList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"jq1836"},"content":"        return filteredResidents;","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"jq1836"},"content":"    public void updateFilteredResidentList(Predicate\u003cResident\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"jq1836"},"content":"        filteredResidents.setPredicate(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"jq1836"},"content":"        return residentBook.equals(other.residentBook)","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 filteredResidents.equals(other.filteredResidents);","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"nseah21"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Observable Field List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"nseah21"},"content":"    public ObservableList\u003cString\u003e getObservableFields() {","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"nseah21"},"content":"        return this.observableFieldList;","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"nseah21"},"content":"    public void setObservableFields(List\u003cString\u003e modifiableFields) {","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"nseah21"},"content":"        this.observableFieldList.setAll(modifiableFields);","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jq1836":40,"nseah21":19,"-":104}},{"path":"src/main/java/seedu/rc4hdb/model/ReadOnlyResidentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":" * Unmodifiable view of a resident book","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"public interface ReadOnlyResidentBook {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"     * Returns an unmodifiable view of the residents list.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"     * This list will not contain any duplicate residents.","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"    ObservableList\u003cResident\u003e getResidentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":17}},{"path":"src/main/java/seedu/rc4hdb/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"    Path getResidentBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jq1836":1,"nseah21":2,"-":13}},{"path":"src/main/java/seedu/rc4hdb/model/ResidentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.UniqueResidentList;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":" * Wraps all data at the RC4HDB level","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":" * Duplicates are not allowed (by .isSameResident comparison)","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"public class ResidentBook implements ReadOnlyResidentBook {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"    private final UniqueResidentList residents;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        residents \u003d new UniqueResidentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    public ResidentBook() {}","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"     * Creates an ResidentBook using the Residents in the {@code toBeCopied}","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"    public ResidentBook(ReadOnlyResidentBook toBeCopied) {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        this();","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"     * Replaces the contents of the resident list with {@code residents}.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"     * {@code residents} must not contain duplicate residents.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"    public void setResidents(List\u003cResident\u003e residents) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        this.residents.setResidents(residents);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"     * Resets the existing data of this {@code ResidentBook} with {@code newData}.","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"    public void resetData(ReadOnlyResidentBook newData) {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"        setResidents(newData.getResidentList());","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"    //// resident-level operations","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"     * Returns true if a resident with the same identity as {@code resident} exists in the resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"    public boolean hasResident(Resident resident) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"        requireNonNull(resident);","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        return residents.contains(resident);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"     * Adds a resident to the resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"     * The resident must not already exist in the resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"    public void addResident(Resident p) {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"        residents.add(p);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"     * Replaces the given resident {@code target} in the list with {@code editedResident}.","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"     * {@code target} must exist in the resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"     * The resident identity of {@code editedResident} must not be the same as another existing resident in the","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"     * resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"    public void setResident(Resident target, Resident editedResident) {","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"        requireNonNull(editedResident);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"        residents.setResident(target, editedResident);","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"     * Removes {@code key} from this {@code ResidentBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"     * {@code key} must exist in the resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"    public void removeResident(Resident key) {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"        residents.remove(key);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"    //// util methods","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"        return residents.asUnmodifiableObservableList().size() + \" residents\";","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"    public ObservableList\u003cResident\u003e getResidentList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"        return residents.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"jq1836"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"jq1836"},"content":"                || (other instanceof ResidentBook // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 residents.equals(((ResidentBook) other).residents));","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"jq1836"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"jq1836"},"content":"        return residents.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":120}},{"path":"src/main/java/seedu/rc4hdb/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"    private Path residentBookFilePath \u003d Paths.get(\"data\" , \"rc4hdb.json\");","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        setResidentBookFilePath(newUserPrefs.getResidentBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"    public Path getResidentBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"        return residentBookFilePath;","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"    public void setResidentBookFilePath(Path residentBookFilePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"        requireNonNull(residentBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"        this.residentBookFilePath \u003d residentBookFilePath;","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 residentBookFilePath.equals(o.residentBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"        return Objects.hash(guiSettings, residentBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"        sb.append(\"\\nLocal data file location : \" + residentBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jq1836":10,"nseah21":2,"-":75}},{"path":"src/main/java/seedu/rc4hdb/model/resident/Resident.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":" * Represents a resident in the resident book.","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"public class Resident {","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"    // Identity fields","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"    private final Name name;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"    private final Phone phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"    private final Email email;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"    // Data fields","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    private final Room room;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"    private final Gender gender;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"    private final House house;","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"    private final MatricNumber matricNumber;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"    public Resident(Name name, Phone phone, Email email, Room room, Gender gender,","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"                    House house, MatricNumber matricNumber, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"        requireAllNonNull(name, phone, email, room, gender, house, matricNumber, tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"        this.room \u003d room;","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"        this.house \u003d house;","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"        this.matricNumber \u003d matricNumber;","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"        return name;","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"        return phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"        return email;","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"    public Room getRoom() {","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"        return room;","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"alvinjiang1"},"content":"    public Gender getGender() {","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"alvinjiang1"},"content":"        return gender;","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"alvinjiang1"},"content":"    public House getHouse() {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"        return house;","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"alvinjiang1"},"content":"    public MatricNumber getMatricNumber() {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"alvinjiang1"},"content":"        return matricNumber;","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"alvinjiang1"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"alvinjiang1"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"alvinjiang1"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"alvinjiang1"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"alvinjiang1"},"content":"     * Returns true if both Residents have the same name.","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"alvinjiang1"},"content":"     * This defines a weaker notion of equality between two Residents.","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"alvinjiang1"},"content":"    public boolean isSameResident(Resident otherResident) {","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"alvinjiang1"},"content":"        if (otherResident \u003d\u003d this) {","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"alvinjiang1"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"alvinjiang1"},"content":"        return otherResident !\u003d null","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"alvinjiang1"},"content":"                \u0026\u0026 otherResident.getName().equals(getName());","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"alvinjiang1"},"content":"     * Returns true if both Residents have the same identity and data fields.","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"alvinjiang1"},"content":"     * This defines a stronger notion of equality between two Residents.","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"alvinjiang1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"alvinjiang1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"alvinjiang1"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"alvinjiang1"},"content":"        if (!(other instanceof Resident)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"alvinjiang1"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"alvinjiang1"},"content":"        Resident otherResident \u003d (Resident) other;","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"alvinjiang1"},"content":"        return otherResident.getName().equals(getName())","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"alvinjiang1"},"content":"                \u0026\u0026 otherResident.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"alvinjiang1"},"content":"                \u0026\u0026 otherResident.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"alvinjiang1"},"content":"                \u0026\u0026 otherResident.getRoom().equals(getRoom())","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"alvinjiang1"},"content":"                \u0026\u0026 otherResident.getGender().equals(getGender())","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"alvinjiang1"},"content":"                \u0026\u0026 otherResident.getHouse().equals(getHouse())","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"alvinjiang1"},"content":"                \u0026\u0026 otherResident.getMatricNumber().equals(getMatricNumber())","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"alvinjiang1"},"content":"                \u0026\u0026 otherResident.getTags().equals(getTags());","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"alvinjiang1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"alvinjiang1"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"alvinjiang1"},"content":"        return Objects.hash(name, phone, email, room, gender, house, matricNumber, tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"alvinjiang1"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"alvinjiang1"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"alvinjiang1"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"alvinjiang1"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"alvinjiang1"},"content":"                .append(getPhone())","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"alvinjiang1"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"alvinjiang1"},"content":"                .append(getEmail())","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"alvinjiang1"},"content":"                .append(\"; Room: \")","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"alvinjiang1"},"content":"                .append(getRoom())","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"alvinjiang1"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"alvinjiang1"},"content":"                .append(getGender())","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"alvinjiang1"},"content":"                .append(\"; House: \")","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"alvinjiang1"},"content":"                .append(getHouse())","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"alvinjiang1"},"content":"                .append(\"; Matric Number: \")","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"alvinjiang1"},"content":"                .append(getMatricNumber());","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"alvinjiang1"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"alvinjiang1"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"alvinjiang1"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"alvinjiang1"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"alvinjiang1"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"jq1836":11,"alvinjiang1":148}},{"path":"src/main/java/seedu/rc4hdb/model/resident/ResidentDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":" * Stores the details to edit the resident with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":" * corresponding field value of the resident.","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"public class ResidentDescriptor {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"    private Name name;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"    private Email email;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    private Room room;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    private Gender gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"    private House house;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"    private MatricNumber matricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptor() {}","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"     * Copy constructor.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptor(ResidentDescriptor toCopy) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"        setName(toCopy.name);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"        setPhone(toCopy.phone);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"        setEmail(toCopy.email);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"        setRoom(toCopy.room);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        setGender(toCopy.gender);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"        setHouse(toCopy.house);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"        setMatricNumber(toCopy.matricNumber);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"        setTags(toCopy.tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"    public boolean isAnyFieldNonNull() {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"        return CollectionUtil.isAnyNonNull(name, phone, email, room, gender, house, matricNumber, tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Start of Getters and Setters \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"    public void setName(Name name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"        return Optional.ofNullable(phone);","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"        return Optional.ofNullable(email);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"    public void setRoom(Room room) {","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"        this.room \u003d room;","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cRoom\u003e getRoom() {","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"        return Optional.ofNullable(room);","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"    public void setGender(Gender gender) {","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"        return Optional.ofNullable(gender);","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"    public void setHouse(House house) {","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"        this.house \u003d house;","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cHouse\u003e getHouse() {","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"        return Optional.ofNullable(house);","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"    public void setMatricNumber(MatricNumber matricNumber) {","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"        this.matricNumber \u003d matricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cMatricNumber\u003e getMatricNumber() {","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"        return Optional.ofNullable(matricNumber);","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"jq1836"},"content":"     * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"jq1836"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"jq1836"},"content":"        this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"jq1836"},"content":"     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"jq1836"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"jq1836"},"content":"     * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"jq1836"},"content":"        return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"jq1836"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of Getters and Setters \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"jq1836"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"jq1836"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"jq1836"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"jq1836"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"jq1836"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"jq1836"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"jq1836"},"content":"        if (!(other instanceof ResidentDescriptor)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"jq1836"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"jq1836"},"content":"        // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"jq1836"},"content":"        ResidentDescriptor e \u003d (ResidentDescriptor) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"jq1836"},"content":"        return getName().equals(e.getName())","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 getRoom().equals(e.getRoom())","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 getHouse().equals(e.getHouse())","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 getMatricNumber().equals(e.getMatricNumber())","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":157}},{"path":"src/main/java/seedu/rc4hdb/model/resident/UniqueResidentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.exceptions.DuplicateResidentException;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.exceptions.ResidentNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":" * A list of residents that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":" * A resident is considered unique by comparing using {@code Resident#isSameResident(Resident)}. As such, adding and","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":" * updating of residents uses Resident#isSameResident(Resident) for equality so as to ensure that the resident being","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":" * added or updated is unique in terms of identity in the UniqueResidentList. However, the removal of a resident uses","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":" * Resident#equals(Object) so as to ensure that the resident with exactly the same fields will be removed.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":" *","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":" *","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":" * @see Resident#isSameResident(Resident)","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"public class UniqueResidentList implements Iterable\u003cResident\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    private final ObservableList\u003cResident\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"    private final ObservableList\u003cResident\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"     * Returns true if the list contains an equivalent resident as the given argument.","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    public boolean contains(Resident toCheck) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        return internalList.stream().anyMatch(toCheck::isSameResident);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"     * Adds a resident to the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"     * The resident must not already exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"    public void add(Resident toAdd) {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"            throw new DuplicateResidentException();","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"     * Replaces the resident {@code target} in the list with {@code editedResident}.","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"     * The resident identity of {@code editedResident} must not be the same as another existing resident in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"    public void setResident(Resident target, Resident editedResident) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"        requireAllNonNull(target, editedResident);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"            throw new ResidentNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"        if (!target.isSameResident(editedResident) \u0026\u0026 contains(editedResident)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"            throw new DuplicateResidentException();","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"        internalList.set(index, editedResident);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"     * Removes the equivalent resident from the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"     * The resident must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"    public void remove(Resident toRemove) {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"            throw new ResidentNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"    public void setResidents(UniqueResidentList replacement) {","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"     * Replaces the contents of this list with {@code residents}.","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"     * {@code residents} must not contain duplicate residents.","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"    public void setResidents(List\u003cResident\u003e residents) {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"        requireAllNonNull(residents);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"        if (!residentsAreUnique(residents)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"            throw new DuplicateResidentException();","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"        internalList.setAll(residents);","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"    public ObservableList\u003cResident\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"jq1836"},"content":"    public Iterator\u003cResident\u003e iterator() {","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"jq1836"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"jq1836"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"jq1836"},"content":"                || (other instanceof UniqueResidentList // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 internalList.equals(((UniqueResidentList) other).internalList));","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"jq1836"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"jq1836"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"jq1836"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"jq1836"},"content":"     * Returns true if {@code residents} contains only unique residents.","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"jq1836"},"content":"    private boolean residentsAreUnique(List\u003cResident\u003e residents) {","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"jq1836"},"content":"        for (int i \u003d 0; i \u003c residents.size() - 1; i++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"jq1836"},"content":"            for (int j \u003d i + 1; j \u003c residents.size(); j++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"jq1836"},"content":"                if (residents.get(i).isSameResident(residents.get(j))) {","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"jq1836"},"content":"                    return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"jq1836"},"content":"                }","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"jq1836"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"jq1836"},"content":"        return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":138}},{"path":"src/main/java/seedu/rc4hdb/model/resident/exceptions/DuplicateResidentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.exceptions;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":" * Signals that the operation will result in duplicate Residents (Residents are considered duplicates if they have the","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":" * same identity).","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"public class DuplicateResidentException extends RuntimeException {","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"    public DuplicateResidentException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"        super(\"Operation would result in duplicate residents\");","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":11}},{"path":"src/main/java/seedu/rc4hdb/model/resident/exceptions/ResidentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.exceptions;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":" * Signals that the operation is unable to find the specified resident.","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"public class ResidentNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":7}},{"path":"src/main/java/seedu/rc4hdb/model/resident/fields/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":" * Represents a Resident\u0027s email in RC4HDB.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jq1836":1,"nseah21":1,"alvinjiang1":1,"-":68}},{"path":"src/main/java/seedu/rc4hdb/model/resident/fields/Field.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":" * Represents the fields for a residents.","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"public class Field {","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"nseah21":7}},{"path":"src/main/java/seedu/rc4hdb/model/resident/fields/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":" * Represents a Resident\u0027s gender in RC4HDB.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"public class Gender extends Field {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"            \"Gender should be either \u0027M\u0027 or \u0027F\u0027\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[MF]$\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"    public final String gender;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"    public Gender(String gender) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"nseah21"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"nseah21"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"nseah21"},"content":"     * Returns gender string as a full word.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"nseah21"},"content":"     * @return gender string as a full word.","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"nseah21"},"content":"    public String asFullWord() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"nseah21"},"content":"        if (gender \u003d\u003d \"M\") {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"nseah21"},"content":"            return \"Male\";","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"nseah21"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"nseah21"},"content":"            return \"Female\";","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"nseah21"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"        return gender;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"nseah21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"nseah21"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"nseah21"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"nseah21"},"content":"                \u0026\u0026 gender.equals(((Gender) other).gender)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"nseah21"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"nseah21"},"content":"        return gender.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"nseah21":67}},{"path":"src/main/java/seedu/rc4hdb/model/resident/fields/House.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":" * Represents a Resident\u0027s house in RC4HDB.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHouse(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"public class House extends Field {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"            \"House should only contain the following characters: \u0027D\u0027, \u0027U\u0027, \u0027L\u0027, \u0027A\u0027 or \u0027N\u0027\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[DULAN]$\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"    public final String house;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"     * Constructs a {@code House}.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"     * @param house A valid house.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"    public House(String house) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"        requireNonNull(house);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"        checkArgument(isValidHouse(house), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"        this.house \u003d house;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"     * Returns true if a given string is a valid house.","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"nseah21"},"content":"    public static boolean isValidHouse(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"nseah21"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"nseah21"},"content":"     * Returns the house string as a full word.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"nseah21"},"content":"     * @return the house string as a full word.","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"nseah21"},"content":"    public String asFullWord() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"nseah21"},"content":"        switch (house) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"nseah21"},"content":"        case \"D\":","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"nseah21"},"content":"            return \"Draco\";","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"nseah21"},"content":"        case \"U\":","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"nseah21"},"content":"            return \"Ursa\";","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"nseah21"},"content":"        case \"L\":","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"nseah21"},"content":"            return \"Leo\";","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"nseah21"},"content":"        case \"A\":","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"nseah21"},"content":"            return \"Aquila\";","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"        case \"N\":","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"nseah21"},"content":"            return \"Noctua\";","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"nseah21"},"content":"        default:","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"nseah21"},"content":"            return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"nseah21"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"nseah21"},"content":"        return house;","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"nseah21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"nseah21"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"nseah21"},"content":"                || (other instanceof House // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"nseah21"},"content":"                \u0026\u0026 house.equals(((House) other).house)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"nseah21"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"nseah21"},"content":"        return house.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"nseah21":75}},{"path":"src/main/java/seedu/rc4hdb/model/resident/fields/MatricNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":" * Represents a Resident\u0027s matriculation number in RC4HDB.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMatricNumber(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"public class MatricNumber extends Field {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"            \"Matriculation Number should begin with \u0027A\u0027, followed by \"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"                    + \"7 non-negative digits, and ends with an uppercase alphabet\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"     * The first character of the Matriculation Number must be \u0027A\u0027.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A][0-9]{7}[A-Z]$\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"    public final String matricNumber;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"     * Constructs a {@code MatricNumber}.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"     * @param matricNumber A valid matriculation number.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"    public MatricNumber(String matricNumber) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"        requireNonNull(matricNumber);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"        checkArgument(isValidMatricNumber(matricNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"        this.matricNumber \u003d matricNumber;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"     * Returns true if a given string is a valid matriculation number.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"nseah21"},"content":"    public static boolean isValidMatricNumber(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"nseah21"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"nseah21"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"nseah21"},"content":"        return matricNumber;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"nseah21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"nseah21"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"nseah21"},"content":"                || (other instanceof MatricNumber // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"                \u0026\u0026 matricNumber.equals(((MatricNumber) other).matricNumber)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"nseah21"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"nseah21"},"content":"        return matricNumber.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"nseah21":59}},{"path":"src/main/java/seedu/rc4hdb/model/resident/fields/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":" * Represents a Resident\u0027s name in RC4HDB.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"public class Name extends Field {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"nseah21":5,"-":54}},{"path":"src/main/java/seedu/rc4hdb/model/resident/fields/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":" * Represents a Resident\u0027s phone number in RC4HDB.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"public class Phone extends Field {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"            \"Phone numbers should only contain numbers, and it should be exactly 8 digits long\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{8}\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"nseah21":6,"-":47}},{"path":"src/main/java/seedu/rc4hdb/model/resident/fields/ResidentFields.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":" * Stores the identifiers for the resident fields.","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"public class ResidentFields {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"    public static final String EMAIL \u003d \"Email\";","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"    public static final String INDEX \u003d \"Index\";","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"    public static final String GENDER \u003d \"Gender\";","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"    public static final String HOUSE \u003d \"House\";","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"    public static final String MATRIC \u003d \"Matric\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"    public static final String NAME \u003d \"Name\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"    public static final String PHONE \u003d \"Phone\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"    public static final String ROOM \u003d \"Room\";","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"    public static final String TAG \u003d \"Tags\";","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"    public static final List\u003cString\u003e FIELDS \u003d List.of(EMAIL, INDEX, GENDER, HOUSE, MATRIC, NAME, PHONE, ROOM, TAG);","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"nseah21":20}},{"path":"src/main/java/seedu/rc4hdb/model/resident/fields/Room.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":" * Represents a Resident\u0027s Room in RC4HDB.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRoom(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"public class Room extends Field {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"            \"Room Number should be in the format FLOOR-UNIT, where FLOOR and UNIT are both non-negative integers\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"     * The characters before and after the \u0027-\u0027 must be a positive integer.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]*[1-9][0-9]*[-][0-9]*[1-9][0-9]*$\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"    public final String room;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"     * Constructs a {@code Room}.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"     * @param room A valid room.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"    public Room(String room) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"        requireNonNull(room);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"        checkArgument(isValidRoom(room), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"        this.room \u003d room;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"nseah21"},"content":"     * Returns true if a given string is a valid room.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"    public static boolean isValidRoom(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"nseah21"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"nseah21"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"nseah21"},"content":"        return room;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"nseah21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"nseah21"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"nseah21"},"content":"                || (other instanceof Room // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"nseah21"},"content":"                \u0026\u0026 room.equals(((Room) other).room)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"nseah21"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"nseah21"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"nseah21"},"content":"        return room.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"nseah21":58}},{"path":"src/main/java/seedu/rc4hdb/model/resident/predicates/AttributesMatchKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.predicates;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"public class AttributesMatchKeywordsPredicate implements Predicate\u003cResident\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"    private final ResidentDescriptor descriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"    public AttributesMatchKeywordsPredicate(ResidentDescriptor keywords) {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"        this.descriptor \u003d keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"    public boolean test(Resident resident) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"        return descriptor.getName().map(name -\u003e name.equals(resident.getName())).orElse(true)","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 descriptor.getPhone().map(phone -\u003e phone.equals(resident.getPhone())).orElse(true)","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 descriptor.getEmail().map(email -\u003e email.equals(resident.getEmail())).orElse(true)","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 descriptor.getRoom().map(room -\u003e room.equals(resident.getRoom())).orElse(true)","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 descriptor.getGender().map(gender -\u003e gender.equals(resident.getGender())).orElse(true)","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 descriptor.getHouse().map(house -\u003e house.equals(resident.getHouse())).orElse(true)","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 descriptor.getMatricNumber().map(matric -\u003e matric.equals(resident.getMatricNumber())).orElse(true)","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 descriptor.getTags().map(tags -\u003e tags.equals(resident.getTags())).orElse(true);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"                || (other instanceof AttributesMatchKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"                \u0026\u0026 descriptor.equals(((AttributesMatchKeywordsPredicate) other).descriptor)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":37}},{"path":"src/main/java/seedu/rc4hdb/model/resident/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.predicates;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.util.StringUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":" * Tests that a {@code Resident}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cResident\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    public boolean test(Resident resident) {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(resident.getName().fullName, keyword));","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jq1836":6,"nseah21":1,"-":25}},{"path":"src/main/java/seedu/rc4hdb/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.resident.fields.Field;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"public class Tag extends Field {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nseah21":5,"-":51}},{"path":"src/main/java/seedu/rc4hdb/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"    public static Resident[] getSampleResidents() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"        return new Resident[] {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"            new Resident(","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"                    new Name(\"John\"), new Phone(\"90000000\"), new Email(\"john@example.com\"), new Room(\"03-10\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"                    new Gender(\"M\"), new House(\"D\"), new MatricNumber(\"A0000000A\"), getTagSet(\"BlockHead\")","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"            ),","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"            new Resident(","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"                    new Name(\"Mary\"), new Phone(\"90000001\"), new Email(\"mary@example.com\"), new Room(\"04-05\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"                    new Gender(\"F\"), new House(\"A\"), new MatricNumber(\"A0000000B\"), getTagSet(\"HouseHead\")","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"            )","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"    public static ReadOnlyResidentBook getSampleResidentBook() {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        ResidentBook sampleRb \u003d new ResidentBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        for (Resident sampleResident : getSampleResidents()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"            sampleRb.addResident(sampleResident);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"        return sampleRb;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jq1836":25,"nseah21":2,"-":26}},{"path":"src/main/java/seedu/rc4hdb/storage/JsonAdaptedResident.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":" * Jackson-friendly version of {@link Resident}.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"public class JsonAdaptedResident {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Resident\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    private final String name;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"    private final String phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"    private final String email;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"    private final String room;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    private final String gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"    private final String house;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"    private final String matricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"     * Constructs a {@code JsonAdaptedResident} with the given resident details.","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"    public JsonAdaptedResident(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"room\") String room,","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"                             @JsonProperty(\"gender\") String gender, @JsonProperty(\"house\") String house,","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"                             @JsonProperty(\"matricNumber\") String matricNumber,","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"        this.room \u003d room;","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"        this.house \u003d house;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"        this.matricNumber \u003d matricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"     * Converts a given {@code Resident} into this class for Jackson use.","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"    public JsonAdaptedResident(Resident source) {","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"        room \u003d source.getRoom().room;","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"        gender \u003d source.getGender().gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"        house \u003d source.getHouse().house;","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"        matricNumber \u003d source.getMatricNumber().matricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"     * Converts this Jackson-friendly adapted resident object into the model\u0027s {@code Resident} object.","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted resident.","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"    public Resident toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"        final List\u003cTag\u003e residentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"            residentTags.add(tag.toModelType());","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"        throwIfNullField(name, Name.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"        throwIfNullField(phone, Phone.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"        throwIfNullField(email, Email.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"        throwIfNullField(room, Room.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"        if (!Room.isValidRoom(room)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"            throw new IllegalValueException(Room.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"jq1836"},"content":"        final Room modelRoom \u003d new Room(room);","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"        throwIfNullField(gender, Gender.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"jq1836"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"jq1836"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"jq1836"},"content":"        throwIfNullField(house, House.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"jq1836"},"content":"        if (!House.isValidHouse(house)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"jq1836"},"content":"            throw new IllegalValueException(House.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"jq1836"},"content":"        final House modelHouse \u003d new House(house);","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"jq1836"},"content":"        throwIfNullField(matricNumber, MatricNumber.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"jq1836"},"content":"        if (!MatricNumber.isValidMatricNumber(matricNumber)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"jq1836"},"content":"            throw new IllegalValueException(MatricNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"jq1836"},"content":"        final MatricNumber modelMatricNumber \u003d new MatricNumber(matricNumber);","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"jq1836"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(residentTags);","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"jq1836"},"content":"        return new Resident(modelName, modelPhone, modelEmail, modelRoom, modelGender, modelHouse, modelMatricNumber,","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"jq1836"},"content":"                modelTags);","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"jq1836"},"content":"     * Throws an {@code IllegalValueException} if field is null.","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"jq1836"},"content":"     * @param field The field to check if null.","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"jq1836"},"content":"     * @param fieldClass The {@code Class} that field is supposed to be converted into.","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"jq1836"},"content":"     * @throws IllegalValueException if field is null.","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"jq1836"},"content":"    private void throwIfNullField(String field, Class\u003c?\u003e fieldClass) throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"jq1836"},"content":"        if (field \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"jq1836"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, fieldClass.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":146}},{"path":"src/main/java/seedu/rc4hdb/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nseah21":3,"-":45}},{"path":"src/main/java/seedu/rc4hdb/storage/JsonResidentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.core.LogsCenter;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.util.FileUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.util.JsonUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":" * A class to access ResidentBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"public class JsonResidentBookStorage implements ResidentBookStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonResidentBookStorage.class);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    public JsonResidentBookStorage(Path filePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    public Path getResidentBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"        return filePath;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cReadOnlyResidentBook\u003e readResidentBook() throws DataConversionException {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        return readResidentBook(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"     * Similar to {@link #readResidentBook()}.","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cReadOnlyResidentBook\u003e readResidentBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"        Optional\u003cJsonSerializableResidentBook\u003e jsonResidentBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"                filePath, JsonSerializableResidentBook.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"        if (!jsonResidentBook.isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"            return Optional.of(jsonResidentBook.get().toModelType());","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"    public void saveResidentBook(ReadOnlyResidentBook residentBook) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"        saveResidentBook(residentBook, filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"     * Similar to {@link #saveResidentBook(ReadOnlyResidentBook)}.","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"    public void saveResidentBook(ReadOnlyResidentBook residentBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        requireNonNull(residentBook);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableResidentBook(residentBook), filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":79}},{"path":"src/main/java/seedu/rc4hdb/storage/JsonSerializableResidentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":" * An Immutable ResidentBook that is serializable to JSON format.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"public class JsonSerializableResidentBook {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    public static final String MESSAGE_DUPLICATE_RESIDENT \u003d \"Residents list contains duplicate resident(s).\";","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"    private final List\u003cJsonAdaptedResident\u003e residents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"     * Constructs a {@code JsonSerializableResidentBook} with the given residents.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"    public JsonSerializableResidentBook(@JsonProperty(\"residents\") List\u003cJsonAdaptedResident\u003e residents) {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"        this.residents.addAll(residents);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"     * Converts a given {@code ReadOnlyResidentBook} into this class for Jackson use.","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableResidentBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"    public JsonSerializableResidentBook(ReadOnlyResidentBook source) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        residents.addAll(source.getResidentList().stream().map(JsonAdaptedResident::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"     * Converts this resident book into the model\u0027s {@code ResidentBook} object.","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"    public ResidentBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        ResidentBook residentBook \u003d new ResidentBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"        for (JsonAdaptedResident jsonAdaptedResident : residents) {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"            Resident resident \u003d jsonAdaptedResident.toModelType();","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"            if (residentBook.hasResident(resident)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_RESIDENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"            residentBook.addResident(resident);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"        return residentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":58}},{"path":"src/main/java/seedu/rc4hdb/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.util.JsonUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"nseah21":5,"-":42}},{"path":"src/main/java/seedu/rc4hdb/storage/ResidentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":" * Represents a storage for {@link seedu.rc4hdb.model.ResidentBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"public interface ResidentBookStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"    Path getResidentBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"     * Returns ResidentBook data as a {@link ReadOnlyResidentBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    Optional\u003cReadOnlyResidentBook\u003e readResidentBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"     * @see #getResidentBookFilePath()","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"    Optional\u003cReadOnlyResidentBook\u003e readResidentBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"     * Saves the given {@link ReadOnlyResidentBook} to the storage.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"     * @param residentBook cannot be null.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"    void saveResidentBook(ReadOnlyResidentBook residentBook) throws IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"     * @see #saveResidentBook(ReadOnlyResidentBook)","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"    void saveResidentBook(ReadOnlyResidentBook residentBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":45}},{"path":"src/main/java/seedu/rc4hdb/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"public interface Storage extends ResidentBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    Path getResidentBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    Optional\u003cReadOnlyResidentBook\u003e readResidentBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    void saveResidentBook(ReadOnlyResidentBook residentBook) throws IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jq1836":5,"nseah21":4,"-":23}},{"path":"src/main/java/seedu/rc4hdb/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    private ResidentBookStorage residentBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"     * Creates a {@code StorageManager} with the given {@code ResidentBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    public StorageManager(ResidentBookStorage residentBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        this.residentBookStorage \u003d residentBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"    public Path getResidentBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"        return residentBookStorage.getResidentBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cReadOnlyResidentBook\u003e readResidentBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"        return readResidentBook(residentBookStorage.getResidentBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"    public Optional\u003cReadOnlyResidentBook\u003e readResidentBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"        return residentBookStorage.readResidentBook(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"    public void saveResidentBook(ReadOnlyResidentBook residentBook) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"        saveResidentBook(residentBook, residentBookStorage.getResidentBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"    public void saveResidentBook(ReadOnlyResidentBook residentBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"        residentBookStorage.saveResidentBook(residentBook, filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jq1836":15,"nseah21":5,"-":58}},{"path":"src/main/java/seedu/rc4hdb/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":" * Represents a storage for {@link seedu.rc4hdb.model.UserPrefs}.","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"     * Saves the given {@link seedu.rc4hdb.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"nseah21":6,"-":30}},{"path":"src/main/java/seedu/rc4hdb/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"nealetham"},"content":"     * Brings the text field into focus.","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"nealetham"},"content":"    public void focus() {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"nealetham"},"content":"        commandTextField.requestFocus();","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"nseah21"},"content":"         * @see seedu.rc4hdb.logic.Logic#execute(String)","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"nseah21":5,"nealetham":7,"-":80}},{"path":"src/main/java/seedu/rc4hdb/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"nealetham"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"nealetham"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w12-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"nealetham"},"content":"        setAccelerators();","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"nealetham"},"content":"     * Closes the help window on Escape key press.","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"nealetham"},"content":"    private void setAccelerators() {","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"nealetham"},"content":"        getRoot().addEventHandler(KeyEvent.KEY_PRESSED, (KeyEvent event) -\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"nealetham"},"content":"            if (KeyCode.ESCAPE \u003d\u003d event.getCode()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"nealetham"},"content":"                getRoot().close();","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"nealetham"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"nealetham"},"content":"        );","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jq1836":1,"nseah21":2,"nealetham":15,"-":99}},{"path":"src/main/java/seedu/rc4hdb/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.Logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"nealetham"},"content":"    private ResidentTableView residentTableView;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"nealetham"},"content":"    private CommandBox commandBoxRegion;","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"nealetham"},"content":"    private MenuItem commandBoxRedirect;","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"nealetham"},"content":"    private StackPane residentTableViewPlaceholder;","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"nseah21"},"content":"        this.logic.getObservableFields().addListener(getListChangeListener());","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"nealetham"},"content":"        setAccelerator(commandBoxRedirect, KeyCombination.valueOf(\"F3\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"nseah21"},"content":"        residentTableView \u003d new ResidentTableView(logic.getFilteredResidentList(), logic.getObservableFields());","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"nealetham"},"content":"        residentTableViewPlaceholder.getChildren().add(residentTableView.getRoot());","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"jq1836"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getResidentBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"nealetham"},"content":"        commandBoxRegion \u003d commandBox;","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"nealetham"},"content":"     * Redirects the focus onto the text field of the command box.","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"nealetham"},"content":"    public void handleRedirect() {","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"nealetham"},"content":"        commandBoxRegion.focus();","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"nealetham"},"content":"    public ResidentTableView getResidentTablePanel() {","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"nealetham"},"content":"        return residentTableView;","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"nseah21"},"content":"     * @see seedu.rc4hdb.logic.Logic#execute(String)","lastModifiedDate":"2022-10-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"nseah21"},"content":"    private ListChangeListener\u003cString\u003e getListChangeListener() {","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"nseah21"},"content":"        // Update the observable field list within the logic attribute","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"nseah21"},"content":"        return c -\u003e residentTableView.setObservableFields(logic.getObservableFields());","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jq1836":1,"nseah21":17,"nealetham":17,"-":182}},{"path":"src/main/java/seedu/rc4hdb/ui/ResidentTableView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import javafx.scene.control.TableCell;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.resident.fields.Field;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.resident.fields.ResidentFields;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"public class ResidentTableView extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"    private static final String FXML \u003d \"ResidentTableView.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"    private final TableColumn\u003cResident, Field\u003e emailColumn \u003d new TableColumn\u003c\u003e(ResidentFields.EMAIL);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"    private final TableColumn\u003cResident, Field\u003e genderColumn \u003d new TableColumn\u003c\u003e(ResidentFields.GENDER);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"    private final TableColumn\u003cResident, Field\u003e houseColumn \u003d new TableColumn\u003c\u003e(ResidentFields.HOUSE);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"    private final TableColumn\u003cResident, Field\u003e indexColumn \u003d new TableColumn\u003c\u003e(ResidentFields.INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"    private final TableColumn\u003cResident, Field\u003e matricColumn \u003d new TableColumn\u003c\u003e(ResidentFields.MATRIC);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"    private final TableColumn\u003cResident, Field\u003e nameColumn \u003d new TableColumn\u003c\u003e(ResidentFields.NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"    private final TableColumn\u003cResident, Field\u003e phoneColumn \u003d new TableColumn\u003c\u003e(ResidentFields.PHONE);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"    private final TableColumn\u003cResident, Field\u003e roomColumn \u003d new TableColumn\u003c\u003e(ResidentFields.ROOM);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"nseah21"},"content":"    private final TableColumn\u003cResident, Field\u003e tagColumn \u003d new TableColumn\u003c\u003e(ResidentFields.TAG);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"    private TableView\u003cResident\u003e residentTableView;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"nseah21"},"content":"    private ObservableList\u003cString\u003e observableFields \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"nseah21"},"content":"     * Creates a {@code ResidentTableView} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"nseah21"},"content":"    public ResidentTableView(ObservableList\u003cResident\u003e residentList, ObservableList\u003cString\u003e observableFields) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"nseah21"},"content":"        super(FXML);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"nseah21"},"content":"        requireAllNonNull(residentList, observableFields);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"nseah21"},"content":"        this.residentTableView.setItems(residentList);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"nseah21"},"content":"        addColumns();","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"nseah21"},"content":"        populateRows();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"nseah21"},"content":"        configureTableProperties();","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"        this.observableFields.setAll(observableFields);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"nseah21"},"content":"        this.observableFields.addListener(getListChangeListener());","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"nseah21"},"content":"     * Sets the columns of the table with the formatters.","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"nseah21"},"content":"    private void addColumns() {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"nseah21"},"content":"        residentTableView.getColumns().add(indexColumn);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"nseah21"},"content":"        residentTableView.getColumns().add(nameColumn);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"nseah21"},"content":"        residentTableView.getColumns().add(phoneColumn);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"nseah21"},"content":"        residentTableView.getColumns().add(emailColumn);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"nseah21"},"content":"        residentTableView.getColumns().add(roomColumn);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"nseah21"},"content":"        residentTableView.getColumns().add(genderColumn);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"nseah21"},"content":"        residentTableView.getColumns().add(houseColumn);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"nseah21"},"content":"        residentTableView.getColumns().add(matricColumn);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"nseah21"},"content":"        residentTableView.getColumns().add(tagColumn);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"nseah21"},"content":"     * Populates the columns with data from the given {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"nseah21"},"content":"    private void populateRows() {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"nseah21"},"content":"        nameColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"name\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"nseah21"},"content":"        phoneColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"phone\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"nseah21"},"content":"        emailColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"email\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"nseah21"},"content":"        roomColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"room\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"nseah21"},"content":"        indexColumn.setCellFactory(this::populateIndexColumn);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"nseah21"},"content":"        genderColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"gender\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"nseah21"},"content":"        houseColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"house\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"nseah21"},"content":"        matricColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"matricNumber\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"nseah21"},"content":"        tagColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"tags\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"nseah21"},"content":"     * Code referenced from:","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"nseah21"},"content":"     * https://stackoverflow.com/questions/33353014/creating-a-row-index-column-in-javafx","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"nseah21"},"content":"    private TableCell\u003cResident, Field\u003e populateIndexColumn(TableColumn\u003cResident, Field\u003e column) {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"nseah21"},"content":"        return new TableCell\u003c\u003e() {","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"nseah21"},"content":"            @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"nseah21"},"content":"            public void updateIndex(int index) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"nseah21"},"content":"                super.updateIndex(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"nseah21"},"content":"                if (isEmpty() || index \u003c 0) {","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"nseah21"},"content":"                    setText(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"nseah21"},"content":"                } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"nseah21"},"content":"                    setText(Integer.toString(index + 1));","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"nseah21"},"content":"                }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"nseah21"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"nseah21"},"content":"        };","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"nseah21"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"nseah21"},"content":"     * Stylizes the {@code ResidentTableView} to maximise column width.","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"nseah21"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"nseah21"},"content":"    private void configureTableProperties() {","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"nseah21"},"content":"        residentTableView.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"nseah21"},"content":"        indexColumn.setResizable(false);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"nseah21"},"content":"        indexColumn.setPrefWidth(70);","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"nealetham"},"content":"        nameColumn.setMinWidth(300);","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"nealetham"},"content":"        phoneColumn.setResizable(false);","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"nealetham"},"content":"        phoneColumn.setPrefWidth(120);","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"nealetham"},"content":"        emailColumn.setMinWidth(300);","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"nealetham"},"content":"        roomColumn.setResizable(false);","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"nealetham"},"content":"        roomColumn.setPrefWidth(140);","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"nealetham"},"content":"        genderColumn.setResizable(false);","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"nealetham"},"content":"        genderColumn.setPrefWidth(90);","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"nealetham"},"content":"        houseColumn.setResizable(false);","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"nealetham"},"content":"        houseColumn.setPrefWidth(90);","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"nealetham"},"content":"        matricColumn.setResizable(false);","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"nealetham"},"content":"        matricColumn.setPrefWidth(140);","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"nseah21"},"content":"    private ListChangeListener\u003cString\u003e getListChangeListener() {","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"nseah21"},"content":"        return c -\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"nseah21"},"content":"            // Reset column visibilities","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"nseah21"},"content":"            residentTableView.getColumns().forEach(column -\u003e column.setVisible(true));","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"nseah21"},"content":"            // Filter all columns (including index column) to obtain required columns","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"nseah21"},"content":"            // Recall that column headers is in title-case, i.e. first letter is capitalised","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"nseah21"},"content":"            residentTableView.getColumns().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"nseah21"},"content":"                    .filter(column -\u003e this.observableFields.contains(column.getText().toLowerCase()))","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"nseah21"},"content":"                    .forEach(column -\u003e column.setVisible(false));","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"nseah21"},"content":"        };","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"nseah21"},"content":"    public void setObservableFields(ObservableList\u003cString\u003e list) {","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"nseah21"},"content":"        this.observableFields.setAll(list);","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"nseah21":131,"nealetham":20}},{"path":"src/main/java/seedu/rc4hdb/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nseah21":1,"-":27}},{"path":"src/main/java/seedu/rc4hdb/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":1,"-":27}},{"path":"src/main/java/seedu/rc4hdb/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nseah21":1,"-":12}},{"path":"src/main/java/seedu/rc4hdb/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.MainApp;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.util.StringUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.Logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"nealetham"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/RC4HDB.png\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nseah21":5,"nealetham":1,"-":82}},{"path":"src/main/java/seedu/rc4hdb/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.MainApp;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"nealetham"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"nealetham"},"content":"     * @see #UiPart(String)","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nseah21":2,"nealetham":2,"-":85}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"nseah21"},"content":"    -fx-control-inner-background: white;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"nseah21"},"content":"    -fx-background-color: #D8D8D8;","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"nseah21"},"content":"    -fx-table-cell-border-color: white;","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"nseah21"},"content":"    -fx-table-header-border-color: #ACACAC;","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"nseah21"},"content":"    -fx-font-size: 18pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"nseah21"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"nseah21"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"nseah21"},"content":"    -fx-text-weight: bold;","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"nseah21"},"content":"    -fx-alignment: center;","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"nseah21"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"nseah21"},"content":".table-view .table-cell {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"nseah21"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"nseah21"},"content":"    -fx-font-family: \"Roboto\";","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"nseah21"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"nseah21"},"content":"    -fx-alignment: center;","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"nseah21"},"content":".table-row-cell: odd {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"nseah21"},"content":"    -fx-background-color: #D8D8D8;","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"nseah21"},"content":"    -fx-background-insets: 0, 0 0 1 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"nseah21"},"content":"    -fx-padding: 0.0em;","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"nseah21"},"content":".table-row-cell: even {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"nseah21"},"content":"    -fx-background-color: #E8E8E8;","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"nseah21"},"content":"    -fx-background-insets: 0, 0 0 1 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"nseah21"},"content":"    -fx-padding: 0.0em;","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"nseah21":29,"-":338}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"nealetham"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"nealetham"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"nealetham"},"content":"      \u003cVBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\" \u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"nealetham"},"content":"          \u003cImageView fx:id\u003d\"cmdSummaryView\" fitHeight\u003d\"1000.0\" fitWidth\u003d\"1000.0\" preserveRatio\u003d\"true\" layoutX\u003d\"61.0\" layoutY\u003d\"83.0\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"nealetham"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"nealetham"},"content":"              \u003cImage url\u003d\"/images/cmd_summary.png\"/\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"nealetham"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"nealetham"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"nealetham"},"content":"          \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"nealetham"},"content":"                \u003cInsets right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"nealetham"},"content":"                \u003cInsets left\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"nealetham"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":50,"author":{"gitId":"nealetham"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"nealetham":14,"-":39}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"nealetham"},"content":"         title\u003d\"RC4HDB\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"nealetham"},"content":"    \u003cImage url\u003d\"@/images/RC4HDB.png\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"nealetham"},"content":"            \u003cMenuItem fx:id\u003d\"commandBoxRedirect\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleRedirect\"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"nealetham"},"content":"                      visible\u003d\"false\"/\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"nealetham"},"content":"        \u003cVBox fx:id\u003d\"residentTableView\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"nealetham"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"nealetham"},"content":"          \u003cStackPane fx:id\u003d\"residentTableViewPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"nealetham"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"nealetham"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"nealetham"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"nealetham"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"nealetham":11,"-":47}},{"path":"src/main/resources/view/PersonTableView.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"  \u003cTableView fx:id\u003d\"tableView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"nseah21":2,"-":6}},{"path":"src/main/resources/view/ResidentTableView.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"nealetham"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"nealetham"},"content":"    \u003cTableView fx:id\u003d\"residentTableView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jq1836":2,"nealetham":2,"-":4}},{"path":"src/test/java/seedu/rc4hdb/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"nseah21":1,"-":57}},{"path":"src/test/java/seedu/rc4hdb/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"nseah21":1,"-":26}},{"path":"src/test/java/seedu/rc4hdb/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.core;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":2,"-":133}},{"path":"src/test/java/seedu/rc4hdb/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.core.index;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"nseah21":2,"-":58}},{"path":"src/test/java/seedu/rc4hdb/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"nseah21":2,"-":34}},{"path":"src/test/java/seedu/rc4hdb/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"nseah21":3,"-":105}},{"path":"src/test/java/seedu/rc4hdb/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.Config;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"nseah21":4,"-":112}},{"path":"src/test/java/seedu/rc4hdb/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":2,"-":21}},{"path":"src/test/java/seedu/rc4hdb/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.testutil.TestUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":3,"-":42}},{"path":"src/test/java/seedu/rc4hdb/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.commons.util;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"nealetham"},"content":"        // Matches a partial contained word","lastModifiedDate":"2022-09-26"},{"lineNumber":115,"author":{"gitId":"nealetham"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // First word (boundary case)","lastModifiedDate":"2022-09-26"},{"lineNumber":116,"author":{"gitId":"nealetham"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"cc\")); // Last word (boundary case)","lastModifiedDate":"2022-09-26"},{"lineNumber":117,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":118,"author":{"gitId":"nealetham"},"content":"        // Matches a partial contained word, different upper/lower case letters","lastModifiedDate":"2022-09-26"},{"lineNumber":119,"author":{"gitId":"nealetham"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"Bb\")); // First word (boundary case)","lastModifiedDate":"2022-09-26"},{"lineNumber":120,"author":{"gitId":"nealetham"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"cC\")); // Last word (boundary case)","lastModifiedDate":"2022-09-26"},{"lineNumber":121,"author":{"gitId":"nealetham"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"   aaa   bbb   ccc   \", \"aA\")); // Sentence has extra spaces","lastModifiedDate":"2022-09-26"},{"lineNumber":122,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"nseah21":2,"nealetham":9,"-":140}},{"path":"src/test/java/seedu/rc4hdb/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_RESIDENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.HOUSE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.ROOM_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.misccommands.HelpCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.AddCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.ListCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.storage.JsonResidentBookStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.storage.StorageManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.testutil.ResidentBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"        JsonResidentBookStorage residentBookStorage \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"                new JsonResidentBookStorage(temporaryFolder.resolve(\"residentBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"        StorageManager storage \u003d new StorageManager(residentBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"        assertModelCommandException(invalidCommand, MESSAGE_UNKNOWN_COMMAND, ParseException.class);","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"    public void execute_validMiscCommand_success() throws Exception {","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"        String helpCommand \u003d HelpCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        assertMiscCommandSuccess(helpCommand, HelpCommand.SHOWING_HELP_MESSAGE);","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"    public void execute_validModelCommand_success() throws Exception {","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        assertModelCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"    public void execute_modelCommandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        assertModelCommandException(deleteCommand, MESSAGE_INVALID_RESIDENT_DISPLAYED_INDEX, CommandException.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"    // To add StorageCommand test here when a StorageCommand is implemented","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"alvinjiang1"},"content":"        // Setup LogicManager with JsonResidentBookIoExceptionThrowingStub","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"alvinjiang1"},"content":"        JsonResidentBookStorage residentBookStorage \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"alvinjiang1"},"content":"                new JsonResidentBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionResidentBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":90,"author":{"gitId":"alvinjiang1"},"content":"        StorageManager storage \u003d new StorageManager(residentBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"alvinjiang1"},"content":"                + ROOM_DESC_AMY + GENDER_DESC_AMY + HOUSE_DESC_AMY + MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"alvinjiang1"},"content":"        Resident expectedResident \u003d new ResidentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"alvinjiang1"},"content":"        expectedModel.addResident(expectedResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"        assertModelCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"alvinjiang1"},"content":"    public void getFilteredResidentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredResidentList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"    private void assertMiscCommandSuccess(String inputCommand, String expectedMessage)","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"            throws CommandException, ParseException {","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"jq1836"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"jq1836"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"jq1836"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":123,"author":{"gitId":"jq1836"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"jq1836"},"content":"     * @see #assertModelCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"jq1836"},"content":"    private void assertModelCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"jq1836"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"jq1836"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"jq1836"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"jq1836"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"jq1836"},"content":"     * @see #assertModelCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"jq1836"},"content":"    private void assertModelCommandException(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"jq1836"},"content":"                                             Class\u003c? extends Throwable\u003e expectedException) {","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"jq1836"},"content":"        assertModelCommandFailure(inputCommand, expectedException, expectedMessage);","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"jq1836"},"content":"     * @see #assertModelCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"jq1836"},"content":"    private void assertModelCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"jq1836"},"content":"        Model expectedModel \u003d new ModelManager(model.getResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"jq1836"},"content":"        assertModelCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"jq1836"},"content":"     * @see #assertModelCommandSuccess(String, String, Model)","lastModifiedDate":"2022-10-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"jq1836"},"content":"    private void assertModelCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-10-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"alvinjiang1"},"content":"    private static class JsonResidentBookIoExceptionThrowingStub extends JsonResidentBookStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"alvinjiang1"},"content":"        private JsonResidentBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"alvinjiang1"},"content":"        public void saveResidentBook(ReadOnlyResidentBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jq1836":45,"nseah21":11,"alvinjiang1":23,"-":99}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"nseah21":1,"-":53}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/misccommands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.misccommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.misccommands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.misccommands.MiscCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"        assertCommandSuccess(new ExitCommand(), expectedCommandResult);","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"jq1836":18}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/misccommands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.misccommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.misccommands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.misccommands.MiscCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"    public void execute_help_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"        assertCommandSuccess(new HelpCommand(), expectedCommandResult);","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"jq1836":18}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/misccommands/MiscCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.misccommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":" * Contains helper functions for testing {@code MiscCommand}.","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"public class MiscCommandTestUtil {","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"    public static void assertCommandSuccess(MiscCommand command, CommandResult expectedCommandResult) {","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"            CommandResult result \u003d command.execute();","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(MiscCommand, CommandResult)})}","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"    public static void assertCommandSuccess(MiscCommand command, String expectedMessage) {","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"        assertCommandSuccess(command, expectedCommandResult);","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"jq1836":36}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/modelcommands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.testutil.ResidentBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"        model \u003d new ModelManager(getTypicalResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"    public void execute_newResident_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"        Resident validResident \u003d new ResidentBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"        Model expectedModel \u003d new ModelManager(model.getResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"        expectedModel.addResident(validResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"        assertCommandSuccess(new AddCommand(validResident), model,","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validResident), expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"    public void execute_duplicateResident_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"        Resident personInList \u003d model.getResidentBook().getResidentList().get(0);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_RESIDENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jq1836":5,"nseah21":3,"alvinjiang1":11,"-":26}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/modelcommands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.testutil.ResidentBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    public void constructor_nullResident_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"    public void execute_residentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"        ModelStubAcceptingResidentAdded modelStub \u003d new ModelStubAcceptingResidentAdded();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"        Resident validResident \u003d new ResidentBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"        CommandResult commandResult \u003d new AddCommand(validResident).execute(modelStub);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validResident), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(Arrays.asList(validResident), modelStub.residentsAdded);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"        Resident validResident \u003d new ResidentBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"        AddCommand addCommand \u003d new AddCommand(validResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"        ModelStub modelStub \u003d new ModelStubWithResident(validResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_RESIDENT, ()","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"                -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"        Resident alice \u003d new ResidentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"        Resident bob \u003d new ResidentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"alvinjiang1"},"content":"        public Path getResidentBookFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"alvinjiang1"},"content":"        public void setResidentBookFilePath(Path residentBookFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"alvinjiang1"},"content":"        public void addResident(Resident resident) {","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"alvinjiang1"},"content":"        public void setResidentBook(ReadOnlyResidentBook newData) {","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"alvinjiang1"},"content":"        public ReadOnlyResidentBook getResidentBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"alvinjiang1"},"content":"        public boolean hasResident(Resident resident) {","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"alvinjiang1"},"content":"        public void deleteResident(Resident target) {","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"alvinjiang1"},"content":"        public void setResident(Resident target, Resident editedResident) {","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"alvinjiang1"},"content":"        public ObservableList\u003cResident\u003e getFilteredResidentList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"alvinjiang1"},"content":"        public void updateFilteredResidentList(Predicate\u003cResident\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"nseah21"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"nseah21"},"content":"        public ObservableList\u003cString\u003e getObservableFields() {","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"nseah21"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"nseah21"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"nseah21"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"nseah21"},"content":"        public void setObservableFields(List\u003cString\u003e observableFields) {","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"alvinjiang1"},"content":"     * A Model stub that contains a single resident.","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"alvinjiang1"},"content":"    private class ModelStubWithResident extends ModelStub {","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"alvinjiang1"},"content":"        private final Resident resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"alvinjiang1"},"content":"        ModelStubWithResident(Resident resident) {","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"alvinjiang1"},"content":"            requireNonNull(resident);","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"alvinjiang1"},"content":"            this.resident \u003d resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"alvinjiang1"},"content":"        public boolean hasResident(Resident resident) {","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"alvinjiang1"},"content":"            requireNonNull(resident);","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"alvinjiang1"},"content":"            return this.resident.isSameResident(resident);","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"alvinjiang1"},"content":"     * A Model stub that always accept the resident being added.","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"alvinjiang1"},"content":"    private class ModelStubAcceptingResidentAdded extends ModelStub {","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"alvinjiang1"},"content":"        final ArrayList\u003cResident\u003e residentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"alvinjiang1"},"content":"        public boolean hasResident(Resident resident) {","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"alvinjiang1"},"content":"            requireNonNull(resident);","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"alvinjiang1"},"content":"            return residentsAdded.stream().anyMatch(resident::isSameResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"alvinjiang1"},"content":"        public void addResident(Resident resident) {","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"alvinjiang1"},"content":"            requireNonNull(resident);","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"alvinjiang1"},"content":"            residentsAdded.add(resident);","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"alvinjiang1"},"content":"        public ReadOnlyResidentBook getResidentBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"alvinjiang1"},"content":"            return new ResidentBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jq1836":6,"nseah21":14,"alvinjiang1":44,"-":143}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/modelcommands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"    public void execute_emptyResidentBook_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"        Model model \u003d new ModelManager(getTypicalResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"        expectedModel.setResidentBook(new ResidentBook());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jq1836":6,"alvinjiang1":5,"-":21}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/modelcommands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.showResidentAtIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_FIRST_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_SECOND_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"    private Model model \u003d new ModelManager(getTypicalResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"        Resident residentToDelete \u003d model.getFilteredResidentList().get(INDEX_FIRST_RESIDENT.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_RESIDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_RESIDENT_SUCCESS, residentToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"        expectedModel.deleteResident(residentToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredResidentList().size() + 1);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_RESIDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"        showResidentAtIndex(model, INDEX_FIRST_RESIDENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"        Resident residentToDelete \u003d model.getFilteredResidentList().get(INDEX_FIRST_RESIDENT.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_RESIDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_RESIDENT_SUCCESS, residentToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        Model expectedModel \u003d new ModelManager(model.getResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"        expectedModel.deleteResident(residentToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"        showNoResident(expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"        showResidentAtIndex(model, INDEX_FIRST_RESIDENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"alvinjiang1"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getResidentBook().getResidentList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_RESIDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"alvinjiang1"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_RESIDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"alvinjiang1"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_RESIDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"alvinjiang1"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_RESIDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"alvinjiang1"},"content":"    private void showNoResident(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"        model.updateFilteredResidentList(p -\u003e false);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"        assertTrue(model.getFilteredResidentList().isEmpty());","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jq1836":13,"nseah21":5,"alvinjiang1":20,"-":71}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/modelcommands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.showResidentAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_FIRST_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_SECOND_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.Messages;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.testutil.ResidentBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.testutil.ResidentDescriptorBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"    private Model model \u003d new ModelManager(getTypicalResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"        Resident editedResident \u003d new ResidentBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder(editedResident).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_RESIDENT, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESIDENT_SUCCESS, editedResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"        Model expectedModel \u003d new ModelManager(new ResidentBook(model.getResidentBook()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"        expectedModel.setResident(model.getFilteredResidentList().get(0), editedResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"        Index indexLastResident \u003d Index.fromOneBased(model.getFilteredResidentList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"        Resident lastResident \u003d model.getFilteredResidentList().get(indexLastResident.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"        ResidentBuilder residentInList \u003d new ResidentBuilder(lastResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"        Resident editedResident \u003d residentInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastResident, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESIDENT_SUCCESS, editedResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"        Model expectedModel \u003d new ModelManager(new ResidentBook(model.getResidentBook()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"        expectedModel.setResident(lastResident, editedResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_RESIDENT, new ResidentDescriptor());","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"alvinjiang1"},"content":"        Resident editedResident \u003d model.getFilteredResidentList().get(INDEX_FIRST_RESIDENT.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"alvinjiang1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESIDENT_SUCCESS, editedResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"alvinjiang1"},"content":"        Model expectedModel \u003d new ModelManager(new ResidentBook(model.getResidentBook()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"alvinjiang1"},"content":"        showResidentAtIndex(model, INDEX_FIRST_RESIDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"alvinjiang1"},"content":"        Resident residentInFilteredList \u003d model.getFilteredResidentList().get(INDEX_FIRST_RESIDENT.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"alvinjiang1"},"content":"        Resident editedResident \u003d new ResidentBuilder(residentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"alvinjiang1"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_RESIDENT,","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"                new ResidentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"alvinjiang1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESIDENT_SUCCESS, editedResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"alvinjiang1"},"content":"        Model expectedModel \u003d new ModelManager(new ResidentBook(model.getResidentBook()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"alvinjiang1"},"content":"        expectedModel.setResident(model.getFilteredResidentList().get(0), editedResident);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"alvinjiang1"},"content":"    public void execute_duplicateResidentUnfilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"alvinjiang1"},"content":"        Resident firstResident \u003d model.getFilteredResidentList().get(INDEX_FIRST_RESIDENT.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder(firstResident).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"alvinjiang1"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_RESIDENT, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_RESIDENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"alvinjiang1"},"content":"    public void execute_duplicateResidentFilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"alvinjiang1"},"content":"        showResidentAtIndex(model, INDEX_FIRST_RESIDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"alvinjiang1"},"content":"        // edit resident in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"alvinjiang1"},"content":"        Resident residentInList \u003d model.getResidentBook().getResidentList().get(INDEX_SECOND_RESIDENT.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"alvinjiang1"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_RESIDENT,","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"alvinjiang1"},"content":"                new ResidentDescriptorBuilder(residentInList).build());","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"jq1836"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_RESIDENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"alvinjiang1"},"content":"    public void execute_invalidResidentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"jq1836"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredResidentList().size() + 1);","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"jq1836"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_RESIDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"alvinjiang1"},"content":"    public void execute_invalidResidentIndexFilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"alvinjiang1"},"content":"        showResidentAtIndex(model, INDEX_FIRST_RESIDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"alvinjiang1"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"alvinjiang1"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getResidentBook().getResidentList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"jq1836"},"content":"                new ResidentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"jq1836"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_RESIDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"alvinjiang1"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_RESIDENT, DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor copyDescriptor \u003d new ResidentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"alvinjiang1"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_RESIDENT, copyDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"alvinjiang1"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_RESIDENT, DESC_AMY)));","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"alvinjiang1"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_RESIDENT, DESC_BOB)));","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jq1836":17,"nseah21":5,"nareus":1,"alvinjiang1":55,"-":96}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/modelcommands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nareus"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"nareus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"nareus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"nareus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_RESIDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.ALICE;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.DANIEL;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.ELLE;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.FIONA;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"nareus"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"nareus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.resident.predicates.AttributesMatchKeywordsPredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.testutil.ResidentDescriptorBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"nareus"},"content":"public class FilterCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"nareus"},"content":"    private Model model \u003d new ModelManager(getTypicalResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"nareus"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"nareus"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"nareus"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(new ResidentDescriptorBuilder(ALICE).build());","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d new FilterCommand(new ResidentDescriptorBuilder(ALICE).build());","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"nareus"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"nareus"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"nareus"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredResidentList());","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"nareus"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withName(ALICE.getName())","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"nareus"},"content":"                .withPhone(ALICE.getPhone()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"nareus"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"nareus"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"nareus"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"nareus"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredResidentList());","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"nareus"},"content":"    public void execute_nameSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withName(ALICE.getName()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"nareus"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"nareus"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"nareus"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"nareus"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredResidentList());","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"nareus"},"content":"    public void execute_phoneSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withPhone(ALICE.getPhone()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"nareus"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"nareus"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"nareus"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"nareus"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredResidentList());","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"nareus"},"content":"    public void execute_emailSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withEmail(ALICE.getEmail()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"nareus"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"nareus"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"nareus"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"nareus"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredResidentList());","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"nareus"},"content":"    public void execute_matricNumberSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"nareus"},"content":"                .withMatricNumber(ALICE.getMatricNumber()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"nareus"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"nareus"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"nareus"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"nareus"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredResidentList());","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"nareus"},"content":"    public void execute_houseSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"nareus"},"content":"                .withHouse(ALICE.getHouse()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"nareus"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"nareus"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"nareus"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"nareus"},"content":"        assertEquals(Arrays.asList(ALICE, FIONA), model.getFilteredResidentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"nareus"},"content":"    public void execute_genderSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"nareus"},"content":"                .withGender(ALICE.getGender()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"nareus"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"nareus"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"nareus"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"nareus"},"content":"        assertEquals(Arrays.asList(ALICE, ELLE, FIONA), model.getFilteredResidentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"nareus"},"content":"    public void execute_tagsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"nareus"},"content":"                .withTags(ALICE.getTags()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"nareus"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"nareus"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"nareus"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"nareus"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL), model.getFilteredResidentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"nareus"},"content":"    public void execute_roomSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"nareus"},"content":"                .withRoom(ALICE.getRoom()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"nareus"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"nareus"},"content":"        AttributesMatchKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"nareus"},"content":"                new AttributesMatchKeywordsPredicate(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"nareus"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"nareus"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"nareus"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredResidentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"nareus"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor firstDescriptor \u003d new ResidentDescriptorBuilder(AMY).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor secondDescriptor \u003d new ResidentDescriptorBuilder(ALICE).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"nareus"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"nareus"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"nareus"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"nareus"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"nareus"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"nareus"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"nareus"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"nareus"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"nareus"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"nareus"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"nareus"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"nareus"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"nareus"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"nareus"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"nareus":183}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/modelcommands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_RESIDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"nealetham"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.BENSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.CARL;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.ELLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.FIONA;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"nealetham"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.GEORGE;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"    private Model model \u003d new ModelManager(getTypicalResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"        // different resident -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"    public void execute_zeroKeywords_noResidentFound() {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredResidentList());","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"nealetham"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"nealetham"},"content":"    public void execute_partialKeyword_onePersonFound() {","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"nealetham"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"nealetham"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"eorge\");","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"nealetham"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"nealetham"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"nealetham"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"nealetham"},"content":"        assertEquals(Arrays.asList(GEORGE), model.getFilteredResidentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"nealetham"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"nealetham"},"content":"    public void execute_partialKeyword_multiplePersonFound() {","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"nealetham"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"nealetham"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Ku\");","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"nealetham"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"nealetham"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"nealetham"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"nealetham"},"content":"        assertEquals(Arrays.asList(CARL, FIONA), model.getFilteredResidentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"nealetham"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"nealetham"},"content":"    public void execute_multiplePartialKeyword_multiplePersonFound() {","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"nealetham"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"nealetham"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Ku On\");","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"nealetham"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"nealetham"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"nealetham"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"nealetham"},"content":"        assertEquals(Arrays.asList(BENSON, CARL, FIONA), model.getFilteredResidentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"nealetham"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"nealetham"},"content":"    public void execute_onePartialOneInvalidKeyword_multiplePersonFound() {","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"nealetham"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"nealetham"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Ku Bestie\");","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"nealetham"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"nealetham"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"nealetham"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"nealetham"},"content":"        assertEquals(Arrays.asList(CARL, FIONA), model.getFilteredResidentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":110,"author":{"gitId":"alvinjiang1"},"content":"    public void execute_multipleKeywords_multipleResidentsFound() {","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"        expectedModel.updateFilteredResidentList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredResidentList());","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jq1836":10,"nseah21":3,"nealetham":43,"alvinjiang1":9,"-":60}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/modelcommands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.showResidentAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_FIRST_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"        model \u003d new ModelManager(getTypicalResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"        expectedModel \u003d new ModelManager(model.getResidentBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"        showResidentAtIndex(model, INDEX_FIRST_RESIDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jq1836":3,"nseah21":3,"alvinjiang1":5,"-":28}},{"path":"src/test/java/seedu/rc4hdb/logic/commands/modelcommands/ModelCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.commands.modelcommands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_HOUSE;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.testutil.ResidentDescriptorBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"public class ModelCommandTestUtil {","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"    public static final String VALID_ROOM_AMY \u003d \"01-02\";","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"    public static final String VALID_ROOM_BOB \u003d \"09-10\";","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"    public static final String VALID_GENDER_AMY \u003d \"F\";","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"    public static final String VALID_GENDER_BOB \u003d \"M\";","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"    public static final String VALID_HOUSE_AMY \u003d \"A\";","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"    public static final String VALID_HOUSE_BOB \u003d \"U\";","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"    public static final String VALID_MATRIC_NUMBER_AMY \u003d \"A0123456U\";","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"    public static final String VALID_MATRIC_NUMBER_BOB \u003d \"A0000000U\";","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"    public static final String ROOM_DESC_AMY \u003d \" \" + PREFIX_ROOM + VALID_ROOM_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"    public static final String ROOM_DESC_BOB \u003d \" \" + PREFIX_ROOM + VALID_ROOM_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"    public static final String HOUSE_DESC_AMY \u003d \" \" + PREFIX_HOUSE + VALID_HOUSE_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"    public static final String HOUSE_DESC_BOB \u003d \" \" + PREFIX_HOUSE + VALID_HOUSE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"    public static final String MATRIC_NUMBER_DESC_AMY \u003d \" \" + PREFIX_MATRIC_NUMBER + VALID_MATRIC_NUMBER_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"    public static final String MATRIC_NUMBER_DESC_BOB \u003d \" \" + PREFIX_MATRIC_NUMBER + VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"    public static final String INVALID_ROOM_DESC \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"            \" \" + PREFIX_ROOM + \"-1-00\"; // negative integers not allowed in rooms","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"alvinjiang1"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"A\"; //\u0027A\u0027 not allowed in gender","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"    public static final String INVALID_HOUSE_DESC \u003d \" \" + PREFIX_HOUSE + \"2\"; //\u00272\u0027 not allowed in house","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"    public static final String INVALID_MATRIC_NUMBER_DESC \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"            \" \" + PREFIX_MATRIC_NUMBER + \"a0000000u\"; //\u0027a\u0027 not allowed in matric numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"alvinjiang1"},"content":"    public static final ResidentDescriptor DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"alvinjiang1"},"content":"    public static final ResidentDescriptor DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"        DESC_AMY \u003d new ResidentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"alvinjiang1"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withRoom(VALID_ROOM_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"alvinjiang1"},"content":"                .withGender(VALID_GENDER_AMY).withHouse(VALID_HOUSE_AMY).withMatricNumber(VALID_MATRIC_NUMBER_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"        DESC_BOB \u003d new ResidentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"alvinjiang1"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withRoom(VALID_ROOM_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"alvinjiang1"},"content":"                .withGender(VALID_GENDER_BOB).withHouse(VALID_HOUSE_BOB).withMatricNumber(VALID_MATRIC_NUMBER_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"    public static void assertCommandSuccess(ModelCommand command, Model actualModel,","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"                                            CommandResult expectedCommandResult, Model expectedModel) {","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(ModelCommand, Model, CommandResult, Model)}","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"    public static void assertCommandSuccess(ModelCommand command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"jq1836"},"content":"     * - the address book, filtered resident list and selected resident in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"jq1836"},"content":"    public static void assertCommandFailure(ModelCommand command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"alvinjiang1"},"content":"        ResidentBook expectedResidentBook \u003d new ResidentBook(actualModel.getResidentBook());","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"alvinjiang1"},"content":"        List\u003cResident\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredResidentList());","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":135,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedResidentBook, actualModel.getResidentBook());","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"jq1836"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredResidentList());","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"jq1836"},"content":"     * Updates {@code model}\u0027s filtered list to show only the resident at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"jq1836"},"content":"     * {@code model}\u0027s resident book.","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"alvinjiang1"},"content":"    public static void showResidentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"jq1836"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredResidentList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"alvinjiang1"},"content":"        Resident resident \u003d model.getFilteredResidentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"alvinjiang1"},"content":"        final String[] splitName \u003d resident.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"jq1836"},"content":"        model.updateFilteredResidentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"jq1836"},"content":"        assertEquals(1, model.getFilteredResidentList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jq1836":31,"nseah21":4,"alvinjiang1":33,"-":84}},{"path":"src/test/java/seedu/rc4hdb/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"nseah21":1,"-":149}},{"path":"src/test/java/seedu/rc4hdb/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nareus"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.HOUSE_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_HOUSE_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_MATRIC_NUMBER_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_ROOM_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.ROOM_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_HOUSE_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_MATRIC_NUMBER_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_ROOM_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"nareus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.FilterCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.parser.commandparsers.FilterCommandParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.testutil.ResidentDescriptorBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"nareus"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"nareus"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"nareus"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"nareus"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"nareus"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"nareus"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"nareus"},"content":"        // no field specified","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, \"filter\", FilterCommand.MESSAGE_NOT_FILTERED);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"nareus"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"nareus"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, \"something else\", FilterCommand.MESSAGE_NOT_FILTERED);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"nareus"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, \"l/ string\", FilterCommand.MESSAGE_NOT_FILTERED);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"nareus"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, INVALID_MATRIC_NUMBER_DESC,","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"nareus"},"content":"                MatricNumber.MESSAGE_CONSTRAINTS); // invalid matric number","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, INVALID_HOUSE_DESC, House.MESSAGE_CONSTRAINTS); // invalid house","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, INVALID_GENDER_DESC, Gender.MESSAGE_CONSTRAINTS); // invalid gender","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, INVALID_ROOM_DESC, Room.MESSAGE_CONSTRAINTS); // invalid room","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"nareus"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"nareus"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"nareus"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"nareus"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Resident} being Filtered,","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"nareus"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"nareus"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"nareus"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"nareus"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"nareus"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"nareus"},"content":"        String userInput \u003d PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + HOUSE_DESC_AMY","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"nareus"},"content":"                + ROOM_DESC_AMY + GENDER_DESC_AMY + MATRIC_NUMBER_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"nareus"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withRoom(VALID_ROOM_AMY)","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"nareus"},"content":"                .withGender(VALID_GENDER_AMY).withHouse(VALID_HOUSE_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"nareus"},"content":"                .withMatricNumber(VALID_MATRIC_NUMBER_AMY).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"nareus"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"nareus"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"nareus"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"nareus"},"content":"        String userInput \u003d PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"nareus"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"nareus"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"nareus"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"nareus"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"nareus":128}},{"path":"src/test/java/seedu/rc4hdb/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"nseah21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.ListCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.commandparsers.ListCommandParser;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.resident.fields.ResidentFields;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"nseah21"},"content":"    private List\u003cString\u003e emptyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"nseah21"},"content":"    private List\u003cString\u003e listOfAllFields \u003d ResidentFields.FIELDS.stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"nseah21"},"content":"            .map(String::toLowerCase).collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"nseah21"},"content":"    public void parse_incorrectSpecifier_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"        assertParseFailure(parser, \"/gg dot com\", ListCommandParser.INTENDED_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"nseah21"},"content":"    public void parse_verboseSpecifier_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"nseah21"},"content":"        assertParseFailure(parser, \"/include name phone\", ListCommandParser.INTENDED_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"nseah21"},"content":"    public void parse_withoutSpecifier_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"nseah21"},"content":"        assertParseFailure(parser, \"name email phone\", ListCommandParser.INTENDED_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"nseah21"},"content":"    public void parse_emptyArgs_returnsListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"nseah21"},"content":"        ListCommand expectedListCommand \u003d new ListCommand(emptyList);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"nseah21"},"content":"        assertParseSuccess(parser, \"\", expectedListCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"nseah21"},"content":"    public void parse_includeNoFields_returnsListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"nseah21"},"content":"        ListCommand expectedListCommand \u003d new ListCommand(listOfAllFields);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"nseah21"},"content":"        assertParseSuccess(parser, \"/i\", expectedListCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"nseah21"},"content":"    public void parse_excludeNoFields_returnsListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"        ListCommand expectedListCommand \u003d new ListCommand(emptyList);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"nseah21"},"content":"        assertParseSuccess(parser, \"/e\", expectedListCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"nseah21"},"content":"    public void parse_includeNonExistentField_returnsListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"nseah21"},"content":"        ListCommand expectedListCommand \u003d new ListCommand(List.of(\"index\", \"phone\", \"email\", \"tags\", \"room\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"nseah21"},"content":"        assertParseSuccess(parser, \"/i name matric gender house weight\", expectedListCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"nseah21"},"content":"    public void parse_includeDuplicateFields_returnsListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"nseah21"},"content":"        ListCommand expectedListCommand \u003d new ListCommand(List.of(\"index\", \"phone\", \"email\", \"tags\", \"room\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"nseah21"},"content":"        assertParseSuccess(parser, \"/i name matric gender house name\", expectedListCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"nseah21"},"content":"    public void parse_excludeNonExistentField_returnsListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"nseah21"},"content":"        ListCommand expectedListCommand \u003d new ListCommand(List.of(\"name\", \"matric\", \"gender\", \"house\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"nseah21"},"content":"        assertParseSuccess(parser, \"/e name matric gender house weight\", expectedListCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"nseah21"},"content":"    public void parse_excludeDuplicateFields_returnsListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"nseah21"},"content":"        ListCommand expectedListCommand \u003d new ListCommand(List.of(\"name\", \"matric\", \"gender\", \"house\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"nseah21"},"content":"        assertParseSuccess(parser, \"/e name matric gender house weight\", expectedListCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"nseah21"},"content":"    public void parse_includeValidArgs_returnsListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"nseah21"},"content":"        ListCommand expectedListCommand \u003d new ListCommand(List.of(\"index\", \"gender\", \"tags\", \"email\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"nseah21"},"content":"        assertParseSuccess(parser, \"/i name phone room matric house\", expectedListCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"nseah21"},"content":"    public void parse_excludeValidArgs_returnsListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"nseah21"},"content":"        ListCommand expectedListCommand \u003d new ListCommand(List.of(\"name\", \"phone\", \"room\", \"matric\", \"house\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"nseah21"},"content":"        assertParseSuccess(parser, \"/e name phone room matric house\", expectedListCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"nseah21"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"nseah21"},"content":"    public void parse_argsWithUppercaseLetters_returnsListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"nseah21"},"content":"        ListCommand expectedListCommand \u003d new ListCommand(List.of(\"room\", \"matric\", \"house\", \"gender\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"nseah21"},"content":"        assertParseSuccess(parser, \"/i nAmE pHoNe eMaIl tAgS iNdEx\", expectedListCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"nseah21"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"nseah21"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"nseah21":96}},{"path":"src/test/java/seedu/rc4hdb/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_FIRST_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"    private static final String INVALID_ROOM \u003d \"0-0\";","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    private static final String INVALID_GENDER \u003d \"NB\";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"    private static final String INVALID_HOUSE \u003d \"Z\";","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"    private static final String INVALID_MATRIC_NUMBER \u003d \"B0000000U\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"    private static final String VALID_PHONE \u003d \"91234567\";","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"    private static final String VALID_ROOM \u003d \"03-05\";","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"    private static final String VALID_GENDER \u003d \"F\";","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"    private static final String VALID_HOUSE \u003d \"A\";","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"    private static final String VALID_MATRIC_NUMBER \u003d \"A0000000U\";","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(INDEX_FIRST_RESIDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(INDEX_FIRST_RESIDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"alvinjiang1"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"alvinjiang1"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"alvinjiang1"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"alvinjiang1"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"alvinjiang1"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"alvinjiang1"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"alvinjiang1"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"alvinjiang1"},"content":"    public void parseRoom_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRoom((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"alvinjiang1"},"content":"    public void parseRoom_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRoom(INVALID_ROOM));","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"alvinjiang1"},"content":"    public void parseRoom_validValueWithoutWhitespace_returnsRoom() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"alvinjiang1"},"content":"        Room expectedRoom \u003d new Room(VALID_ROOM);","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedRoom, ParserUtil.parseRoom(VALID_ROOM));","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"alvinjiang1"},"content":"    public void parseRoom_validValueWithWhitespace_returnsTrimmedRoom() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"alvinjiang1"},"content":"        String roomWithWhitespace \u003d WHITESPACE + VALID_ROOM + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"alvinjiang1"},"content":"        Room expectedRoom \u003d new Room(VALID_ROOM);","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedRoom, ParserUtil.parseRoom(roomWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"alvinjiang1"},"content":"    public void parseGender_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGender((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"alvinjiang1"},"content":"    public void parseGender_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGender(INVALID_GENDER));","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"alvinjiang1"},"content":"    public void parseGender_validValueWithoutWhitespace_returnsGender() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"alvinjiang1"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(VALID_GENDER));","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"alvinjiang1"},"content":"    public void parseGender_validValueWithWhitespace_returnsTrimmedGender() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"alvinjiang1"},"content":"        String genderWithWhitespace \u003d WHITESPACE + VALID_GENDER + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"alvinjiang1"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(genderWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"alvinjiang1"},"content":"    public void parseHouse_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseHouse((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"alvinjiang1"},"content":"    public void parseHouse_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseHouse(INVALID_HOUSE));","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"alvinjiang1"},"content":"    public void parseHouse_validValueWithoutWhitespace_returnsHouse() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"alvinjiang1"},"content":"        House expectedHouse \u003d new House(VALID_HOUSE);","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedHouse, ParserUtil.parseHouse(VALID_HOUSE));","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"alvinjiang1"},"content":"    public void parseHouse_validValueWithWhitespace_returnsTrimmedHouse() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"alvinjiang1"},"content":"        String houseWithWhitespace \u003d WHITESPACE + VALID_HOUSE + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"alvinjiang1"},"content":"        House expectedHouse \u003d new House(VALID_HOUSE);","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedHouse, ParserUtil.parseHouse(houseWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"alvinjiang1"},"content":"    public void parseMatricNumber_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMatricNumber((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"alvinjiang1"},"content":"    public void parseMatricNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"alvinjiang1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMatricNumber(INVALID_MATRIC_NUMBER));","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"alvinjiang1"},"content":"    public void parseMatricNumber_validValueWithoutWhitespace_returnsMatricNumber() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"alvinjiang1"},"content":"        MatricNumber expectedMatricNumber \u003d new MatricNumber(VALID_MATRIC_NUMBER);","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedMatricNumber, ParserUtil.parseMatricNumber(VALID_MATRIC_NUMBER));","lastModifiedDate":"2022-10-10"},{"lineNumber":220,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":221,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"alvinjiang1"},"content":"    public void parseMatricNumber_validValueWithWhitespace_returnsTrimmedMatricNumber() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":224,"author":{"gitId":"alvinjiang1"},"content":"        String matricNumberWithWhitespace \u003d WHITESPACE + VALID_MATRIC_NUMBER + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":225,"author":{"gitId":"alvinjiang1"},"content":"        MatricNumber expectedMatricNumber \u003d new MatricNumber(VALID_MATRIC_NUMBER);","lastModifiedDate":"2022-10-10"},{"lineNumber":226,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(expectedMatricNumber, ParserUtil.parseMatricNumber(matricNumberWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jq1836":3,"nseah21":5,"alvinjiang1":107,"-":159}},{"path":"src/test/java/seedu/rc4hdb/logic/parser/ResidentBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"nareus"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_FIRST_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.misccommands.ExitCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.misccommands.HelpCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.AddCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.ClearCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.DeleteCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.EditCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"nareus"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.FilterCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.FindCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.ListCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.commandparsers.ListCommandParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.testutil.ResidentBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.testutil.ResidentDescriptorBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.testutil.ResidentUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"public class ResidentBookParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"    private final ResidentBookParser parser \u003d new ResidentBookParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"        Resident resident \u003d new ResidentBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ResidentUtil.getAddCommand(resident));","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(new AddCommand(resident), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_RESIDENT.getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_RESIDENT), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"        Resident resident \u003d new ResidentBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder(resident).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"                + INDEX_FIRST_RESIDENT.getOneBased() + \" \" + ResidentUtil.getResidentDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_RESIDENT, descriptor), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"nseah21"},"content":"        assertThrows(ParseException.class, String.format(ListCommandParser.INTENDED_USAGE), ()","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"nseah21"},"content":"                -\u003e parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"nareus"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"nareus"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"nareus"},"content":"        assertTrue(parser.parseCommand(FilterCommand.COMMAND_WORD + NAME_DESC_AMY) instanceof FilterCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"nareus"},"content":"        Resident resident \u003d new ResidentBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"nareus"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder(resident).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"nareus"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(FilterCommand.COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"nareus"},"content":"                + \" \" + ResidentUtil.getResidentDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"nareus"},"content":"        assertEquals(new FilterCommand(descriptor), command);","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jq1836":11,"nseah21":8,"nareus":12,"alvinjiang1":15,"-":69}},{"path":"src/test/java/seedu/rc4hdb/logic/parser/commandparsers/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"nseah21"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.HOUSE_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.HOUSE_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_HOUSE_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_MATRIC_NUMBER_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_ROOM_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.MATRIC_NUMBER_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.ROOM_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.ROOM_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_HOUSE_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.AddCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.testutil.ResidentBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"        Resident expectedResident \u003d new ResidentBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"                + ROOM_DESC_BOB + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"                new AddCommand(expectedResident));","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"                + ROOM_DESC_BOB + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"                new AddCommand(expectedResident));","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"                + ROOM_DESC_BOB + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"                new AddCommand(expectedResident));","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"                + ROOM_DESC_BOB + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"                new AddCommand(expectedResident));","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"alvinjiang1"},"content":"        // multiple rooms - last room accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"alvinjiang1"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"                + ROOM_DESC_BOB + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"                new AddCommand(expectedResident));","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"        // multiple gender - last gender accepted","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"alvinjiang1"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"                + GENDER_DESC_AMY + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"                new AddCommand(expectedResident));","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"        // multiple houses - last house accepted","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"alvinjiang1"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"                + GENDER_DESC_BOB + HOUSE_DESC_AMY + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"                new AddCommand(expectedResident));","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"        // multiple matric numbers - last matric number accepted","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"alvinjiang1"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"                + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_AMY + MATRIC_NUMBER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"                new AddCommand(expectedResident));","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"alvinjiang1"},"content":"        Resident expectedResidentMultipleTags \u003d new ResidentBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":108,"author":{"gitId":"alvinjiang1"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"jq1836"},"content":"                + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"                new AddCommand(expectedResidentMultipleTags));","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"alvinjiang1"},"content":"        Resident expectedResident \u003d new ResidentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"alvinjiang1"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ROOM_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"alvinjiang1"},"content":"                + GENDER_DESC_AMY + HOUSE_DESC_AMY + MATRIC_NUMBER_DESC_AMY,","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"alvinjiang1"},"content":"                new AddCommand(expectedResident));","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"alvinjiang1"},"content":"                        + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"alvinjiang1"},"content":"                        + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"alvinjiang1"},"content":"                        + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"alvinjiang1"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"alvinjiang1"},"content":"        // missing room prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ROOM_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"alvinjiang1"},"content":"                        + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"alvinjiang1"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"alvinjiang1"},"content":"        // missing gender prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"alvinjiang1"},"content":"                        + VALID_GENDER_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"alvinjiang1"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"alvinjiang1"},"content":"        // missing house prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"alvinjiang1"},"content":"                        + GENDER_DESC_BOB + VALID_HOUSE_BOB + MATRIC_NUMBER_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"alvinjiang1"},"content":"        // missing matric number prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"alvinjiang1"},"content":"                        + GENDER_DESC_BOB + HOUSE_DESC_BOB + VALID_MATRIC_NUMBER_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ROOM_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"alvinjiang1"},"content":"                + VALID_GENDER_BOB + VALID_HOUSE_BOB + VALID_MATRIC_NUMBER_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"alvinjiang1"},"content":"                + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"alvinjiang1"},"content":"                + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"alvinjiang1"},"content":"                + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"alvinjiang1"},"content":"        // invalid room","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ROOM_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"alvinjiang1"},"content":"                + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"alvinjiang1"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Room.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"alvinjiang1"},"content":"        // invalid gender","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"alvinjiang1"},"content":"                + INVALID_GENDER_DESC + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"jq1836"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"alvinjiang1"},"content":"        // invalid house","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"alvinjiang1"},"content":"                + GENDER_DESC_BOB + INVALID_HOUSE_DESC + MATRIC_NUMBER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"jq1836"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, House.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"alvinjiang1"},"content":"        // invalid matric number","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"alvinjiang1"},"content":"                + GENDER_DESC_BOB + HOUSE_DESC_BOB + INVALID_MATRIC_NUMBER_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"jq1836"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, MatricNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"alvinjiang1"},"content":"                + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"alvinjiang1"},"content":"                        + GENDER_DESC_BOB + HOUSE_DESC_BOB + INVALID_MATRIC_NUMBER_DESC,","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":217,"author":{"gitId":"jq1836"},"content":"                        + ROOM_DESC_BOB + GENDER_DESC_BOB + HOUSE_DESC_BOB + MATRIC_NUMBER_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"jq1836"},"content":"                        + TAG_DESC_FRIEND, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jq1836":71,"nseah21":3,"alvinjiang1":73,"-":73}},{"path":"src/test/java/seedu/rc4hdb/logic/parser/commandparsers/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.commands.Command;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.parser.Parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"jq1836":2,"nseah21":2,"-":36}},{"path":"src/test/java/seedu/rc4hdb/logic/parser/commandparsers/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_FIRST_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.DeleteCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_RESIDENT));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jq1836":4,"nseah21":1,"alvinjiang1":2,"-":25}},{"path":"src/test/java/seedu/rc4hdb/logic/parser/commandparsers/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.HOUSE_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_ROOM_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.ROOM_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.ROOM_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_HOUSE_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_MATRIC_NUMBER_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_ROOM_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_FIRST_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_SECOND_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.testutil.TypicalIndexes.INDEX_THIRD_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.EditCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.testutil.ResidentDescriptorBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROOM_DESC, Room.MESSAGE_CONSTRAINTS); // invalid room","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"alvinjiang1"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Resident} being edited,","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"alvinjiang1"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ROOM_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"alvinjiang1"},"content":"        Index targetIndex \u003d INDEX_SECOND_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":120,"author":{"gitId":"alvinjiang1"},"content":"                + EMAIL_DESC_AMY + ROOM_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"alvinjiang1"},"content":"                + GENDER_DESC_BOB + HOUSE_DESC_AMY + MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"alvinjiang1"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withRoom(VALID_ROOM_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"alvinjiang1"},"content":"                .withGender(VALID_GENDER_BOB).withHouse(VALID_HOUSE_AMY).withMatricNumber(VALID_MATRIC_NUMBER_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"alvinjiang1"},"content":"        Index targetIndex \u003d INDEX_FIRST_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"alvinjiang1"},"content":"        Index targetIndex \u003d INDEX_THIRD_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"jq1836"},"content":"        descriptor \u003d new ResidentDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"jq1836"},"content":"        descriptor \u003d new ResidentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"alvinjiang1"},"content":"        // room","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"alvinjiang1"},"content":"        userInput \u003d targetIndex.getOneBased() + ROOM_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"alvinjiang1"},"content":"        descriptor \u003d new ResidentDescriptorBuilder().withRoom(VALID_ROOM_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"alvinjiang1"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"alvinjiang1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"alvinjiang1"},"content":"        // gender","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"alvinjiang1"},"content":"        userInput \u003d targetIndex.getOneBased() + GENDER_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"jq1836"},"content":"        descriptor \u003d new ResidentDescriptorBuilder().withGender(VALID_GENDER_AMY).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"alvinjiang1"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"alvinjiang1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"alvinjiang1"},"content":"        // house","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"alvinjiang1"},"content":"        userInput \u003d targetIndex.getOneBased() + HOUSE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"jq1836"},"content":"        descriptor \u003d new ResidentDescriptorBuilder().withHouse(VALID_HOUSE_AMY).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"alvinjiang1"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"alvinjiang1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"alvinjiang1"},"content":"        // matric number","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"alvinjiang1"},"content":"        userInput \u003d targetIndex.getOneBased() + MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"jq1836"},"content":"        descriptor \u003d new ResidentDescriptorBuilder().withMatricNumber(VALID_MATRIC_NUMBER_AMY).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"jq1836"},"content":"        descriptor \u003d new ResidentDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":198,"author":{"gitId":"alvinjiang1"},"content":"        Index targetIndex \u003d INDEX_FIRST_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"alvinjiang1"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ROOM_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"alvinjiang1"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ROOM_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"alvinjiang1"},"content":"                + PHONE_DESC_BOB + ROOM_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"alvinjiang1"},"content":"                .withEmail(VALID_EMAIL_BOB).withRoom(VALID_ROOM_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"alvinjiang1"},"content":"        Index targetIndex \u003d INDEX_FIRST_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":216,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"alvinjiang1"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ROOM_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":223,"author":{"gitId":"jq1836"},"content":"        descriptor \u003d new ResidentDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"alvinjiang1"},"content":"                .withRoom(VALID_ROOM_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":231,"author":{"gitId":"alvinjiang1"},"content":"        Index targetIndex \u003d INDEX_THIRD_RESIDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"alvinjiang1"},"content":"        ResidentDescriptor descriptor \u003d new ResidentDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jq1836":47,"nseah21":4,"alvinjiang1":47,"-":141}},{"path":"src/test/java/seedu/rc4hdb/logic/parser/commandparsers/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.logic.parser.commandparsers;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.commandparsers.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.FindCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jq1836":5,"nseah21":1,"-":28}},{"path":"src/test/java/seedu/rc4hdb/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.model.Model.PREDICATE_SHOW_ALL_RESIDENTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.ALICE;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.BENSON;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.testutil.ResidentBookBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"        assertEquals(new ResidentBook(), new ResidentBook(modelManager.getResidentBook()));","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"        userPrefs.setResidentBookFilePath(Paths.get(\"rc4hdb/book/file/path\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        userPrefs.setResidentBookFilePath(Paths.get(\"new/rc4hdb/book/file/path\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"    public void setResidentBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setResidentBookFilePath(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"    public void setResidentBookFilePath_validPath_setsResidentBookFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"        Path path \u003d Paths.get(\"rc4hdb/book/file/path\");","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"        modelManager.setResidentBookFilePath(path);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        assertEquals(path, modelManager.getResidentBookFilePath());","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"    public void hasResident_nullResident_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasResident(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"    public void hasResident_residentNotInResidentBook_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"        assertFalse(modelManager.hasResident(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"    public void hasResident_residentInResidentBook_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"        modelManager.addResident(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"        assertTrue(modelManager.hasResident(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"    public void getFilteredResidentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredResidentList().remove(0));","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"        ResidentBook residentBook \u003d new ResidentBookBuilder().withResident(ALICE).withResident(BENSON).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"        ResidentBook differentResidentBook \u003d new ResidentBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"        modelManager \u003d new ModelManager(residentBook, userPrefs);","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(residentBook, userPrefs);","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"        // different residentBook -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"jq1836"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentResidentBook, userPrefs)));","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"jq1836"},"content":"        modelManager.updateFilteredResidentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"jq1836"},"content":"        assertFalse(modelManager.equals(new ModelManager(residentBook, userPrefs)));","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"jq1836"},"content":"        modelManager.updateFilteredResidentList(PREDICATE_SHOW_ALL_RESIDENTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"jq1836"},"content":"        differentUserPrefs.setResidentBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"jq1836"},"content":"        assertFalse(modelManager.equals(new ModelManager(residentBook, differentUserPrefs)));","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jq1836":34,"nseah21":3,"-":95}},{"path":"src/test/java/seedu/rc4hdb/model/ResidentBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.ALICE;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.exceptions.DuplicateResidentException;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.testutil.ResidentBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"public class ResidentBookTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    private final ResidentBook residentBook \u003d new ResidentBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"        assertEquals(Collections.emptyList(), residentBook.getResidentList());","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e residentBook.resetData(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"    public void resetData_withValidReadOnlyResidentBook_replacesData() {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"        ResidentBook newData \u003d getTypicalResidentBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"        residentBook.resetData(newData);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        assertEquals(newData, residentBook);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"    public void resetData_withDuplicateResidents_throwsDuplicateResidentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"        // Two residents with the same identity fields","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"        Resident editedAlice \u003d new ResidentBuilder(ALICE).withRoom(VALID_ROOM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"                .build();","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"        List\u003cResident\u003e newResidents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"        ResidentBookStub newData \u003d new ResidentBookStub(newResidents);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"        assertThrows(DuplicateResidentException.class, () -\u003e residentBook.resetData(newData));","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"    public void hasResident_nullResident_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e residentBook.hasResident(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"    public void hasResident_residentNotInResidentBook_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"        assertFalse(residentBook.hasResident(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"    public void hasResident_residentInResidentBook_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"        residentBook.addResident(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"        assertTrue(residentBook.hasResident(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"    public void hasResident_residentWithSameIdentityFieldsInResidentBook_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"        residentBook.addResident(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"        Resident editedAlice \u003d new ResidentBuilder(ALICE).withRoom(VALID_ROOM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"                .build();","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        assertTrue(residentBook.hasResident(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"    public void getResidentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e residentBook.getResidentList().remove(0));","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"     * A stub ReadOnlyResidentBook whose residents list can violate interface constraints.","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"    private static class ResidentBookStub implements ReadOnlyResidentBook {","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"        private final ObservableList\u003cResident\u003e residents \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"        ResidentBookStub(Collection\u003cResident\u003e residents) {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"            this.residents.setAll(residents);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"        public ObservableList\u003cResident\u003e getResidentList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"            return residents;","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":101}},{"path":"src/test/java/seedu/rc4hdb/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setResidentBookFilePath(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jq1836":1,"nseah21":2,"-":18}},{"path":"src/test/java/seedu/rc4hdb/model/resident/ResidentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_HOUSE_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.testutil.ResidentDescriptorBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"public class ResidentDescriptorTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"    // More tests here please","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        ResidentDescriptor descriptorWithSameValues \u003d new ResidentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        ResidentDescriptor editedAmy \u003d new ResidentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        editedAmy \u003d new ResidentDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"        editedAmy \u003d new ResidentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"        // different room -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"        editedAmy \u003d new ResidentDescriptorBuilder(DESC_AMY).withRoom(VALID_ROOM_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        editedAmy \u003d new ResidentDescriptorBuilder(DESC_AMY).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"        // different house -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"        editedAmy \u003d new ResidentDescriptorBuilder(DESC_AMY).withHouse(VALID_HOUSE_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        // different matric number -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"        editedAmy \u003d new ResidentDescriptorBuilder(DESC_AMY).withMatricNumber(VALID_MATRIC_NUMBER_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"        editedAmy \u003d new ResidentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":75}},{"path":"src/test/java/seedu/rc4hdb/model/resident/ResidentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_HOUSE_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.ALICE;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.testutil.ResidentBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"public class ResidentTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"        Resident person \u003d new ResidentBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    public void isSameResident() {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"        assertTrue(ALICE.isSameResident(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.isSameResident(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        Resident editedAlice \u003d new ResidentBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"                .withRoom(VALID_ROOM_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"        assertTrue(ALICE.isSameResident(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        editedAlice \u003d new ResidentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.isSameResident(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        Resident editedBob \u003d new ResidentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"        assertFalse(BOB.isSameResident(editedBob));","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"        editedBob \u003d new ResidentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"        assertFalse(BOB.isSameResident(editedBob));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        Resident aliceCopy \u003d new ResidentBuilder(ALICE).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"        Resident editedAlice \u003d new ResidentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"        editedAlice \u003d new ResidentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"        editedAlice \u003d new ResidentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"        // different room -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"        editedAlice \u003d new ResidentBuilder(ALICE).withRoom(VALID_ROOM_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"        editedAlice \u003d new ResidentBuilder(ALICE).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"        // different house -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"        editedAlice \u003d new ResidentBuilder(ALICE).withHouse(VALID_HOUSE_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"        // different matricNumber -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"        editedAlice \u003d new ResidentBuilder(ALICE).withMatricNumber(VALID_MATRIC_NUMBER_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"        editedAlice \u003d new ResidentBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":107}},{"path":"src/test/java/seedu/rc4hdb/model/resident/UniqueResidentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.ALICE;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.exceptions.DuplicateResidentException;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.exceptions.ResidentNotFoundException;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.testutil.ResidentBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"public class UniqueResidentListTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    private final UniqueResidentList uniqueResidentList \u003d new UniqueResidentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    public void contains_nullResident_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidentList.contains(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"    public void contains_residentNotInList_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"        assertFalse(uniqueResidentList.contains(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"    public void contains_residentInList_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"        assertTrue(uniqueResidentList.contains(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"    public void contains_residentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"        Resident editedAlice \u003d new ResidentBuilder(ALICE).withRoom(VALID_ROOM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"                .build();","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        assertTrue(uniqueResidentList.contains(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"    public void add_nullResident_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidentList.add(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"    public void add_duplicateResident_throwsDuplicateResidentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"        assertThrows(DuplicateResidentException.class, () -\u003e uniqueResidentList.add(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"    public void setResident_nullTargetResident_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidentList.setResident(null, ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"    public void setResident_nullEditedResident_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidentList.setResident(ALICE, null));","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"    public void setResident_targetResidentNotInList_throwsResidentNotFoundException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"        assertThrows(ResidentNotFoundException.class, () -\u003e uniqueResidentList.setResident(ALICE, ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"    public void setResident_editedResidentIsSameResident_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.setResident(ALICE, ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"        UniqueResidentList expectedUniqueResidentList \u003d new UniqueResidentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"        expectedUniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"        assertEquals(expectedUniqueResidentList, uniqueResidentList);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"    public void setResident_editedResidentHasSameIdentity_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"        Resident editedAlice \u003d new ResidentBuilder(ALICE).withRoom(VALID_ROOM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"                .build();","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.setResident(ALICE, editedAlice);","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"        UniqueResidentList expectedUniqueResidentList \u003d new UniqueResidentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"        expectedUniqueResidentList.add(editedAlice);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"        assertEquals(expectedUniqueResidentList, uniqueResidentList);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"    public void setResident_editedResidentHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.setResident(ALICE, BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"        UniqueResidentList expectedUniqueResidentList \u003d new UniqueResidentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"        expectedUniqueResidentList.add(BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"        assertEquals(expectedUniqueResidentList, uniqueResidentList);","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"    public void setResident_editedResidentHasNonUniqueIdentity_throwsDuplicateResidentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"jq1836"},"content":"        assertThrows(DuplicateResidentException.class, () -\u003e uniqueResidentList.setResident(ALICE, BOB));","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"    public void remove_nullResident_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidentList.remove(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"jq1836"},"content":"    public void remove_residentDoesNotExist_throwsResidentNotFoundException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"jq1836"},"content":"        assertThrows(ResidentNotFoundException.class, () -\u003e uniqueResidentList.remove(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"jq1836"},"content":"    public void remove_existingResident_removesResident() {","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.remove(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"jq1836"},"content":"        UniqueResidentList expectedUniqueResidentList \u003d new UniqueResidentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"jq1836"},"content":"        assertEquals(expectedUniqueResidentList, uniqueResidentList);","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"jq1836"},"content":"    public void setResidents_nullUniqueResidentList_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidentList.setResidents((UniqueResidentList) null));","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"jq1836"},"content":"    public void setResidents_uniqueResidentList_replacesOwnListWithProvidedUniqueResidentList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"jq1836"},"content":"        UniqueResidentList expectedUniqueResidentList \u003d new UniqueResidentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"jq1836"},"content":"        expectedUniqueResidentList.add(BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.setResidents(expectedUniqueResidentList);","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"jq1836"},"content":"        assertEquals(expectedUniqueResidentList, uniqueResidentList);","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"jq1836"},"content":"    public void setResidents_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidentList.setResidents((List\u003cResident\u003e) null));","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"jq1836"},"content":"    public void setResidents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.add(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"jq1836"},"content":"        List\u003cResident\u003e residentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"jq1836"},"content":"        uniqueResidentList.setResidents(residentList);","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"jq1836"},"content":"        UniqueResidentList expectedUniqueResidentList \u003d new UniqueResidentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"jq1836"},"content":"        expectedUniqueResidentList.add(BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"jq1836"},"content":"        assertEquals(expectedUniqueResidentList, uniqueResidentList);","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"jq1836"},"content":"    public void setResidents_listWithDuplicateResidents_throwsDuplicateResidentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"jq1836"},"content":"        List\u003cResident\u003e listWithDuplicateResidents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"jq1836"},"content":"        assertThrows(DuplicateResidentException.class, () -\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"jq1836"},"content":"                uniqueResidentList.setResidents(listWithDuplicateResidents));","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"jq1836"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"jq1836"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"jq1836"},"content":"                -\u003e uniqueResidentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":172}},{"path":"src/test/java/seedu/rc4hdb/model/resident/fields/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jq1836":1,"nseah21":1,"-":66}},{"path":"src/test/java/seedu/rc4hdb/model/resident/fields/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"public class GenderTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"        String invalidGender \u003d \"m\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"    public void isValidGender() {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"        // null gender","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        // invalid gender","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"        assertFalse(Gender.isValidGender(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"        assertFalse(Gender.isValidGender(\"M*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"        assertFalse(Gender.isValidGender(\"m\")); // no lowercase character","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"        assertFalse(Gender.isValidGender(\"a\")); // only F or M","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"        // valid gender","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        assertTrue(Gender.isValidGender(\"M\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        assertTrue(Gender.isValidGender(\"F\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":40}},{"path":"src/test/java/seedu/rc4hdb/model/resident/fields/HouseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"public class HouseTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e new House(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"    public void constructor_invalidHouse_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"        String invalidHouse \u003d \"a\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new House(invalidHouse));","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"    public void isValidHouse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"        // null house","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e House.isValidHouse(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        // invalid house","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"        assertFalse(House.isValidHouse(\"\")); // empty string","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"        assertFalse(House.isValidHouse(\" \")); // spaces only","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"        assertFalse(House.isValidHouse(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"        assertFalse(House.isValidHouse(\"D*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"        assertFalse(House.isValidHouse(\"d\")); // no lowercase character","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"        assertFalse(House.isValidHouse(\"f\")); // only D, U, L, A or N","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"        // valid house","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        assertTrue(House.isValidHouse(\"D\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        assertTrue(House.isValidHouse(\"U\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        assertTrue(House.isValidHouse(\"L\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"        assertTrue(House.isValidHouse(\"A\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"        assertTrue(House.isValidHouse(\"N\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":43}},{"path":"src/test/java/seedu/rc4hdb/model/resident/fields/MatricNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"public class MatricNumberTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MatricNumber(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"    public void constructor_invalidMatricNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"        String invalidMatricNumber \u003d \"a0123456a\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidMatricNumber));","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"    public void isValidMatricNumber() {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"        // null matricNumber","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e MatricNumber.isValidMatricNumber(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        // blank matricNumber","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"\")); // empty string","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\" \")); // spaces only","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"        // wrong format","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"a0123456A\")); // first letter not uppercase","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"B0123456A\")); // first letter not A","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"!0123456A\")); // first letter not alphabet","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"A0123456a\")); // last letter not uppercase","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"A0123456~\")); // last letter not alphabet","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"A012345-1B\")); // negative number","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"A012345~B\")); // non-numerical character in middle","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"A01234567A\")); // more than 7 non-negative integers","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"A012345A\")); // less than 7 non-negative integers","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"        // valid matricNumber","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        assertTrue(MatricNumber.isValidMatricNumber(\"A0123456A\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"        assertTrue(MatricNumber.isValidMatricNumber(\"A0123456B\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"        assertTrue(MatricNumber.isValidMatricNumber(\"A1234567A\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"        assertTrue(MatricNumber.isValidMatricNumber(\"A1234567B\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        assertTrue(MatricNumber.isValidMatricNumber(\"A4657123Z\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":50}},{"path":"src/test/java/seedu/rc4hdb/model/resident/fields/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jq1836":1,"nseah21":1,"-":38}},{"path":"src/test/java/seedu/rc4hdb/model/resident/fields/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"        assertFalse(Phone.isValidPhone(\"2478052581531431234\")); // long phone numbers","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        assertTrue(Phone.isValidPhone(\"12429384\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jq1836":3,"nseah21":1,"-":35}},{"path":"src/test/java/seedu/rc4hdb/model/resident/fields/RoomTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.fields;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"public class RoomTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Room(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"    public void constructor_invalidRoom_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"        String invalidRoom \u003d \"01_10\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Room(invalidRoom));","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"    public void isValidRoom() {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"        // null room","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e Room.isValidRoom(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        // invalid room","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\"\")); // empty string","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\" \")); // spaces only","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\"m\")); // no alphabet","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\"1-0\")); // unit is zero","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\"0-1\")); // floor is zero","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\"0-0\")); // both floor and unit are zero","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\"-5-1\")); // negative floor number","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\"3--5\")); // negative unit number","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\"3a1-3\")); // non-contiguous floor number","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        assertFalse(Room.isValidRoom(\"3-3a7\")); // non-contiguous unit number","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"        // valid room","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"        assertTrue(Room.isValidRoom(\"01-1\")); // with zero in front of floor number","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"        assertTrue(Room.isValidRoom(\"5-07\")); // with zero in front of unit number","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        assertTrue(Room.isValidRoom(\"03-01\")); // with zero in front of both floor and unit number","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"        assertTrue(Room.isValidRoom(\"1-7\")); // no zero in front of both floor and unit number","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"        assertTrue(Room.isValidRoom(\"10123561-1\")); // long floor number","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"        assertTrue(Room.isValidRoom(\"1-12357123\")); // long unit number","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        assertTrue(Room.isValidRoom(\"123561423-12351256\")); // long floor and unit number","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":50}},{"path":"src/test/java/seedu/rc4hdb/model/resident/predicates/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.model.resident.predicates;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.testutil.ResidentBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"        assertTrue(predicate.test(new ResidentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"        assertTrue(predicate.test(new ResidentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"        assertTrue(predicate.test(new ResidentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"        assertTrue(predicate.test(new ResidentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"nealetham"},"content":"        // Only one partial matching keyword","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"nealetham"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"rol\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"nealetham"},"content":"        assertTrue(predicate.test(new ResidentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"nealetham"},"content":"        // Mixed-case partial keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"nealetham"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Al\", \"rol\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"nealetham"},"content":"        assertTrue(predicate.test(new ResidentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        assertFalse(predicate.test(new ResidentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"        assertFalse(predicate.test(new ResidentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        // Keywords match all other fields, but does not match name","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"11-04\", \"F\", \"D\",","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"                \"A0431582U\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"        assertFalse(predicate.test(new ResidentBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"                .withEmail(\"alice@email.com\").withRoom(\"11-04\").withGender(\"F\").withHouse(\"D\")","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"                .withMatricNumber(\"A0431582U\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"nealetham"},"content":"        // Partial keywords that do not fully match","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"nealetham"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"role\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"nealetham"},"content":"        assertFalse(predicate.test(new ResidentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"nealetham"},"content":"        // Multiple partial keywords that do not fully match","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"nealetham"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"bAlic\", \"role\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"nealetham"},"content":"        assertFalse(predicate.test(new ResidentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jq1836":14,"nealetham":16,"-":63}},{"path":"src/test/java/seedu/rc4hdb/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.model.tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"nseah21":2,"-":24}},{"path":"src/test/java/seedu/rc4hdb/storage/JsonAdaptedResidentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.storage.JsonAdaptedResident.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.BENSON;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"public class JsonAdaptedResidentTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    private static final String INVALID_ROOM \u003d \"03_08\";","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"    private static final String INVALID_GENDER \u003d \"m\";","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"    private static final String INVALID_HOUSE \u003d \"d\";","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    private static final String INVALID_MATRIC_NUMBER \u003d \"a0123456a\";","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"    private static final String VALID_ROOM \u003d BENSON.getRoom().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"    private static final String VALID_HOUSE \u003d BENSON.getHouse().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"    private static final String VALID_MATRIC_NUMBER \u003d BENSON.getMatricNumber().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"    public void toModelType_validResidentDetails_returnsResident() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d new JsonAdaptedResident(BENSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"        assertEquals(BENSON, resident.toModelType());","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM, VALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d new JsonAdaptedResident(null, VALID_PHONE, VALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"                VALID_GENDER, VALID_HOUSE, VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ROOM, VALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, null, VALID_EMAIL, VALID_ROOM, VALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ROOM, VALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, null, VALID_ROOM, VALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"    public void toModelType_invalidRoom_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ROOM, VALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d Room.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"    public void toModelType_nullRoom_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Room.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"jq1836"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM, INVALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"jq1836"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM, null, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"jq1836"},"content":"    public void toModelType_invalidHouse_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM, VALID_GENDER, INVALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d House.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"jq1836"},"content":"    public void toModelType_nullHouse_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM, VALID_GENDER, null,","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, House.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"jq1836"},"content":"    public void toModelType_invalidMatricNumber_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM, VALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"jq1836"},"content":"                        INVALID_MATRIC_NUMBER, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d MatricNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"jq1836"},"content":"    public void toModelType_nullMatricNumber_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM, VALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"jq1836"},"content":"                        null, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"jq1836"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MatricNumber.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"jq1836"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"jq1836"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"jq1836"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"jq1836"},"content":"        JsonAdaptedResident resident \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"jq1836"},"content":"                new JsonAdaptedResident(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_GENDER, VALID_HOUSE,","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"jq1836"},"content":"                        VALID_MATRIC_NUMBER, invalidTags);","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, resident::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jq1836":184}},{"path":"src/test/java/seedu/rc4hdb/storage/JsonResidentBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.ALICE;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.HOON;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.IDA;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"public class JsonResidentBookStorageTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonResidentBookStorageTest\");","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    @TempDir","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    public void readResidentBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e readResidentBook(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    private Optional\u003cReadOnlyResidentBook\u003e readResidentBook(String filePath) throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"        return new JsonResidentBookStorage(Paths.get(filePath)).readResidentBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"                : null;","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"        assertFalse(readResidentBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"        assertThrows(DataConversionException.class, () -\u003e readResidentBook(\"notJsonFormatResidentBook.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"    public void readResidentBook_invalidResidentResidentBook_throwDataConversionException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jq1836"},"content":"        assertThrows(DataConversionException.class, () -\u003e readResidentBook(\"invalidResidentResidentBook.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"    public void readResidentBook_invalidAndValidResidentResidentBook_throwDataConversionException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"        assertThrows(DataConversionException.class, () -\u003e readResidentBook(\"invalidAndValidResidentResidentBook.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"    public void readAndSaveResidentBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"        Path filePath \u003d testFolder.resolve(\"TempResidentBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"        ResidentBook original \u003d getTypicalResidentBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"        JsonResidentBookStorage jsonResidentBookStorage \u003d new JsonResidentBookStorage(filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"        jsonResidentBookStorage.saveResidentBook(original, filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"        ReadOnlyResidentBook readBack \u003d jsonResidentBookStorage.readResidentBook(filePath).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jq1836"},"content":"        assertEquals(original, new ResidentBook(readBack));","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"jq1836"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"        original.addResident(HOON);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jq1836"},"content":"        original.removeResident(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"        jsonResidentBookStorage.saveResidentBook(original, filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jq1836"},"content":"        readBack \u003d jsonResidentBookStorage.readResidentBook(filePath).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"jq1836"},"content":"        assertEquals(original, new ResidentBook(readBack));","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"        original.addResident(IDA);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"        jsonResidentBookStorage.saveResidentBook(original); // file path not specified","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"        readBack \u003d jsonResidentBookStorage.readResidentBook().get(); // file path not specified","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"        assertEquals(original, new ResidentBook(readBack));","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"jq1836"},"content":"    public void saveResidentBook_nullResidentBook_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveResidentBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"     * Saves {@code residentBook} at the specified {@code filePath}.","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"    private void saveResidentBook(ReadOnlyResidentBook residentBook, String filePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"            new JsonResidentBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"                    .saveResidentBook(residentBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"jq1836"},"content":"    public void saveResidentBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"jq1836"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveResidentBook(new ResidentBook(), null));","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jq1836":111}},{"path":"src/test/java/seedu/rc4hdb/storage/JsonSerializableResidentBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.commons.util.JsonUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"public class JsonSerializableResidentBookTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableResidentBookTest\");","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"    private static final Path TYPICAL_RESIDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalResidentsResidentBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"    private static final Path INVALID_RESIDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidResidentResidentBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"    private static final Path DUPLICATE_RESIDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateResidentResidentBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"    public void toModelType_typicalResidentsFile_success() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"        JsonSerializableResidentBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_RESIDENTS_FILE,","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"                JsonSerializableResidentBook.class).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        ResidentBook residentBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"        ResidentBook typicalResidentsResidentBook \u003d getTypicalResidentBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"        assertEquals(residentBookFromFile, typicalResidentsResidentBook);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"    public void toModelType_invalidResidentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"        JsonSerializableResidentBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_RESIDENT_FILE,","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"                JsonSerializableResidentBook.class).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"    public void toModelType_duplicateResidents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"        JsonSerializableResidentBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_RESIDENT_FILE,","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"                JsonSerializableResidentBook.class).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableResidentBook.MESSAGE_DUPLICATE_RESIDENT,","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jq1836":47}},{"path":"src/test/java/seedu/rc4hdb/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"jq1836"},"content":"        userPrefs.setResidentBookFilePath(Paths.get(\"rc4hdb.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jq1836":1,"nseah21":5,"-":117}},{"path":"src/test/java/seedu/rc4hdb/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.testutil.TypicalResidents.getTypicalResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.GuiSettings;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ReadOnlyResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        JsonResidentBookStorage residentBookStorage \u003d new JsonResidentBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"        storageManager \u003d new StorageManager(residentBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"    public void residentBookReadSave() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"         * {@link JsonResidentBookStorage} class.","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonResidentBookStorageTest} class.","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"        ResidentBook original \u003d getTypicalResidentBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"        storageManager.saveResidentBook(original);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        ReadOnlyResidentBook retrieved \u003d storageManager.readResidentBook().get();","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"        assertEquals(original, new ResidentBook(retrieved));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"    public void getResidentBookFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"        assertNotNull(storageManager.getResidentBookFilePath());","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jq1836":14,"nseah21":3,"-":51}},{"path":"src/test/java/seedu/rc4hdb/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"nseah21":1,"-":33}},{"path":"src/test/java/seedu/rc4hdb/testutil/ResidentBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":" * A utility class to help with building ResidentBook objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":" *     {@code ResidentBook ab \u003d new ResidentBookBuilder().withResident(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"public class ResidentBookBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"    private ResidentBook residentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"    public ResidentBookBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"        residentBook \u003d new ResidentBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":"    public ResidentBookBuilder(ResidentBook residentBook) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":"        this.residentBook \u003d residentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"     * Adds a new {@code Resident} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"    public ResidentBookBuilder withResident(Resident resident) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"        residentBook.addResident(resident);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"    public ResidentBook build() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"        return residentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jq1836":34}},{"path":"src/test/java/seedu/rc4hdb/testutil/ResidentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package seedu.rc4hdb.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":" * A utility class to help with building Resident objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"public class ResidentBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"    public static final String DEFAULT_ROOM \u003d \"03-10\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"    public static final String DEFAULT_HOUSE \u003d \"D\";","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"    public static final String DEFAULT_MATRIC_NUMBER \u003d \"A0123456U\";","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"    private Name name;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"    private Email email;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"    private Room room;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"    private Gender gender;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"    private House house;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"    private MatricNumber matricNumber;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"     * Creates a {@code ResidentBuilder} with the default details.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"    public ResidentBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"        room \u003d new Room(DEFAULT_ROOM);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"        house \u003d new House(DEFAULT_HOUSE);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"        matricNumber \u003d new MatricNumber(DEFAULT_MATRIC_NUMBER);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"     * Initializes the ResidentBuilder with the data of {@code residentToCopy}.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"    public ResidentBuilder(Resident residentToCopy) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"        name \u003d residentToCopy.getName();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"        phone \u003d residentToCopy.getPhone();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"        email \u003d residentToCopy.getEmail();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"        room \u003d residentToCopy.getRoom();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"        gender \u003d residentToCopy.getGender();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"        house \u003d residentToCopy.getHouse();","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"        matricNumber \u003d residentToCopy.getMatricNumber();","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jq1836"},"content":"        tags \u003d residentToCopy.getTags();","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"alvinjiang1"},"content":"     * Sets the {@code Name} of the {@code Resident} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"alvinjiang1"},"content":"    public ResidentBuilder withName(String name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"alvinjiang1"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"alvinjiang1"},"content":"     * Sets the {@code Phone} of the {@code Resident} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"alvinjiang1"},"content":"    public ResidentBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"alvinjiang1"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"alvinjiang1"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"alvinjiang1"},"content":"     * Sets the {@code Email} of the {@code Resident} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"alvinjiang1"},"content":"    public ResidentBuilder withEmail(String email) {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"alvinjiang1"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"alvinjiang1"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"alvinjiang1"},"content":"     * Sets the {@code Room} of the {@code Resident} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"alvinjiang1"},"content":"    public ResidentBuilder withRoom(String room) {","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"alvinjiang1"},"content":"        this.room \u003d new Room(room);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"alvinjiang1"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"alvinjiang1"},"content":"     * Sets the {@code Gender} of the {@code Resident} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"alvinjiang1"},"content":"    public ResidentBuilder withGender(String gender) {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"alvinjiang1"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"alvinjiang1"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"alvinjiang1"},"content":"     * Sets the {@code House} of the {@code Resident} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"alvinjiang1"},"content":"    public ResidentBuilder withHouse(String house) {","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"alvinjiang1"},"content":"        this.house \u003d new House(house);","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"alvinjiang1"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"     * Sets the {@code MatricNumber} of the {@code Resident} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"alvinjiang1"},"content":"    public ResidentBuilder withMatricNumber(String matricNumber) {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"alvinjiang1"},"content":"        this.matricNumber \u003d new MatricNumber(matricNumber);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"alvinjiang1"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"alvinjiang1"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Resident} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"alvinjiang1"},"content":"    public ResidentBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"alvinjiang1"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"alvinjiang1"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"alvinjiang1"},"content":"    public Resident build() {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"alvinjiang1"},"content":"        return new Resident(name, phone, email, room, gender, house, matricNumber, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jq1836":11,"alvinjiang1":124}},{"path":"src/test/java/seedu/rc4hdb/testutil/ResidentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jq1836"},"content":"package seedu.rc4hdb.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jq1836"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.House;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.MatricNumber;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.fields.Room;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jq1836"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jq1836"},"content":" * A utility class to help with building ResidentDescriptor objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jq1836"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jq1836"},"content":"public class ResidentDescriptorBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jq1836"},"content":"    private ResidentDescriptor descriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jq1836"},"content":"        descriptor \u003d new ResidentDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder(ResidentDescriptor descriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jq1836"},"content":"        this.descriptor \u003d new ResidentDescriptor(descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"     * Returns an {@code ResidentDescriptor} with fields containing {@code resident}\u0027s details","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder(Resident resident) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        descriptor \u003d new ResidentDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        descriptor.setName(resident.getName());","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"        descriptor.setPhone(resident.getPhone());","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"        descriptor.setEmail(resident.getEmail());","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"        descriptor.setRoom(resident.getRoom());","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"        descriptor.setGender(resident.getGender());","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        descriptor.setHouse(resident.getHouse());","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jq1836"},"content":"        descriptor.setMatricNumber(resident.getMatricNumber());","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jq1836"},"content":"        descriptor.setTags(resident.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jq1836"},"content":"     * Sets the {@code Name} of the {@code ResidentDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"nareus"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"nareus"},"content":"     * Convenience method for {@code withName} method.","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"nareus"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"nareus"},"content":"    public ResidentDescriptorBuilder withName(Name name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"nareus"},"content":"        descriptor.setName(name);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"nareus"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jq1836"},"content":"     * Sets the {@code Phone} of the {@code ResidentDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jq1836"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"nareus"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"nareus"},"content":"     * Convenience method for {@code withPhone} method.","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"nareus"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"nareus"},"content":"    public ResidentDescriptorBuilder withPhone(Phone phone) {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"nareus"},"content":"        descriptor.setPhone(phone);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"nareus"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jq1836"},"content":"     * Sets the {@code Email} of the {@code ResidentDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"jq1836"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"nareus"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"nareus"},"content":"     * Convenience method for {@code withEmail} method.","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"nareus"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"nareus"},"content":"    public ResidentDescriptorBuilder withEmail(Email email) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"nareus"},"content":"        descriptor.setEmail(email);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"nareus"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"jq1836"},"content":"     * Sets the {@code Room} of the {@code ResidentDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder withRoom(String room) {","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"jq1836"},"content":"        descriptor.setRoom(new Room(room));","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"jq1836"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"nareus"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"nareus"},"content":"     * Convenience method for {@code withRoom} method.","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"nareus"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"nareus"},"content":"    public ResidentDescriptorBuilder withRoom(Room room) {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"nareus"},"content":"        descriptor.setRoom(room);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"nareus"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"jq1836"},"content":"     * Sets the {@code Gender} of the {@code ResidentDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"jq1836"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"jq1836"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"nareus"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"nareus"},"content":"     * Convenience method for {@code withGender} method.","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"nareus"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"nareus"},"content":"    public ResidentDescriptorBuilder withGender(Gender gender) {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"nareus"},"content":"        descriptor.setGender(gender);","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"nareus"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"jq1836"},"content":"     * Sets the {@code House} of the {@code ResidentDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder withHouse(String house) {","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"jq1836"},"content":"        descriptor.setHouse(new House(house));","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"jq1836"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"nareus"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"nareus"},"content":"     * Convenience method for {@code withHouse} method.","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"nareus"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"nareus"},"content":"    public ResidentDescriptorBuilder withHouse(House house) {","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"nareus"},"content":"        descriptor.setHouse(house);","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"nareus"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"jq1836"},"content":"     * Sets the {@code MatricNumber} of the {@code ResidentDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder withMatricNumber(String matricNumber) {","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"jq1836"},"content":"        descriptor.setMatricNumber(new MatricNumber(matricNumber));","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"jq1836"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"nareus"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"nareus"},"content":"     * Convenience method for {@code withMatricNumber} method.","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"nareus"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"nareus"},"content":"    public ResidentDescriptorBuilder withMatricNumber(MatricNumber matricNumber) {","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"nareus"},"content":"        descriptor.setMatricNumber(matricNumber);","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"nareus"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"jq1836"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"jq1836"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code ResidentDescriptor}","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"jq1836"},"content":"     * that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"jq1836"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"jq1836"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"jq1836"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"jq1836"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"jq1836"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"nareus"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"nareus"},"content":"     * Convenience method for {@code withTags} method.","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"nareus"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"nareus"},"content":"    public ResidentDescriptorBuilder withTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"nareus"},"content":"        descriptor.setTags(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"nareus"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"nareus"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"nareus"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"jq1836"},"content":"    public ResidentDescriptor build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"jq1836"},"content":"        return descriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"jq1836"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"jq1836"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jq1836":117,"nareus":66}},{"path":"src/test/java/seedu/rc4hdb/testutil/ResidentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package seedu.rc4hdb.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_HOUSE;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.logic.commands.modelcommands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.ResidentDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":" * A utility class for Resident.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"public class ResidentUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jq1836"},"content":"     * Returns an add command string for adding the {@code resident}.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"    public static String getAddCommand(Resident resident) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jq1836"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getResidentDetails(resident);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jq1836"},"content":"     * Returns the part of command string for the given {@code resident}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jq1836"},"content":"    public static String getResidentDetails(Resident resident) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"        sb.append(PREFIX_NAME + resident.getName().fullName).append(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jq1836"},"content":"        sb.append(PREFIX_PHONE + resident.getPhone().value).append(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jq1836"},"content":"        sb.append(PREFIX_EMAIL + resident.getEmail().value).append(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"        sb.append(PREFIX_ROOM + resident.getRoom().room).append(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jq1836"},"content":"        sb.append(PREFIX_GENDER + resident.getGender().gender).append(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"jq1836"},"content":"        sb.append(PREFIX_HOUSE + resident.getHouse().house).append(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jq1836"},"content":"        sb.append(PREFIX_MATRIC_NUMBER + resident.getMatricNumber().matricNumber).append(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"        resident.getTags().stream().forEach(","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"        );","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"     * Returns the part of command string for the given {@code ResidentDescriptor}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"    public static String getResidentDescriptorDetails(ResidentDescriptor descriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jq1836"},"content":"        descriptor.getRoom().ifPresent(room -\u003e sb.append(PREFIX_ROOM).append(room.room).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jq1836"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.gender).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jq1836"},"content":"        descriptor.getHouse().ifPresent(house -\u003e sb.append(PREFIX_HOUSE).append(house.house).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jq1836"},"content":"        descriptor.getMatricNumber().ifPresent(matricNumber -\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jq1836"},"content":"                sb.append(PREFIX_MATRIC_NUMBER).append(matricNumber.matricNumber).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"            } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"alvinjiang1"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"alvinjiang1"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jq1836":23,"alvinjiang1":49}},{"path":"src/test/java/seedu/rc4hdb/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nseah21":1,"-":71}},{"path":"src/test/java/seedu/rc4hdb/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jq1836"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"jq1836"},"content":"     * Returns the middle index of the resident in the {@code model}\u0027s resident list.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"jq1836"},"content":"        return Index.fromOneBased(model.getFilteredResidentList().size() / 2);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"jq1836"},"content":"     * Returns the last index of the resident in the {@code model}\u0027s resident list.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"        return Index.fromOneBased(model.getFilteredResidentList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"jq1836"},"content":"     * Returns the resident in the {@code model}\u0027s resident list at {@code index}.","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"jq1836"},"content":"    public static Resident getResident(Model model, Index index) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jq1836"},"content":"        return model.getFilteredResidentList().get(index.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jq1836":8,"nseah21":3,"-":44}},{"path":"src/test/java/seedu/rc4hdb/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.commons.core.index.Index;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"    public static final Index INDEX_FIRST_RESIDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"    public static final Index INDEX_SECOND_RESIDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":"    public static final Index INDEX_THIRD_RESIDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"nseah21":2,"alvinjiang1":3,"-":7}},{"path":"src/test/java/seedu/rc4hdb/testutil/TypicalResidents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package seedu.rc4hdb.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_HOUSE_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_HOUSE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_MATRIC_NUMBER_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_ROOM_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jq1836"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"import static seedu.rc4hdb.logic.commands.modelcommands.ModelCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.ResidentBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"import seedu.rc4hdb.model.resident.Resident;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jq1836"},"content":" * A utility class containing a list of {@code Resident} objects to be used in tests.","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"public class TypicalResidents {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident ALICE \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"            .withRoom(\"11-04\")","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(\"F\")","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(\"A\")","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(\"A0431582U\")","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident BENSON \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(\"benson@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jq1836"},"content":"            .withRoom(\"12-01\")","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(\"U\")","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(\"A0728394U\")","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident CARL \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"            .withRoom(\"05-08\")","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(\"D\")","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(\"A0273917U\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident DANIEL \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"            .withRoom(\"12-11\")","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(\"N\")","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(\"A0293856U\")","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident ELLE \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"alvinjiang1"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jq1836"},"content":"            .withPhone(\"94822241\")","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"            .withRoom(\"06-22\")","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(\"F\")","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(\"U\")","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(\"A0827394U\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident FIONA \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"alvinjiang1"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"jq1836"},"content":"            .withPhone(\"94824271\")","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"alvinjiang1"},"content":"            .withRoom(\"03-7\")","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(\"F\")","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(\"A\")","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(\"A0827360U\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident GEORGE \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"alvinjiang1"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"jq1836"},"content":"            .withPhone(\"94824421\")","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"alvinjiang1"},"content":"            .withRoom(\"09-14\")","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(\"D\")","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(\"A0738491U\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"alvinjiang1"},"content":"    // Manually added","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident HOON \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"alvinjiang1"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"jq1836"},"content":"            .withPhone(\"84824241\")","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"alvinjiang1"},"content":"            .withRoom(\"06-33\")","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(\"N\")","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(\"A0299388U\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident IDA \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"alvinjiang1"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"jq1836"},"content":"            .withPhone(\"84821311\")","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"alvinjiang1"},"content":"            .withRoom(\"02-14\")","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(\"F\")","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(\"A\")","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(\"A0778937U\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"alvinjiang1"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident AMY \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"alvinjiang1"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"alvinjiang1"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"alvinjiang1"},"content":"            .withRoom(VALID_ROOM_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(VALID_GENDER_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(VALID_HOUSE_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(VALID_MATRIC_NUMBER_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"alvinjiang1"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"alvinjiang1"},"content":"    public static final Resident BOB \u003d new ResidentBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"alvinjiang1"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"alvinjiang1"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"alvinjiang1"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"alvinjiang1"},"content":"            .withRoom(VALID_ROOM_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"alvinjiang1"},"content":"            .withGender(VALID_GENDER_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"alvinjiang1"},"content":"            .withHouse(VALID_HOUSE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"alvinjiang1"},"content":"            .withMatricNumber(VALID_MATRIC_NUMBER_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"alvinjiang1"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"alvinjiang1"},"content":"            .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"alvinjiang1"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"alvinjiang1"},"content":"    private TypicalResidents() {} // prevents instantiation","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"jq1836"},"content":"     * Returns an {@code ResidentBook} with all the typical residents.","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"alvinjiang1"},"content":"    public static ResidentBook getTypicalResidentBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"alvinjiang1"},"content":"        ResidentBook rb \u003d new ResidentBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"alvinjiang1"},"content":"        for (Resident resident : getTypicalResidents()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"alvinjiang1"},"content":"            rb.addResident(resident);","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"alvinjiang1"},"content":"        return rb;","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"alvinjiang1"},"content":"    public static List\u003cResident\u003e getTypicalResidents() {","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"alvinjiang1"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jq1836":14,"alvinjiang1":136}},{"path":"src/test/java/seedu/rc4hdb/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"nseah21":1,"-":34}},{"path":"src/test/java/seedu/rc4hdb/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nseah21"},"content":"package seedu.rc4hdb.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nseah21"},"content":"import static seedu.rc4hdb.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"nseah21"},"content":"import seedu.rc4hdb.MainApp;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"nseah21":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"\u003c?import seedu.rc4hdb.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"nseah21":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"nseah21"},"content":"\u003cfx:root type\u003d\"seedu.rc4hdb.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"nseah21":1,"-":5}}]
